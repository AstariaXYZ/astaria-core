{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "undoWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "933:2266:38:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "933:2266:38:-:0;;;;;;;;;-1:-1:-1;933:2266:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;-1:-1:-1;;933:2266:38;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;933:2266:38;;;;:::o;:::-;;;;;;;;;;;;;;;1290:68;488:25:0;933:2266:38;;488:25:0;998:2:11;488:25:0;933:2266:38;3004:164:0;;;;;;;;;;2864:310;;488:25;579:87;;;;933:2266:38;;;;;;;;;1329:28;;;;;;;;;933:2266;1329:28;;;;933:2266;-1:-1:-1;;933:2266:38;;-1:-1:-1;;;1290:68:38;;;933:2266;;;;;;;;;:::i;:::-;1290:68;933:2266;;1290:68;;;;;;:::i;:::-;933:2266;;;;;;;:::i;:::-;;;;1329:28;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;933:2266;;;;;;;-1:-1:-1;;;;;933:2266:38;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;933:2266:38;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;933:2266:38;;;;;;:::i;:::-;;;5186:10:11;;-1:-1:-1;933:2266:38;5176:9:11;933:2266:38;;;5176:30:11;933:2266:38;;-1:-1:-1;933:2266:38;;;;;;;;;;;;;;;;;5176:30:11;933:2266:38;;;;;;-1:-1:-1;;;;;933:2266:38;;5186:10:11;;5231:37;;933:2266:38;;5231:37:11;933:2266:38;;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;933:2266:38;;;-1:-1:-1;933:2266:38;;;5804:9:11;933:2266:38;;;;;;;;5820:10:11;933:2266:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6213:26:11;933:2266:38;;;5993:15:11;;933:2266:38;;5882:28:11;;;5878:105;;933:2266:38;-1:-1:-1;;;;;;933:2266:38;;;;;;;;;;;;;5993:15:11;:25;933:2266:38;;;5993:25:11;:::i;:::-;933:2266:38;;-1:-1:-1;;;;;933:2266:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6213:26:11;933:2266:38;;5286:4:11;933:2266:38;;;;;5878:105:11;933:2266:38;;;;;;;;5878:105:11;-1:-1:-1;;;;;933:2266:38;;;;;;5804:9:11;933:2266:38;;;;;5926:27:11;;5820:10;;5926:15;933:2266:38;;;;;;;;;;;;;;;;5926:27:11;933:2266:38;5878:105:11;;;933:2266:38;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;2139:10;933:2266;;;;;;;;;;2288:82;;933:2266;;;2121:64;;933:2266;;;2129:31;;2121:64;:::i;:::-;2213:6;2139:10;;2213:6;:::i;:::-;2288:82;2289:33;2230:19;998:2:11;488:25:0;933:2266:38;3004:164:0;;;;;;;;;;2864:310;;488:25;579:87;;;;;933:2266:38;2230:19;933:2266;-1:-1:-1;933:2266:38;2289:33;;:::i;:::-;933:2266;;-1:-1:-1;;;2326:44:38;;2364:4;933:2266;2326:44;;933:2266;;;;;;-1:-1:-1;;;;;933:2266:38;;2326:44;;;;;;;933:2266;-1:-1:-1;2326:44:38;;;933:2266;2288:82;;:::i;:::-;2139:10;;2288:82;;:::i;:::-;933:2266;2326:44;;;;;933:2266;2326:44;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;933:2266;;;;;;;-1:-1:-1;;933:2266:38;;;;;7734:24:11;;:::i;:::-;933:2266:38;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;;;:::i;:::-;;;488:25:0;933:2266:38;3004:164:0;;;;;;;;;;2864:310;;488:25;579:87;;;2715:10:38;:21;933:2266;;;-1:-1:-1;;;;;;;;;;;;;933:2266:38;;;;;;;;;;;;;;;;-1:-1:-1;;;;;933:2266:38;;;;;;;;;;;;;;;;;;;;;;8488:32:11;933:2266:38;;;;;:::i;:::-;;;;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;;998:2:11;488:25:0;933:2266:38;3004:164:0;;;;;;;;;;2864:310;;488:25;579:87;;;;933:2266:38;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;-1:-1:-1;;;;;933:2266:38;;:::i;:::-;;-1:-1:-1;933:2266:38;;;;;;-1:-1:-1;933:2266:38;;;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;-1:-1:-1;;;;;933:2266:38;;:::i;:::-;;-1:-1:-1;933:2266:38;4668:41:11;933:2266:38;;;;-1:-1:-1;933:2266:38;;;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;;488:25:0;933:2266:38;3004:164:0;;;;;;;;;;2864:310;;488:25;579:87;;;933:2266:38;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;3130:60;933:2266;;998:2:11;488:25:0;933:2266:38;3004:164:0;;;;;;;;;;2864:310;;488:25;579:87;;;;933:2266:38;;;;;;;;;3138:41;;3168:10;933:2266;3138:41;;933:2266;3138:41;;;;;;;933:2266;-1:-1:-1;3138:41:38;;;933:2266;;;;-1:-1:-1;3138:51:38;3130:60;:::i;3138:41::-;;;;933:2266;3138:41;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;933:2266;;;;;;;;;;;;;;;488:25:0;;933:2266:38;3004:164:0;;;;;;;;;;2864:310;;488:25;933:2266:38;;-1:-1:-1;;;1652:28:38;;579:87:0;933:2266:38;;;998:2:11;579:87:0;;;;;1652:28:38;;;;;;;933:2266;1652:28;;;;933:2266;;;1612:69;933:2266;1612:69;933:2266;;579:87:0;;;;;;1612:69:38;;;;:::i;1652:28::-;1612:69;1652:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;933:2266;;;;;;;-1:-1:-1;;933:2266:38;;;;;;:::i;:::-;;;5399:10:11;;-1:-1:-1;933:2266:38;5389:9:11;933:2266:38;;;-1:-1:-1;933:2266:38;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;933:2266:38;5389:9:11;933:2266:38;;;-1:-1:-1;933:2266:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;933:2266:38;5399:10:11;5615:32;;933:2266:38;;;5389:9:11;933:2266:38;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;6686:735:11;7607:31;6451:15;6431:63;6451:15;6439:27;;;6431:63;:::i;:::-;6744:588;;7734:24;;:::i;:::-;7197:13;;;;933:2266:38;;;;;;;;7197:6:11;933:2266:38;;;;;;;7197:13:11;933:2266:38;;;;;;;;;;;6949:95:11;6905:379;;;933:2266:38;;;-1:-1:-1;;;;;933:2266:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6905:379:11;933:2266:38;6905:379:11;933:2266:38;;6905:379:11;;;;;;;;:::i;:::-;933:2266:38;6866:444:11;;933:2266:38;;6744:588:11;;;;;;;;933:2266:38;;;;;;;;;;;;;;;;;;;;6744:588:11;;;;;;;;;:::i;:::-;933:2266:38;6713:637:11;;933:2266:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6686:735:11;-1:-1:-1;;6686:735:11;;;;;;;;933:2266:38;6686:735:11;;;;;933:2266:38;6686:735:11;;933:2266:38;;7537:36:11;933:2266:38;7537:27:11;933:2266:38;;;;;;7436:86:11;933:2266:38;;;7444:30:11;;;:59;;;;933:2266:38;7436:86:11;;:::i;:::-;-1:-1:-1;;;;;933:2266:38;;;;;5804:9:11;933:2266:38;;;;;;;7537:36:11;933:2266:38;;;;;;;;;;;;;7607:31:11;933:2266:38;;7444:59:11;933:2266:38;;;;;7478:25:11;7444:59;;;6686:735;;;:::i;:::-;;;933:2266:38;;;;;;;-1:-1:-1;;933:2266:38;;;;;4509:64:11;933:2266:38;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;933:2266:38;;;-1:-1:-1;933:2266:38;;;4509:64:11;933:2266:38;;;;;;;;;;;;-1:-1:-1;933:2266:38;;;;;;;4509:64:11;933:2266:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;933:2266:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;;7771:425:11;933:2266:38;;-1:-1:-1;;;8042:27:11;;;933:2266:38;8042:27:11;933:2266:38;8056:4:11;8042:27;;;;;;;7771:425;8042:27;;;;7771:425;933:2266:38;;;;;;8026:45:11;933:2266:38;;;7885:294:11;;933:2266:38;7913:95:11;933:2266:38;;;;;;8089:14:11;933:2266:38;;;;8121:13:11;933:2266:38;;;;8056:4:11;933:2266:38;;;;;7885:294:11;;933:2266:38;;;;;;;;;;;;7771:425:11;933:2266:38;;;7862:327:11;;7771:425;:::o;933:2266:38:-;;;:::i;:::-;;;8042:27:11;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;933:2266:38;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;-1:-1:-1;;;933:2266:38;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;8533:328:11:-;-1:-1:-1;;;;;933:2266:38;-1:-1:-1;933:2266:38;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;8820:34:11;8533:328;;933:2266:38;;;;;;;;8533:328:11;933:2266:38;;;;;;;;;;;;8820:34:11;8533:328::o;933:2266:38:-;;;:::i;:::-;;;1507:535:28;2129:9:38;1644:392:28;;;;;;;;;;;;;;;1507:535;:::o;2864:1456:29:-;-1:-1:-1;2864:1456:29;;2999:1269;2864:1456;2999:1269;2864:1456;2999:1269;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2999:1269:29;;;;;933:2266:38;;;2864:1456:29:o;933:2266:38:-;2999:1269:29;933:2266:38;-1:-1:-1;;;933:2266:38;;2999:1269:29;;933:2266:38;;;;2999:1269:29;933:2266:38;;;-1:-1:-1;;;2999:1269:29;933:2266:38;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "underlying()": "6f307dc3",
    "undoWithdraw(uint256)": "93256e70",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"undoWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"androolloyd\",\"kind\":\"dev\",\"methods\":{\"mint(address,uint256)\":{\"params\":{\"receiver\":\"The receiver of the Withdraw Tokens.\",\"shares\":\"The number of shares to mint.\"}},\"name()\":{\"returns\":{\"_0\":\"The name of this WithdrawProxy.\"}},\"symbol()\":{\"returns\":{\"_0\":\"The symbol of this WithdrawProxy.\"}},\"undoWithdraw(uint256)\":{\"params\":{\"amount\":\"The amount of WithdrawTokens the user wishes to burn.\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of the underlying PublicVault asset the user is withdrawing. The user must have as many WithdrawProxy tokens as underlying PublicVault assets they are withdrawing, and the WithdrawProxy must have a sufficient balance of the underlying PublicVault asset.\"}}},\"title\":\"WithdrawProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Mints WithdrawTokens for withdrawing liquidity providers, redeemable by the end of the next epoch.\"},\"name()\":{\"notice\":\"Public view function to return the name of this WithdrawProxy.\"},\"symbol()\":{\"notice\":\"Public view function to return the symbol of this WithdrawProxy.\"},\"undoWithdraw(uint256)\":{\"notice\":\"Burns WithdrawTokens, stops accruing funds for the liquidity provider to withdraw, and reinvests any accrued funds back into the liquidity provider's PublicVault.\"},\"withdraw(uint256)\":{\"notice\":\"Sends collected funds to a withdrawing liquidity provider\"}},\"notice\":\"This contract collects funds for liquidity providers who are exiting. When a liquidity provider is the first in an epoch to mark that they would like to withdraw their funds, a WithdrawProxy for the liquidity provider's PublicVault is deployed to collect loan repayments until the end of the next epoch. Users are minted WithdrawTokens according to their balance in the protocol which are redeemable 1:1 for the underlying PublicVault asset by the end of the next epoch.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WithdrawProxy.sol\":\"WithdrawProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@rari-capital/solmate/=lib/seaport/./lib/solmate/\",\":auction-house/=lib/auction-house/src/\",\":auction/=lib/auction-house/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":contracts/=lib/seaport/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry_eip-4626/=lib/foundry_eip-4626/src/\",\":gpl/=lib/gpl/src/\",\":murky/=lib/seaport/./lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":seaport/=lib/seaport/contracts/\",\":solmate/=lib/solmate/src/\",\":v3-periphery/=lib/v3-periphery/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb\",\"dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq\"]},\"lib/gpl/src/ERC4626-Cloned.sol\":{\"keccak256\":\"0xfb050829553e00127d3b3bb86ec328b4fd4d5e26101bd5e5b5622b2969e54d55\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e8c98e653a09226e4f6f936af9d5ff2b9fca95a36022e230c88ee8ab8d9ee0a9\",\"dweb:/ipfs/QmUmGp1jKgMJSC86uN2cFPaeZvLPMB1gQiHJoVjq4xbfVy\"]},\"lib/gpl/src/interfaces/ITransferProxy.sol\":{\"keccak256\":\"0x726f796c9d6734fc69dec73f70cfb552ee9ab004efce78c60f816dda512f80b2\",\"urls\":[\"bzz-raw://ef07d7b7a3843d8a69af77778926f02112660100285c2b9e8b71024b3d58b0eb\",\"dweb:/ipfs/QmYJis1GfRHhPZLrVBqWQB5dKTJ3pweXWURDp2bP3UPUbY\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xd5cf8213a40d727af89c93dd359ad68984c123c1a1a93fc9ad7ba62b3436fb75\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://70e87bbc23f0b02fe804779714d65f559db59827d48e5243ee029eaf1c48289d\",\"dweb:/ipfs/QmZtq71QoREyPjoPU3ozq9Fae62jP5kjrcgcEnh4ytFPhf\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0xab8ca9afbb0f7412e1408d4f111b53cc00813bc752236638ad336050ea2188f8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cd892e4743a124063b7bc590c6f88f209a18a4831b18045afd843264fa75427f\",\"dweb:/ipfs/QmRunGD7E8enP5oZKiN8DxvAJew7J3jaz1iiHTFZj5Ghfc\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/WithdrawProxy.sol\":{\"keccak256\":\"0xd2269297fc362f855a4ff01b788e4c164910a80070908b3fe667fba4be5e5461\",\"urls\":[\"bzz-raw://87c52242f0bff709a15950ee53a6227812a32effade74401e2c782530a1bd36c\",\"dweb:/ipfs/QmQzdsKGe815yZygdoUqV5i3fJ2A7NPByqDme1R9vPe5Gx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undoWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mint(address,uint256)": {
            "params": {
              "receiver": "The receiver of the Withdraw Tokens.",
              "shares": "The number of shares to mint."
            }
          },
          "name()": {
            "returns": {
              "_0": "The name of this WithdrawProxy."
            }
          },
          "symbol()": {
            "returns": {
              "_0": "The symbol of this WithdrawProxy."
            }
          },
          "undoWithdraw(uint256)": {
            "params": {
              "amount": "The amount of WithdrawTokens the user wishes to burn."
            }
          },
          "withdraw(uint256)": {
            "params": {
              "amount": "The amount of the underlying PublicVault asset the user is withdrawing. The user must have as many WithdrawProxy tokens as underlying PublicVault assets they are withdrawing, and the WithdrawProxy must have a sufficient balance of the underlying PublicVault asset."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "mint(address,uint256)": {
            "notice": "Mints WithdrawTokens for withdrawing liquidity providers, redeemable by the end of the next epoch."
          },
          "name()": {
            "notice": "Public view function to return the name of this WithdrawProxy."
          },
          "symbol()": {
            "notice": "Public view function to return the symbol of this WithdrawProxy."
          },
          "undoWithdraw(uint256)": {
            "notice": "Burns WithdrawTokens, stops accruing funds for the liquidity provider to withdraw, and reinvests any accrued funds back into the liquidity provider's PublicVault."
          },
          "withdraw(uint256)": {
            "notice": "Sends collected funds to a withdrawing liquidity provider"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@rari-capital/solmate/=lib/seaport/./lib/solmate/",
        ":auction-house/=lib/auction-house/src/",
        ":auction/=lib/auction-house/src/",
        ":clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        ":contracts/=lib/seaport/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry_eip-4626/=lib/foundry_eip-4626/src/",
        ":gpl/=lib/gpl/src/",
        ":murky/=lib/seaport/./lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":seaport/=lib/seaport/contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/WithdrawProxy.sol": "WithdrawProxy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545",
        "urls": [
          "bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb",
          "dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq"
        ],
        "license": "BSD"
      },
      "lib/gpl/src/ERC4626-Cloned.sol": {
        "keccak256": "0xfb050829553e00127d3b3bb86ec328b4fd4d5e26101bd5e5b5622b2969e54d55",
        "urls": [
          "bzz-raw://e8c98e653a09226e4f6f936af9d5ff2b9fca95a36022e230c88ee8ab8d9ee0a9",
          "dweb:/ipfs/QmUmGp1jKgMJSC86uN2cFPaeZvLPMB1gQiHJoVjq4xbfVy"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/gpl/src/interfaces/ITransferProxy.sol": {
        "keccak256": "0x726f796c9d6734fc69dec73f70cfb552ee9ab004efce78c60f816dda512f80b2",
        "urls": [
          "bzz-raw://ef07d7b7a3843d8a69af77778926f02112660100285c2b9e8b71024b3d58b0eb",
          "dweb:/ipfs/QmYJis1GfRHhPZLrVBqWQB5dKTJ3pweXWURDp2bP3UPUbY"
        ],
        "license": null
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xd5cf8213a40d727af89c93dd359ad68984c123c1a1a93fc9ad7ba62b3436fb75",
        "urls": [
          "bzz-raw://70e87bbc23f0b02fe804779714d65f559db59827d48e5243ee029eaf1c48289d",
          "dweb:/ipfs/QmZtq71QoREyPjoPU3ozq9Fae62jP5kjrcgcEnh4ytFPhf"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0xab8ca9afbb0f7412e1408d4f111b53cc00813bc752236638ad336050ea2188f8",
        "urls": [
          "bzz-raw://cd892e4743a124063b7bc590c6f88f209a18a4831b18045afd843264fa75427f",
          "dweb:/ipfs/QmRunGD7E8enP5oZKiN8DxvAJew7J3jaz1iiHTFZj5Ghfc"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/WithdrawProxy.sol": {
        "keccak256": "0xd2269297fc362f855a4ff01b788e4c164910a80070908b3fe667fba4be5e5461",
        "urls": [
          "bzz-raw://87c52242f0bff709a15950ee53a6227812a32effade74401e2c782530a1bd36c",
          "dweb:/ipfs/QmQzdsKGe815yZygdoUqV5i3fJ2A7NPByqDme1R9vPe5Gx"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/WithdrawProxy.sol",
    "id": 35889,
    "exportedSymbols": {
      "Auth": [
        27535
      ],
      "Authority": [
        27548
      ],
      "ERC20": [
        28321
      ],
      "ERC20Cloned": [
        24848
      ],
      "FixedPointMathLib": [
        29076
      ],
      "IBase": [
        24408
      ],
      "ITransferProxy": [
        26188
      ],
      "SafeTransferLib": [
        29161
      ],
      "WithdrawProxy": [
        35888
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:3200:38",
    "nodes": [
      {
        "id": 35722,
        "nodeType": "PragmaDirective",
        "src": "0:24:38",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 35725,
        "nodeType": "ImportDirective",
        "src": "26:54:38",
        "absolutePath": "lib/solmate/src/auth/Auth.sol",
        "file": "solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35889,
        "sourceUnit": 27549,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35723,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27535,
              "src": "34:4:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 35724,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27548,
              "src": "40:9:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35727,
        "nodeType": "ImportDirective",
        "src": "81:66:38",
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35889,
        "sourceUnit": 29162,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35726,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29161,
              "src": "89:15:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35730,
        "nodeType": "ImportDirective",
        "src": "148:58:38",
        "absolutePath": "lib/gpl/src/ERC4626-Cloned.sol",
        "file": "gpl/ERC4626-Cloned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35889,
        "sourceUnit": 25362,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35728,
              "name": "ERC20Cloned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24848,
              "src": "156:11:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 35729,
              "name": "IBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24408,
              "src": "169:5:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35732,
        "nodeType": "ImportDirective",
        "src": "207:47:38",
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35889,
        "sourceUnit": 28322,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35731,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28321,
              "src": "215:5:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35734,
        "nodeType": "ImportDirective",
        "src": "255:65:38",
        "absolutePath": "lib/gpl/src/interfaces/ITransferProxy.sol",
        "file": "gpl/interfaces/ITransferProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35889,
        "sourceUnit": 26189,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35733,
              "name": "ITransferProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26188,
              "src": "263:14:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35736,
        "nodeType": "ImportDirective",
        "src": "321:70:38",
        "absolutePath": "lib/solmate/src/utils/FixedPointMathLib.sol",
        "file": "solmate/utils/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35889,
        "sourceUnit": 29077,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35735,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29076,
              "src": "329:17:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35888,
        "nodeType": "ContractDefinition",
        "src": "933:2266:38",
        "nodes": [
          {
            "id": 35743,
            "nodeType": "UsingForDirective",
            "src": "977:32:38",
            "global": false,
            "libraryName": {
              "id": 35740,
              "name": "SafeTransferLib",
              "nameLocations": [
                "983:15:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29161,
              "src": "983:15:38"
            },
            "typeName": {
              "id": 35742,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35741,
                "name": "ERC20",
                "nameLocations": [
                  "1003:5:38"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28321,
                "src": "1003:5:38"
              },
              "referencedDeclaration": 28321,
              "src": "1003:5:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$28321",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 35746,
            "nodeType": "UsingForDirective",
            "src": "1014:36:38",
            "global": false,
            "libraryName": {
              "id": 35744,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "1020:17:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29076,
              "src": "1020:17:38"
            },
            "typeName": {
              "id": 35745,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1042:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 35769,
            "nodeType": "FunctionDefinition",
            "src": "1197:169:38",
            "body": {
              "id": 35768,
              "nodeType": "Block",
              "src": "1266:100:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4153542d57697468647261775661756c742d",
                            "id": 35758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1307:20:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8d1363d9aa8662f83e35293e2314690eebd766cc568e636b3bdeab3ad298213c",
                              "typeString": "literal_string \"AST-WithdrawVault-\""
                            },
                            "value": "AST-WithdrawVault-"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 35760,
                                      "name": "underlying",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24432,
                                      "src": "1335:10:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 35761,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1335:12:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 35759,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28321,
                                  "src": "1329:5:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$28321_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 35762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1329:19:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$28321",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 35763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1349:6:38",
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27956,
                              "src": "1329:26:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 35764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1329:28:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_8d1363d9aa8662f83e35293e2314690eebd766cc568e636b3bdeab3ad298213c",
                              "typeString": "literal_string \"AST-WithdrawVault-\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 35756,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1290:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1294:12:38",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1290:16:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 35765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:68:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 35755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1283:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 35754,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1283:6:38",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:76:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 35753,
                  "id": 35767,
                  "nodeType": "Return",
                  "src": "1276:83:38"
                }
              ]
            },
            "baseFunctions": [
              24392
            ],
            "documentation": {
              "id": 35747,
              "nodeType": "StructuredDocumentation",
              "src": "1056:136:38",
              "text": " @notice Public view function to return the name of this WithdrawProxy.\n @return The name of this WithdrawProxy."
            },
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1206:4:38",
            "overrides": {
              "id": 35750,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35749,
                  "name": "IBase",
                  "nameLocations": [
                    "1235:5:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24408,
                  "src": "1235:5:38"
                }
              ],
              "src": "1225:16:38"
            },
            "parameters": {
              "id": 35748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:2:38"
            },
            "returnParameters": {
              "id": 35753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35752,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35769,
                  "src": "1251:13:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35751,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1250:15:38"
            },
            "scope": 35888,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35795,
            "nodeType": "FunctionDefinition",
            "src": "1517:172:38",
            "body": {
              "id": 35794,
              "nodeType": "Block",
              "src": "1588:101:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4153542d57",
                            "id": 35781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1629:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_97e813ba254edae5053f0c85d15405f570aab6b27b89b564241bc3a8b78b7fa9",
                              "typeString": "literal_string \"AST-W\""
                            },
                            "value": "AST-W"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 35782,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24422,
                              "src": "1638:5:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 35783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1638:7:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "2d",
                            "id": 35784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1647:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            "value": "-"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 35786,
                                      "name": "underlying",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24432,
                                      "src": "1658:10:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 35787,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1658:12:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 35785,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28321,
                                  "src": "1652:5:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$28321_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 35788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1652:19:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$28321",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 35789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1672:6:38",
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27956,
                              "src": "1652:26:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 35790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1652:28:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_97e813ba254edae5053f0c85d15405f570aab6b27b89b564241bc3a8b78b7fa9",
                              "typeString": "literal_string \"AST-W\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 35779,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1612:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1616:12:38",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1612:16:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 35791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1612:69:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 35778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1605:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 35777,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1605:6:38",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1605:77:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 35776,
                  "id": 35793,
                  "nodeType": "Return",
                  "src": "1598:84:38"
                }
              ]
            },
            "baseFunctions": [
              24397
            ],
            "documentation": {
              "id": 35770,
              "nodeType": "StructuredDocumentation",
              "src": "1372:140:38",
              "text": " @notice Public view function to return the symbol of this WithdrawProxy.\n @return The symbol of this WithdrawProxy."
            },
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1526:6:38",
            "overrides": {
              "id": 35773,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35772,
                  "name": "IBase",
                  "nameLocations": [
                    "1557:5:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24408,
                  "src": "1557:5:38"
                }
              ],
              "src": "1547:16:38"
            },
            "parameters": {
              "id": 35771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1532:2:38"
            },
            "returnParameters": {
              "id": 35776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35795,
                  "src": "1573:13:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35774,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1572:15:38"
            },
            "scope": 35888,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35844,
            "nodeType": "FunctionDefinition",
            "src": "2070:317:38",
            "body": {
              "id": 35843,
              "nodeType": "Block",
              "src": "2111:276:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 35802,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24521,
                            "src": "2129:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 35805,
                          "indexExpression": {
                            "expression": {
                              "id": 35803,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2139:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 35804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2143:6:38",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2139:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2129:21:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 35806,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35798,
                          "src": "2154:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2129:31:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742062616c616e6365",
                        "id": 35808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2162:22:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
                          "typeString": "literal_string \"insufficient balance\""
                        },
                        "value": "insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
                          "typeString": "literal_string \"insufficient balance\""
                        }
                      ],
                      "id": 35801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2121:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:64:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35810,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:64:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35812,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2201:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2205:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2201:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35814,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35798,
                        "src": "2213:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35811,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24847,
                      "src": "2195:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 35815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:25:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35816,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:25:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35822,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2276:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2280:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2276:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 35826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2307:1:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                {
                                  "id": 35827,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24517,
                                  "src": "2310:11:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 35824,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35798,
                                  "src": "2289:6:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 35825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2296:10:38",
                                "memberName": "mulDivDown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29007,
                                "src": "2289:17:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 35828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2289:33:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 35829,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2288:35:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 35837,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2364:4:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WithdrawProxy_$35888",
                                    "typeString": "contract WithdrawProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WithdrawProxy_$35888",
                                    "typeString": "contract WithdrawProxy"
                                  }
                                ],
                                "id": 35836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2356:7:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 35835,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2356:7:38",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 35838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2356:13:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 35831,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24432,
                                    "src": "2332:10:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 35832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2332:12:38",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 35830,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28321,
                                "src": "2326:5:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$28321_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 35833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2326:19:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$28321",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 35834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2346:9:38",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27964,
                            "src": "2326:29:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 35839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2326:44:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2288:82:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 35818,
                              "name": "underlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24432,
                              "src": "2236:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 35819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2236:12:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 35817,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28321,
                          "src": "2230:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$28321_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 35820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2230:19:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28321",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 35821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2250:12:38",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29140,
                      "src": "2230:32:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$28321_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$28321_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 35841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2230:150:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35842,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:150:38"
                }
              ]
            },
            "documentation": {
              "id": 35796,
              "nodeType": "StructuredDocumentation",
              "src": "1695:370:38",
              "text": " @notice Sends collected funds to a withdrawing liquidity provider\n @param amount The amount of the underlying PublicVault asset the user is withdrawing. The user must have as many WithdrawProxy tokens as underlying PublicVault assets they are withdrawing, and the WithdrawProxy must have a sufficient balance of the underlying PublicVault asset."
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2079:8:38",
            "parameters": {
              "id": 35799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35798,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2096:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 35844,
                  "src": "2088:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2088:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2087:16:38"
            },
            "returnParameters": {
              "id": 35800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2111:0:38"
            },
            "scope": 35888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35867,
            "nodeType": "FunctionDefinition",
            "src": "2634:166:38",
            "body": {
              "id": 35866,
              "nodeType": "Block",
              "src": "2697:103:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35853,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2715:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2719:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2715:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35855,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24422,
                            "src": "2729:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 35856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2729:7:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2715:21:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e65722063616e206d696e74",
                        "id": 35858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2738:21:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_855990b7ed263a54f92beb4ec42fdc493ace8410bcfc3c519b3465cc62e4437d",
                          "typeString": "literal_string \"only owner can mint\""
                        },
                        "value": "only owner can mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_855990b7ed263a54f92beb4ec42fdc493ace8410bcfc3c519b3465cc62e4437d",
                          "typeString": "literal_string \"only owner can mint\""
                        }
                      ],
                      "id": 35852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2707:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2707:53:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35860,
                  "nodeType": "ExpressionStatement",
                  "src": "2707:53:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35862,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35847,
                        "src": "2776:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35863,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35849,
                        "src": "2786:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35861,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24819,
                      "src": "2770:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 35864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2770:23:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35865,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:23:38"
                }
              ]
            },
            "documentation": {
              "id": 35845,
              "nodeType": "StructuredDocumentation",
              "src": "2393:236:38",
              "text": " @notice Mints WithdrawTokens for withdrawing liquidity providers, redeemable by the end of the next epoch.\n @param receiver The receiver of the Withdraw Tokens.\n @param shares The number of shares to mint."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2643:4:38",
            "parameters": {
              "id": 35850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35847,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2656:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 35867,
                  "src": "2648:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35849,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "2674:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 35867,
                  "src": "2666:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2647:34:38"
            },
            "returnParameters": {
              "id": 35851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2697:0:38"
            },
            "scope": 35888,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 35887,
            "nodeType": "FunctionDefinition",
            "src": "3075:122:38",
            "body": {
              "id": 35886,
              "nodeType": "Block",
              "src": "3120:77:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 35879,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3168:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3172:6:38",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3168:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 35875,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24432,
                                    "src": "3144:10:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 35876,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3144:12:38",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 35874,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28321,
                                "src": "3138:5:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$28321_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 35877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3138:19:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$28321",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 35878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3158:9:38",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27964,
                            "src": "3138:29:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 35881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3138:41:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 35882,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35870,
                          "src": "3183:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3138:51:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 35873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3130:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 35884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3130:60:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35885,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:60:38"
                }
              ]
            },
            "documentation": {
              "id": 35868,
              "nodeType": "StructuredDocumentation",
              "src": "2806:264:38",
              "text": " @notice Burns WithdrawTokens, stops accruing funds for the liquidity provider to withdraw, and reinvests any accrued funds back into the liquidity provider's PublicVault.\n @param amount The amount of WithdrawTokens the user wishes to burn."
            },
            "functionSelector": "93256e70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "undoWithdraw",
            "nameLocation": "3084:12:38",
            "parameters": {
              "id": 35871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35870,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3105:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 35887,
                  "src": "3097:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3097:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3096:16:38"
            },
            "returnParameters": {
              "id": 35872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3120:0:38"
            },
            "scope": 35888,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35738,
              "name": "ERC20Cloned",
              "nameLocations": [
                "959:11:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24848,
              "src": "959:11:38"
            },
            "id": 35739,
            "nodeType": "InheritanceSpecifier",
            "src": "959:11:38"
          }
        ],
        "canonicalName": "WithdrawProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35737,
          "nodeType": "StructuredDocumentation",
          "src": "393:539:38",
          "text": " @title WithdrawProxy\n @author androolloyd\n @notice This contract collects funds for liquidity providers who are exiting. When a liquidity provider is the first in an epoch to mark that they would like to withdraw their funds, a WithdrawProxy for the liquidity provider's PublicVault is deployed to collect loan repayments until the end of the next epoch. Users are minted WithdrawTokens according to their balance in the protocol which are redeemable 1:1 for the underlying PublicVault asset by the end of the next epoch."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35888,
          24848,
          24433,
          24408,
          120
        ],
        "name": "WithdrawProxy",
        "nameLocation": "942:13:38",
        "scope": 35889,
        "usedErrors": []
      }
    ]
  },
  "id": 38
}