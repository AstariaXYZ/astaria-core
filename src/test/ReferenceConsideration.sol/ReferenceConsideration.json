{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadContractSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadFraction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BadReturnValueFromERC20OnTransfer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "BadSignatureV",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ConsiderationCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "considerationIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shortfallAmount",
          "type": "uint256"
        }
      ],
      "name": "ConsiderationNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CriteriaNotEnabledForItem",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "identifiers",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "ERC1155BatchTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EtherTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InexactFraction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientEtherSupplied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Invalid1155BatchTransferEncoding",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidBasicOrderParameterEncoding",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "conduit",
          "type": "address"
        }
      ],
      "name": "InvalidCallToConduit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCanceller",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "conduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduit",
          "type": "address"
        }
      ],
      "name": "InvalidConduit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidERC721TransferAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFulfillmentComponentData",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "InvalidMsgValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNativeOfferItem",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProof",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "InvalidRestrictedOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedFulfillmentOfferAndConsiderationComponents",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Side",
          "name": "side",
          "type": "uint8"
        }
      ],
      "name": "MissingFulfillmentComponentOnAggregation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingItemAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingOriginalConsiderationItems",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NoContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoReentrantCalls",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSpecifiedOrdersAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OfferAndConsiderationRequiredOnFulfillment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OfferCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderAlreadyFilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderIsCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderPartiallyFilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PartialFillsNotEnabledForOrder",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "identifier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnresolvedConsiderationCriteria",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnresolvedOfferCriteria",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnusedItemParameters",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCounter",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "CounterIncremented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct SpentItem[]",
          "name": "offer",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct ReceivedItem[]",
          "name": "consideration",
          "type": "tuple[]"
        }
      ],
      "name": "OrderFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "OrderValidated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder",
          "name": "advancedOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "fulfillAdvancedOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableAdvancedOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "considerationToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "considerationIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "considerationAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum BasicOrderType",
              "name": "basicOrderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "offererConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalAdditionalRecipients",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct AdditionalRecipient[]",
              "name": "additionalRecipients",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct BasicOrderParameters",
          "name": "parameters",
          "type": "tuple"
        }
      ],
      "name": "fulfillBasicOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        }
      ],
      "name": "fulfillOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "getCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "counter",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getOrderStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidated",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isCancelled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalFilled",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSize",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newCounter",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "information",
      "outputs": [
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchAdvancedOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1276:27859:84:-:0;;;1731:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1801:17;;;;;;;;;2486:19:90;:17;:19::i;:::-;2248:257;;;;;;;;;;-1:-1:-1;2248:257:90;-1:-1:-1;2248:257:90;2606:13;2594:25;;-1:-1:-1;;;;;2823:43:90;;;;;;-1:-1:-1;3006:44:90;;-1:-1:-1;;;3006:44:90;;;;2781:17;;2823:43;3006:42;;:44;;;;;;;;;;;2823:43;3006:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2958:102:90;;-1:-1:-1;;2345:1:32;685:16:100;:31;-1:-1:-1;1545:16:89::1;::::0;-1:-1:-1;;1545:14:89::1;:16:::0;-1:-1:-1;;1545:16:89:i:1;:::-;1441:127:::0;1355:101:98;1498:96:97;1731:95:84;1276:27859;;5352:3206:90;5794:5;;;;;;;;;;;;-1:-1:-1;;;5794:5:90;;;;;5904:8;;;;;;;;;;-1:-1:-1;;;5904:8:90;;;;6035:264;;5778:23;;5888:26;;5441:16;;;;;;;;;;;;6035:264;;;-1:-1:-1;;;1486:25:144;;-1:-1:-1;;;1536:2:144;1527:12;;1520:39;-1:-1:-1;;;1584:2:144;1575:12;;1568:38;1636:31;1631:2;1622:12;;1615:53;1698:22;1693:2;1684:12;;1677:44;-1:-1:-1;;;1746:2:144;1737:12;;1730:41;-1:-1:-1;;;1796:3:144;1787:13;;1780:26;1831:3;1822:13;;678:1163;6035:264:90;;;;-1:-1:-1;;6035:264:90;;;;;;;;;-1:-1:-1;;;6035:264:90;6436:310;;2755:33:144;-1:-1:-1;;;2804:12:144;;;2797:39;-1:-1:-1;;;2852:12:144;;;2845:38;2913:31;2899:12;;;2892:53;2975:22;2961:12;;;2954:44;-1:-1:-1;;;3014:12:144;;;3007:42;-1:-1:-1;;;3065:13:144;;;3058:42;-1:-1:-1;;;3116:13:144;;;3109:26;;;6436:310:90;;;;;;;;;3151:13:144;;;6436:310:90;;;-1:-1:-1;;;6911:490:90;;;4861:31:144;-1:-1:-1;;;4908:12:144;;;4901:40;-1:-1:-1;;;4957:12:144;;;4950:37;-1:-1:-1;;;5003:12:144;;;4996:42;5068:34;5054:12;;;5047:56;-1:-1:-1;;;5119:12:144;;;5112:26;-1:-1:-1;;;5154:12:144;;;5147:40;-1:-1:-1;;;5203:13:144;;;5196:43;-1:-1:-1;;;5255:13:144;;;5248:41;-1:-1:-1;;;5305:13:144;;;5298:42;-1:-1:-1;;;5356:13:144;;;5349:38;3252:21;5493:13;;;3240:34;-1:-1:-1;;;3290:12:144;;;3378:30;3424:12;;;624:16;6035:264:90;-1:-1:-1;6436:310:90;-1:-1:-1;;656:11:144;;6911:490:90;;;-1:-1:-1;;6911:490:90;;;;;;;;;;-1:-1:-1;;;6911:490:90;7546:248;;6227:28:144;-1:-1:-1;;;6271:12:144;;;6264:36;-1:-1:-1;;;6316:12:144;;;6309:39;-1:-1:-1;;;6364:12:144;;;6357:40;6427:27;6413:12;;;6406:49;-1:-1:-1;;;6471:12:144;;;6464:25;6911:490:90;-1:-1:-1;6505:12:144;;7546:248:90;;;-1:-1:-1;;7546:248:90;;;;;;;;;;7523:281;;7546:248;7523:281;;;;7914:30;;;;;;8062:38;;;;;;7523:281;;-1:-1:-1;7914:30:90;-1:-1:-1;8062:38:90;-1:-1:-1;8230:162:90;;8264:32;;8072:27;;7924:19;;8230:162;;:::i;:::-;;;;;;;;;;;;;8207:195;;;;;;8191:211;;8431:120;8474:20;8508:8;8530:11;8431:29;;;:120;;:::i;:::-;8413:138;;5705:2853;;;5352:3206;;;;;;;:::o;1862:6655:89:-;1983:79;:115;;-1:-1:-1;;1983:115:89;;;;;;2108:82;:118;;;;;;2236:85;:121;;;;;;2367:88;:124;;;;;;2529:80;:117;;;;1983:115;2529:117;;;;;;2656:83;:120;;;;;;;;2786:86;:123;;;;;;;;2919:89;:126;;;;;;;;3085:81;:119;;;;2267:44;3085:119;;;;;;3214:84;:122;;;;;;;;3346:87;:125;;;;;;;;3481:90;:128;;;;;;;;3650:82;:121;;;;1983:17;3650:121;;;;;;3781:85;:124;;;;;;;;3915:88;:127;;;;;;;;4052:91;:130;;;;;;;;4222:81;:119;;;;2560:39;4222:119;;;;;;4351:84;:122;;;;;;;;4483:87;:125;;;;;;;;4618:90;:128;;;;;;;;4787:82;:121;;;;2687:42;4787:121;;;;;;4918:85;:124;;;;;;;;5052:88;:127;;;;;;;;5189:91;:130;;;;;;;;;1983:79;5392:84;;:106;;;;;;5508:85;:107;;;;;;5625:86;:108;;;;;;5743:87;:109;;;;;;5862:86;:108;;;;;;5980:87;:109;;;;;;6124:87;:112;;;;;;;;6246:88;:113;;;;;;;;6369:89;:114;;;;;;;;6493:90;:115;;;;;;;;6618:89;:114;;;;;;;;6742:90;:115;;;;;;;;;;6895:90;:118;;;;;;;;7023:91;:119;;;;;;;;7152:92;:120;;;;;;;;7282:93;:121;;;;;;;;7413:92;:120;;;;;;;;7543:93;:121;;;;;;;;;7705:93;:124;;;;;;;;7839:94;:125;;;;;;;;7974:95;:126;;;;;;;;8110:96;:127;;;;;;;;8247:95;:126;;;;;;;;5220:50;2065:33;8383:96;;:127;;;;;;;;1862:6655::o;3556:365:90:-;4311:182;;;;;;;7598:25:144;;;;7639:18;;;7632:34;;;;7682:18;;;7675:34;;;;4435:13:90;7725:18:144;;;7718:34;4474:4:90;7768:19:144;;;;7761:61;;;;4311:182:90;;;;;;;;;;7570:19:144;;;;4311:182:90;;4288:215;;;;;;3556:365::o;14:290:144:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:144;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:144:o;309:245::-;388:6;396;449:2;437:9;428:7;424:23;420:32;417:52;;;465:1;462;455:12;417:52;-1:-1:-1;;488:16:144;;544:2;529:18;;;523:25;488:16;;523:25;;-1:-1:-1;309:245:144:o;6528:336::-;6569:3;6607:5;6601:12;6631:1;6641:128;6655:6;6652:1;6649:13;6641:128;;;6752:4;6737:13;;;6733:24;;6727:31;6714:11;;;6707:52;6670:12;6641:128;;;6787:6;6784:1;6781:13;6778:48;;;6822:1;6813:6;6808:3;6804:16;6797:27;6778:48;-1:-1:-1;6842:16:144;;;;;6528:336;-1:-1:-1;;6528:336:144:o;6869:333::-;7090:3;7115:81;7140:55;7165:29;7190:3;7182:6;7165:29;:::i;:::-;7157:6;7140:55;:::i;:::-;7132:6;7115:81;:::i;:::-;7108:88;6869:333;-1:-1:-1;;;;;6869:333:144:o;7339:489::-;1276:27859:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100e85760003560e01c8063a81744041161008a578063f07ec37311610059578063f07ec373146102a6578063f47b7740146102c6578063fb0f3ee1146102ea578063fd9f1e10146102fd57600080fd5b8063a81744041461025a578063b3a34c4c1461026d578063e7acab2414610280578063ed98a5741461029357600080fd5b80635b34b966116100c65780635b34b966146101c657806379df72bd146101e957806387201b4114610209578063881477321461022a57600080fd5b806306fdde03146100ed57806346423aa71461011857806355944a42146101a6575b600080fd5b3480156100f957600080fd5b5061010261031d565b60405161010f9190616f90565b60405180910390f35b34801561012457600080fd5b50610184610133366004616fa3565b60009081526002602052604090205460ff808216926101008304909116916effffffffffffffffffffffffffffff620100008204811692710100000000000000000000000000000000009092041690565b604080519415158552921515602085015291830152606082015260800161010f565b6101b96101b43660046175d4565b61035e565b60405161010f9190617753565b3480156101d257600080fd5b506101db6103c5565b60405190815260200161010f565b3480156101f557600080fd5b506101db610204366004617766565b61040b565b61021c6102173660046177a2565b6105a2565b60405161010f929190617883565b34801561023657600080fd5b5061024a6102453660046178dc565b610640565b604051901515815260200161010f565b6101b961026836600461791e565b61068f565b61024a61027b36600461798a565b610751565b61024a61028e3660046179d4565b610810565b61021c6102a1366004617a64565b610885565b3480156102b257600080fd5b506101db6102c1366004617b0d565b610974565b3480156102d257600080fd5b506102db610992565b60405161010f93929190617b2a565b61024a6102f8366004617b5c565b6109aa565b34801561030957600080fd5b5061024a6103183660046178dc565b610a01565b606061035960408051808201909152600d81527f436f6e73696465726174696f6e00000000000000000000000000000000000000602082015290565b905090565b606060026000540361039c576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556103b6866103af8688617b98565b8585610a49565b60016000559695505050505050565b6000600260005403610403576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610359610a80565b60408051610160810190915260009061059c908061042c6020860186617b0d565b6001600160a01b0316815260200184602001602081019061044d9190617b0d565b6001600160a01b031681526020016104686040860186617ccd565b808060200260200160405190810160405280939291908181526020016000905b828210156104b4576104a560a08302860136819003810190617d34565b81526020019060010190610488565b50505091835250506020016104cc6060860186617d50565b808060200260200160405190810160405280939291908181526020016000905b828210156105185761050960c08302860136819003810190617db7565b815260200190600101906104ec565b505050918352505060200161053360a0860160808701617dd3565b600381111561054457610544617669565b81526020018460a0013581526020018460c0013581526020018460e0013581526020018461010001358152602001846101200135815260200184806060019061058d9190617d50565b90915250610140840135610b1b565b92915050565b6060806002600054036105e1576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009081556105f18d610d51565b90506106278d828e8e906106059190617b98565b8d8d8d8d8d6001600160a01b038e161561061f578d610621565b335b8d610e2d565b6001600055909e909d509b505050505050505050505050565b600060026000540361067e576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106888383610e71565b9392505050565b60606002600054036106cd576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556107436106df8686611031565b604080516000808252602082019092529061073b565b6107286040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816106f55790505b508585610a49565b600160005595945050505050565b600060026000540361078f576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556108046107a0846110f6565b60408051600080825260208201909252906107fc565b6107e96040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816107b65790505b5084336111b1565b60016000559392505050565b600060026000540361084e576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556103b661085f87617dee565b6108698688617b98565b856001600160a01b0386161561087f57856111b1565b336111b1565b6060806002600054036108c4576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009081556108d58b8b611031565b905060006108e282610d51565b905061095c8282600060405190808252806020026020018201604052801561094f57816020015b61093c6040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816109095790505b508d8d8d8d8d338e610e2d565b6001600055909d909c509a5050505050505050505050565b6001600160a01b03811660009081526001602052604081205461059c565b606060008061099f61125c565b925092509250909192565b60006002600054036109e8576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556109f6826112c4565b600160005592915050565b6000600260005403610a3f576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106888383611949565b60606000610a5686610d51565b9050610a6986828760018a516000611bc2565b610a748185856120c4565b9150505b949350505050565b6000600260005403610abe576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526001602052604081208054909190610adb90617e29565b918290555060405181815290915033907f721c20121297512b72821b97f5326877ea8ecf4bb9948fea5bfcb6453074d37f9060200160405180910390a290565b60008083604001515167ffffffffffffffff811115610b3c57610b3c616fbc565b604051908082528060200260200182016040528015610b65578160200160208202803683370190505b509050600084610140015167ffffffffffffffff811115610b8857610b88616fbc565b604051908082528060200260200182016040528015610bb1578160200160208202803683370190505b50905060005b856040015151811015610c1757610bea86604001518281518110610bdd57610bdd617e43565b6020026020010151612325565b838281518110610bfc57610bfc617e43565b6020908102919091010152610c1081617e29565b9050610bb7565b5060005b856101400151811015610c7b57610c4e86606001518281518110610c4157610c41617e43565b6020026020010151612393565b828281518110610c6057610c60617e43565b6020908102919091010152610c7481617e29565b9050610c1b565b507f00000000000000000000000000000000000000000000000000000000000000008560000151866020015184604051602001610cb89190617e72565b6040516020818303038152906040528051906020012084604051602001610cdf9190617e72565b6040516020818303038152906040528051906020012089608001518a60a001518b60c001518c60e001518d61010001518e61012001518e604051602001610d319c9b9a99989796959493929190617ec1565b604051602081830303815290604052805190602001209250505092915050565b80516060908067ffffffffffffffff811115610d6f57610d6f616fbc565b604051908082528060200260200182016040528015610dc857816020015b6040805160a081018252600080825260606020808401829052938301819052820181905260808201528252600019909201910181610d8d5790505b50915060005b81811015610e2657610df8848281518110610deb57610deb617e43565b60200260200101516123ea565b838281518110610e0a57610e0a617e43565b602002602001018190525080610e1f90617e29565b9050610dce565b5050919050565b606080610e3f8c8c8c60008789611bc2565b610e5e8b610e4d8a8c617f83565b610e57898b617f83565b88886126cc565b909d909c509a5050505050505050505050565b6000600260005403610eaf576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808084815b818110156110235736888883818110610ed157610ed1617e43565b9050602002810190610ee39190618056565b905036610ef08280618094565b9050610eff6020820182617b0d565b9450610f12610f0d826180c8565b612a23565b60008181526002602052604081209850909650610f3490879089906001612a5e565b50865460ff1661101057610f8a8587610f5060208601866180d4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612b8c92505050565b86547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178755610fc36040820160208301617b0d565b6001600160a01b0316856001600160a01b03167ffde361574a066b44b3b5fe98a87108b7565e327327954c4faeea56a4e6491a0a8860405161100791815260200190565b60405180910390a35b50508061101c90617e29565b9050610eb6565b506001979650505050505050565b6060818067ffffffffffffffff81111561104d5761104d616fbc565b60405190808252806020026020018201604052801561108657816020015b611073616e69565b81526020019060019003908161106b5790505b50915060005b818110156110ee576110c08585838181106110a9576110a9617e43565b90506020028101906110bb9190618056565b6110f6565b8382815181106110d2576110d2617e43565b6020026020010181905250806110e790617e29565b905061108c565b505092915050565b6110fe616e69565b6040805160a08101909152806111148480618094565b61111d906180c8565b815260200160016effffffffffffffffffffffffffffff16815260200160016effffffffffffffffffffffffffffff16815260200183806020019061116291906180d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050604080516020818101909252928352909201525092915050565b6000606060008060006111c78989600187612c1d565b9250925092506111d78989612fe2565b885160006111e88285858c8c61332f565b905081602001516001600160a01b031682600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f31878b856020015186604001516040516112439493929190618173565b60405180910390a35060019a9950505050505050505050565b60408051808201909152600d81527f312e312d7265666572656e636500000000000000000000000000000000000000602082015260008061129b61379f565b92937f000000000000000000000000000000000000000000000000000000000000000092509050565b600080806112da6101208501610100860161820e565b9050600360008260178111156112f2576112f2617669565b601781111561130357611303617669565b8152602081019190915260400160009081205460ff1692509050806113306101208601610100870161820e565b90506004600082601781111561134857611348617669565b601781111561135957611359617669565b8152602081019190915260400160009081205460ff16925090508083600581111561138657611386617669565b14806113a3575060018360058111156113a1576113a1617669565b145b156113b0575060006113b4565b5060015b341580156113d3575060008160058111156113d1576113d1617669565b145b15611411576040517fa61be9f00000000000000000000000000000000000000000000000000000000081523460048201526024015b60405180910390fd5b34158015906114315750600181600581111561142f5761142f617669565b145b1561146a576040517fa61be9f0000000000000000000000000000000000000000000000000000000008152346004820152602401611408565b6000600484600581111561148057611480617669565b148061149d5750600584600581111561149b5761149b617669565b145b156114b9576114b260c0870160a08801617b0d565b90506114c9565b6114c66020870187617b0d565b90505b6000808560058111156114de576114de617669565b14806114fb575060018560058111156114f9576114f9617669565b145b156115085750600061156b565b600285600581111561151c5761151c617669565b14806115395750600385600581111561153757611537617669565b145b156115465750600161156b565b600485600581111561155a5761155a617669565b036115675750600261156b565b5060035b6000600486600581111561158157611581617669565b148061159e5750600586600581111561159c5761159c617669565b145b156115ab575060016115ed565b60008660058111156115bf576115bf617669565b14806115dc575060028660058111156115da576115da617669565b145b156115e9575060026115ed565b5060035b6115fb888684878786613891565b600061160d60808a0160608b01617b0d565b90506000600488600581111561162557611625617669565b14806116425750600588600581111561164057611640617669565b145b1561165357506101c089013561165b565b506101a08901355b600088600581111561166f5761166f617669565b148061168c5750600188600581111561168a5761168a617669565b145b80156116b1575060208a018035906116a4908c617b0d565b6001600160a01b03161715155b806116f7575060028860058111156116cb576116cb617669565b14806116e8575060038860058111156116e6576116e6617669565b145b80156116f7575060208a013515155b8061173d5750600488600581111561171157611711617669565b148061172e5750600588600581111561172c5761172c617669565b145b801561173d575060c08a013515155b15611774576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082019091526000815260606020820152600089600581111561179d5761179d617669565b036117db576117c86117b560c08d0160a08e01617b0d565b84338e60c001358f60e001358787614289565b6117d68b604001358c6142fd565b61192f565b60018960058111156117ef576117ef617669565b0361181a576117c861180760c08d0160a08e01617b0d565b84338e60c001358f60e001358787614429565b600289600581111561182e5761182e617669565b03611866576118466117b560c08d0160a08e01617b0d565b6117d6338461185860208f018f617b0d565b8e604001358f60008761445f565b600389600581111561187a5761187a617669565b036118925761184661180760c08d0160a08e01617b0d565b60048960058111156118a6576118a6617669565b036118f4576118ce6118bb60208d018d617b0d565b33858e602001358f604001358787614289565b6117d683338d60a00160208101906118e69190617b0d565b8e60e001358f60018761445f565b61191761190460208d018d617b0d565b33858e602001358f604001358787614429565b61192f83338d60a00160208101906118e69190617b0d565b61193881614518565b5060019a9950505050505050505050565b6000600260005403611987576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808084815b8181101561102357368888838181106119a9576119a9617e43565b90506020028101906119bb9190618094565b90506119ca6020820182617b0d565b94506119dc6040820160208301617b0d565b9350336001600160a01b03861614801590611a005750336001600160a01b03851614155b15611a37576040517f80ec737400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b26604051806101600160405280886001600160a01b03168152602001876001600160a01b03168152602001848060400190611a769190617ccd565b808060200260200160405190810160405280939291908181526020016000905b82821015611ac257611ab360a08302860136819003810190617d34565b81526020019060010190611a96565b5050509183525050602001611ada6060860186617d50565b808060200260200160405190810160405280939291908181526020016000905b8282101561051857611b1760c08302860136819003810190617db7565b81526020019060010190611afa565b6000818152600260205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010017815590519098509091506001600160a01b0380871691908816907f6bacc01dbe442496068f7d234edd811f1a5f833243e0aec824f86ab861f3c90d90611ba79085815260200190565b60405180910390a3505080611bbb90617e29565b905061198e565b855160008167ffffffffffffffff811115611bdf57611bdf616fbc565b604051908082528060200260200182016040528015611c08578160200160208202803683370190505b509050600080357fffffffff00000000000000000000000000000000000000000000000000000000167f55944a420000000000000000000000000000000000000000000000000000000014801590611ca457506000357fffffffff00000000000000000000000000000000000000000000000000000000167fa81744040000000000000000000000000000000000000000000000000000000014155b90506000805b84811015611f505760008b8281518110611cc657611cc6617e43565b6020026020010151905060008b8381518110611ce457611ce4617e43565b6020026020010151905088600003611d09576000602090920182905260800152611f40565b6000806000611d1a858f8f8c612c1d565b92509250925081600003611d3e575050600060209093018390525060800152611f40565b82898781518110611d5157611d51617e43565b60209081029190910101528b611d668161822f565b865160a081015160c0820151604090920151929f5092509060005b8151811015611e66576000828281518110611d9e57611d9e617e43565b602002602001015190508b80611dc65750600081516005811115611dc457611dc4617669565b145b9b506000611dd988888460800151614534565b90508160800151826060015103611df65760608201819052611e0b565b611e0588888460600151614534565b60608301525b608082018190526060820151611e259082888860006145b9565b6060830181905260208b0151805185908110611e4357611e43617e43565b60200260200101516060018181525050505080611e5f90617e29565b9050611d81565b5087516060015160005b8151811015611f35576000828281518110611e8d57611e8d617e43565b602002602001015190506000611ea889898460800151614534565b90508160800151826060015103611ec55760608201819052611eda565b611ed489898460600151614534565b60608301525b608082018190526060820151611ef49082898960016145b9565b6060830181905260408c0151805185908110611f1257611f12617e43565b60200260200101516060018181525050505080611f2e90617e29565b9050611e70565b505050505050505050505b611f4981617e29565b9050611caa565b50808015611f5b5750815b15611f92576040517f12d3f5a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f9c8989614652565b60005b848110156120b7576000801b848281518110611fbd57611fbd617e43565b602002602001015103156120a75760008b8281518110611fdf57611fdf617e43565b602002602001015160000151905060008b838151811061200157612001617e43565b602002602001015160200151905060008c848151811061202357612023617e43565b602002602001015160400151905082602001516001600160a01b031683600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3189878151811061208057612080617e43565b60200260200101518c868660405161209b9493929190618173565b60405180910390a35050505b6120b081617e29565b9050611f9f565b5050505050505050505050565b6060818067ffffffffffffffff8111156120e0576120e0616fbc565b60405190808252806020026020018201604052801561214e57816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816120fe5790505b5091506000805b82811015612218573686868381811061217057612170617e43565b90506020028101906121829190618056565b905060006121a6896121948480618246565b6121a16020870187618246565b614a5a565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036121dd576121d684617e29565b9350612205565b80866121e986866182ae565b815181106121f9576121f9617e43565b60200260200101819052505b50508061221190617e29565b9050612155565b50801561231157600061222b82846182ae565b905060008167ffffffffffffffff81111561224857612248616fbc565b6040519080825280602002602001820160405280156122b657816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816122665790505b50905060005b8281101561230c578581815181106122d6576122d6617e43565b60200260200101518282815181106122f0576122f0617e43565b60200260200101819052508061230590617e29565b90506122bc565b509350505b61231b8684614dac565b5050509392505050565b60007f000000000000000000000000000000000000000000000000000000000000000082600001518360200151846040015185606001518660800151604051602001612376969594939291906182c5565b604051602081830303815290604052805190602001209050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000826000015183602001518460400151856060015186608001518760a001516040516020016123769796959493929190618305565b6040805160a08101825260008082526060602083018190529282018390529181018290526080810191909152815160400151805160009067ffffffffffffffff81111561243957612439616fbc565b60405190808252806020026020018201604052801561248b57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816124575790505b50905060005b82518110156125385760008382815181106124ae576124ae617e43565b6020026020010151905060006040518060800160405280836000015160058111156124db576124db617669565b815260200183602001516001600160a01b0316815260200183604001518152602001836060015181525090508084848151811061251a5761251a617e43565b602002602001018190525050508061253190617e29565b9050612491565b50835160600151805160009067ffffffffffffffff81111561255c5761255c616fbc565b6040519080825280602002602001820160405280156125b557816020015b6040805160a08101825260008082526020808301829052928201819052606082018190526080820152825260001990920191018161257a5790505b50905060005b82518110156126755760008382815181106125d8576125d8617e43565b6020026020010151905060006040518060a001604052808360000151600581111561260557612605617669565b815260200183602001516001600160a01b0316815260200183604001518152602001836060015181526020018360a001516001600160a01b031681525090508084848151811061265757612657617e43565b602002602001018190525050508061266e90617e29565b90506125bb565b506040805160a0810182528751516001600160a01b031681526020808201959095529081019190915285516101200151606082015291909401516effffffffffffffffffffffffffffff1660808201529392505050565b8351835160609182916126df8183618350565b67ffffffffffffffff8111156126f7576126f7616fbc565b60405190808252806020026020018201604052801561276557816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816127155790505b5092506000805b838110156128145760008a828151811061278857612788617e43565b6020026020010151905060006127a28d6000848d8d615005565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036127d9576127d284617e29565b9350612801565b80876127e586866182ae565b815181106127f5576127f5617e43565b60200260200101819052505b50508061280d90617e29565b905061276c565b5060005b828110156128cb57600089828151811061283457612834617e43565b60200260200101519050600061284e8d6001848d8d615005565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036128855761287e84617e29565b93506128b8565b8087856128928987618350565b61289c91906182ae565b815181106128ac576128ac617e43565b60200260200101819052505b5050806128c490617e29565b9050612818565b5080156129cf576000816128df8486618350565b6128e991906182ae565b905060008167ffffffffffffffff81111561290657612906616fbc565b60405190808252806020026020018201604052801561297457816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816129245790505b50905060005b828110156129ca5786818151811061299457612994617e43565b60200260200101518282815181106129ae576129ae617e43565b6020026020010181905250806129c390617e29565b905061297a565b509450505b8351600003612a0a576040517fd5da9a1b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612a148a85614dac565b94505050509550959350505050565b6000612a398260600151518361014001516151ea565b81516001600160a01b031660009081526001602052604090205461059c908390610b1b565b8254600090610100900460ff1615612ab3578115612aab576040517f1a51557400000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b506000610a78565b83546201000090046effffffffffffffffffffffffffffff168015612b80578315612b0d576040517fee9e0e6300000000000000000000000000000000000000000000000000000000815260048101879052602401611408565b84547101000000000000000000000000000000000090046effffffffffffffffffffffffffffff168110612b80578215612b76576040517f10fda3e100000000000000000000000000000000000000000000000000000000815260048101879052602401611408565b6000915050610a78565b50600195945050505050565b336001600160a01b03841603612ba157505050565b6000612c0a612bae61379f565b846040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050612c17848284615228565b50505050565b60008060008087600001519050612c3d8160a001518260c001518861544e565b612c51575060009250829150819050612fd8565b602088015160408901516effffffffffffffffffffffffffffff918216911680821180612c7c575081155b15612cb3576040517f5a052b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8082108015612cca5750612cca83608001516154ad565b15612d01576040517fa11b63ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612d0a83612a23565b9550612d2c8a8a89898760e00151886080015189600001518a602001516154cb565b600086815260026020526040812090612d4990889083908c612a5e565b612d5e575060009450849350612fd892505050565b805460ff16612d7a57612d7a8460000151888d60600151612b8c565b80546effffffffffffffffffffffffffffff620100008204811691710100000000000000000000000000000000009004168015612f485783600103612dc457809450809350612df0565b838114612df057612dd58483618368565b9150612de18186618368565b9450612ded8185618368565b93505b83612dfb8684618350565b1115612e0e57612e0b82856182ae565b94505b612e188583618350565b91506effffffffffffffffffffffffffffff821180612e4557506effffffffffffffffffffffffffffff84115b15612ed1576000612e5f86612e5a858861572e565b61572e565b905060008115612e6f5781612e72565b60015b9050612e7e81886183b6565b9650612e8a81856183b6565b9350612e9681876183b6565b95506000612eb56effffffffffffffffffffffffffffff6000196182ae565b9050612ec18188618350565b612ecb8287618350565b50505050505b82546effffffffffffffffffffffffffffff858116710100000000000000000000000000000000000270ffffffffffffffffffffffffffffffffff91851662010000027fffffffffffffffffffffffffffffff00000000000000000000000000000000009093169290921760011716178355612fbb565b82546effffffffffffffffffffffffffffff858116710100000000000000000000000000000000000270ffffffffffffffffffffffffffffffffff91881662010000027fffffffffffffffffffffffffffffff000000000000000000000000000000000090931692909217600117161783555b50506effffffffffffffffffffffffffffff928316955050169150505b9450945094915050565b8051825160005b8281101561322757600084828151811061300557613005617e43565b60209081029190910101518051909150801561304d576040517f869586c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040820151600080808560200151600181111561306c5761306c617669565b036131175786604001515183106130af576040517fbfb3f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000876040015184815181106130c7576130c7617e43565b6020908102919091010151805160408201519094509250905060048360058111156130f4576130f4617669565b036131025760028152613107565b600381525b60608601516040909101526131b9565b8660600151518310613155576040517f6088d7de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008760600151848151811061316d5761316d617e43565b60209081029190910101518051604082015190945092509050600483600581111561319a5761319a617669565b036131a857600281526131ad565b600381525b60608601516040909101525b6131c282615753565b6131f8576040517f94eb6af600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015613211576132118560600151828760800151615770565b50505050508061322090617e29565b9050612fe9565b508351606001515160005b818110156132af57613268866000015160600151828151811061325757613257617e43565b602002602001015160000151615753565b1561329f576040517fff75a34000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6132a881617e29565b9050613232565b50508351604001515160005b81811015613327576132e0866000015160400151828151811061325757613257617e43565b15613317576040517fa6cfc67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61332081617e29565b90506132bb565b505050505050565b6040805160a081018252600080825260606020830181905292820183905291810182905260808101919091526040805160a0808201835287825260208083018890528284018790529089015160608084019190915260c08a015160808401528351808501909452600084529083015290875161012089015160408a01515167ffffffffffffffff8111156133c5576133c5616fbc565b60405190808252806020026020018201604052801561341757816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816133e35790505b50602086015260005b8a60400151518110156135a75760008b60400151828151811061344557613445617e43565b602002602001015190506000600581111561346257613462617669565b8151600581111561347557613475617669565b036134ac576040517f12d3f5a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006134c382606001518360800151896000615877565b905060006040518060a00160405280846000015160058111156134e8576134e8617669565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018b6001600160a01b0316815250905060405180608001604052808260000151600581111561354057613540617669565b815260200182602001516001600160a01b0316815260200182604001518152602001838152508960200151858151811061357c5761357c617e43565b60200260200101819052506135938187878a6158d3565b505050806135a090617e29565b9050613420565b5089606001515167ffffffffffffffff8111156135c6576135c6616fbc565b60405190808252806020026020018201604052801561361f57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816135e45790505b5060408601523460005b8b60600151518110156137765760008c60600151828151811061364e5761364e617e43565b60200260200101519050600061366f826060015183608001518a6001615877565b905060006040518060a001604052808460000151600581111561369457613694617669565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018460a001516001600160a01b03168152509050808a6040015185815181106136e6576136e6617e43565b602090810291909101015260008151600581111561370657613706617669565b036137525784821115613745576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61374f82866182ae565b94505b61376281338b604001518b6158d3565b5050508061376f90617e29565b9050613629565b5061378084614518565b8015613790576137903382615a17565b50505050505b95945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461386c5750604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6138a7866101200135876101400135600161544e565b506138b0615abf565b6138ce6138c1610200880188618246565b9050876101e001356151ea565b6040805160e0810182526000808252602082018190529181018290526060808201526080810182905260a0810182905260c081019190915260006040518060a0016040528088600381111561392557613925617669565b815260200187600581111561393c5761393c617669565b815260200186600581111561395357613953617669565b8152602001856001600160a01b0316815260200184600581111561397957613979617669565b90529050600061398d6102008a018a618246565b61399991506001618350565b67ffffffffffffffff8111156139b1576139b1616fbc565b604051908082528060200260200182016040528015613a0a57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816139cf5790505b507f000000000000000000000000000000000000000000000000000000000000000084526040805160c08101909152602084015191925060009181906005811115613a5757613a57617669565b8152602090810190613a6b908d018d617b0d565b6001600160a01b031681526020018b6020013581526020018b6040013581526020018b6040013581526020018b6060016020810190613aaa9190617b0d565b6001600160a01b031690529050613ac76101e08b01356001618350565b67ffffffffffffffff811115613adf57613adf616fbc565b604051908082528060200260200182016040528015613b08578160200160208202803683370190505b506060808601919091528451825160208085015160408087015195870151608088015160a08901519251613b429894959293919201618305565b604051602081830303815290604052805190602001208460600151600081518110613b6f57613b6f617e43565b602002602001018181525050613bae6040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915260006040518060a0016040528087602001516005811115613c0357613c03617669565b815260200185602001516001600160a01b0316815260200185604001518152602001856080015181526020018560a001516001600160a01b031681525090508085600081518110613c5657613c56617e43565b602002602001018190525060005b613c726102008f018f618246565b9050811015613e455760008e806102000190613c8e9190618246565b83818110613c9e57613c9e617e43565b905060400201803603810190613cb491906183ca565b90506040518060a0016040528089604001516005811115613cd757613cd7617669565b815260200189606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508487836001613d229190618350565b81518110613d3257613d32617e43565b60200260200101819052508e6101e001358210613d4f5750613e35565b6040518060c0016040528089604001516005811115613d7057613d70617669565b815260200189606001516001600160a01b0316815260200160008152602001826000015181526020018260000151815260200182602001516001600160a01b031681525093508860000151846000015185602001518660400151876060015188608001518960a00151604051602001613def9796959493929190618305565b604051602081830303815290604052805190602001208960600151836001613e179190618350565b81518110613e2757613e27617e43565b602002602001018181525050505b613e3e81617e29565b9050613c64565b508660600151604051602001613e5b9190617e72565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012060808801526101e08d01355b613eab6102008f018f618246565b9050811015613f885760008e806102000190613ec79190618246565b83818110613ed757613ed7617e43565b905060400201803603810190613eed91906183ca565b90506040518060a0016040528089604001516005811115613f1057613f10617669565b815260200189606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508487836001613f5b9190618350565b81518110613f6b57613f6b617e43565b60200260200101819052505080613f8190617e29565b9050613e9d565b506000935060019250613f99915050565b604051908082528060200260200182016040528015613feb57816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181613fb75790505b5090507f0000000000000000000000000000000000000000000000000000000000000000846000018181525050600060405180608001604052808560800151600581111561403b5761403b617669565b815260200161405060c08e0160a08f01617b0d565b6001600160a01b031681526020018c60c0013581526020018c60e001358152509050808260008151811061408657614086617e43565b6020026020010181905250600060405180602001604052808760000151846000015185602001518660400151876060015188606001516040516020016140d1969594939291906182c5565b604051602081830303815290604052805190602001208152509050806040516020016140fd9190618420565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020909201919091209087015250507f0000000000000000000000000000000000000000000000000000000000000000845261416a848b85615bc7565b602085015261417f60a08b0160808c01617b0d565b6001600160a01b031661419860808c0160608d01617b0d565b6001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3186602001513385876040516141da9493929190618173565b60405180910390a361421c84602001518b61016001358b8d60600160208101906142049190617b0d565b8e60800160208101906142179190617b0d565b615c86565b602084015161427d9061423560808d0160608e01617b0d565b6142436102208e018e6180d4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250615dc892505050565b50505050505050505050565b6142938183615e12565b816142e357826001146142d2576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6142de87878787615e23565b6142f4565b6142f4828260028a8a8a8a8a615ef1565b50505050505050565b3460005b61430f610200840184618246565b90508110156143b55736614327610200850185618246565b8381811061433757614337617e43565b6040029190910191505080358381111561437d576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6143966143906040840160208501617b0d565b82615a17565b6143a081856182ae565b93505050806143ae90617e29565b9050614301565b50808311156143f0576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6144096144036080840160608501617b0d565b84615a17565b82811115614424576144243361441f85846182ae565b615a17565b505050565b614432836160d7565b61443c8183615e12565b8161444e576142de8787878787616111565b6142f4828260038a8a8a8a8a615ef1565b6000821561447357506101a083013561447b565b506101c08301355b60005b61448c610200860186618246565b90508110156144ff57366144a4610200870187618246565b838181106144b4576144b4617e43565b905060400201905084156144d0576144cd8135886182ae565b96505b6144ee888b6144e56040850160208601617b0d565b843587896161ff565b506144f881617e29565b905061447e565b5061450e8689898885876161ff565b5050505050505050565b8060200151516000036145285750565b6145318161623a565b50565b6000828403614544575080610688565b60006145508584618368565b905061455c84826183b6565b91506000838661456c8786618368565b61457691906183b6565b149050806145b0576040517fc63cf08900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50509392505050565b6000848614614648576000806145cf86866182ae565b905060006145dd87426182ae565b905060006145eb82846182ae565b90508515614601576145fe6001846182ae565b93505b60008461460e848c618368565b614618848e618368565b6146229190618350565b61462c9190618350565b9050600061463a85836183b6565b965061379695505050505050565b5092949350505050565b805160005b8181101561490d57600083828151811061467357614673617e43565b60200260200101519050600081600001519050855181106146c0576040517f869586c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8581815181106146d2576146d2617e43565b6020026020010151608001516effffffffffffffffffffffffffffff166000036146fd5750506148fd565b6040820151600080808560200151600181111561471c5761471c617669565b036147e257600089858151811061473557614735617e43565b60200260200101516020015190508051841061477d576040517fbfb3f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081858151811061479157614791617e43565b6020908102919091010151805160408201519095509350905060048460058111156147be576147be617669565b036147cc57600281526147d1565b600381525b60608701516040909101525061489f565b60008985815181106147f6576147f6617e43565b60200260200101516040015190508051841061483e576040517f6088d7de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081858151811061485257614852617e43565b60209081029190910101518051604082015190955093509050600484600581111561487f5761487f617669565b0361488d5760028152614892565b600381525b6060870151604090910152505b6148a882615753565b6148de576040517f94eb6af600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156148f7576148f78560600151828760800151615770565b50505050505b61490681617e29565b9050614657565b5050815160005b81811015612c1757600084828151811061493057614930617e43565b602002602001015190506000816020015151905081608001516effffffffffffffffffffffffffffff16600003614968575050614a4a565b60005b818110156149d35761498c8360200151828151811061325757613257617e43565b156149c3576040517fa6cfc67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6149cc81617e29565b905061496b565b505060408101515160005b81811015614a46576149ff8360400151828151811061325757613257617e43565b15614a36576040517fff75a34000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614a3f81617e29565b90506149de565b5050505b614a5381617e29565b9050614914565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e0830182905282526020820181905291810191909152831580614aa5575081155b15614adc576040517f98e9db6e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000614b3c878585808060200260200160405190810160405280939291908181526020016000905b82821015614b3057614b2160408302860136819003810190618454565b81526020019060010190614b04565b505050505060006162c2565b9050614b9d878787808060200260200160405190810160405280939291908181526020016000905b82821015614b9057614b8160408302860136819003810190618454565b81526020019060010190614b64565b50505050506000806165b4565b81519092506005811115614bb357614bb3617669565b8251516005811115614bc757614bc7617669565b141580614bf2575080602001516001600160a01b03168260000151602001516001600160a01b031614155b80614c095750806040015182600001516040015114155b15614c40576040517f09cfb45500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600001516060015181606001511115614cf357600084846000818110614c6957614c69617e43565b905060400201803603810190614c7f9190618454565b90508260000151606001518260600151614c9991906182ae565b88826000015181518110614caf57614caf617e43565b602002602001015160400151826020015181518110614cd057614cd0617e43565b602090810291909101015160609081019190915283518101519083015250614d81565b600086866000818110614d0857614d08617e43565b905060400201803603810190614d1e9190618454565b90508160600151836000015160600151614d3891906182ae565b88826000015181518110614d4e57614d4e617e43565b602002602001015160200151826020015181518110614d6f57614d6f617e43565b60200260200101516060018181525050505b60608082015183519091015260809081015182516001600160a01b0390911691015295945050505050565b81516060908067ffffffffffffffff811115614dca57614dca616fbc565b604051908082528060200260200182016040528015614df3578160200160208202803683370190505b50915060005b81811015614f09576000858281518110614e1557614e15617e43565b6020026020010151905080608001516effffffffffffffffffffffffffffff16600003614e425750614ef9565b6001848381518110614e5657614e56617e43565b91151560209283029190910190910152604081015160005b8151811015614ef5576000828281518110614e8b57614e8b617e43565b602002602001015160600151905080600014614ee4576040517fa5f54208000000000000000000000000000000000000000000000000000000008152600481018690526024810183905260448101829052606401611408565b50614eee81617e29565b9050614e6e565b5050505b614f0281617e29565b9050614df9565b50604080518082019091526000815260606020820152349060005b8551811015614fe2576000868281518110614f4157614f41617e43565b60209081029190910101518051909150600081516005811115614f6657614f66617669565b03614fbb578481606001511115614fa9576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151614fb890866182ae565b94505b614fcf8183602001518460400151876158d3565b505080614fdb90617e29565b9050614f24565b50614fec81614518565b8115614ffc57614ffc3383615a17565b50505092915050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181019190915285518451600081900361508657866040517f375c24c10000000000000000000000000000000000000000000000000000000081526004016114089190618480565b6000805b828110156151475760008882815181106150a6576150a6617e43565b60200260200101516000015190508481106150ed576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a81815181106150ff576150ff617e43565b6020026020010151608001516effffffffffffffffffffffffffffff166000146151365761512e826001618350565b925050615147565b5061514081617e29565b905061508a565b508060000361519b57505060408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181019190915291506137969050565b60008860018111156151af576151af617669565b036151d4576151ca89886151c46001856182ae565b886165b4565b9350505050613796565b6151ca89886151e46001856182ae565b89616894565b80821015615224576040517f466aa61600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600080806001600160a01b0386163b1561524757613327868686616902565b83516040036152a757600084806020019051810190615266919061848e565b9094507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81169350905061529f60ff82901c601b6184b2565b915050615370565b835160410361533e57838060200190518101906152c4919061848e565b85519194509250849060409081106152de576152de617e43565b016020015160f81c9050601b81148015906152fd57508060ff16601c14155b15615339576040517f1f003d0a00000000000000000000000000000000000000000000000000000000815260ff82166004820152602401611408565b615370565b6040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160008082526020820180845288905260ff841692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa1580156153c4573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811615806154175750866001600160a01b0316816001600160a01b031614155b156142f4576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60004284118061545e5750428311155b156154a357811561549b576040517f6f7eac2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000610688565b5060019392505050565b60008160038111156154c1576154c1617669565b6001161592915050565b60018360038111156154df576154df617669565b1180156154f55750336001600160a01b03821614155b801561550a5750336001600160a01b03831614155b1561450e5760808801515115801561552157508651155b15615622576040517f0e1d31dc00000000000000000000000000000000000000000000000000000000808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc90608401602060405180830381865afa15801561559d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906155c191906184d7565b7fffffffff00000000000000000000000000000000000000000000000000000000161461561d576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b61450e565b6040517f331315700000000000000000000000000000000000000000000000000000000081527f0e1d31dc00000000000000000000000000000000000000000000000000000000906001600160a01b0383169063331315709061569190899033908e908d908f906004016186bb565b602060405180830381865afa1580156156ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906156d291906184d7565b7fffffffff00000000000000000000000000000000000000000000000000000000161461450e576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b60005b811561574c57816157428185618899565b9093509150615731565b5090919050565b6000600382600581111561576957615769617669565b1192915050565b60008360405160200161578591815260200190565b60405160208183030381529060405280519060200120905060005b825181101561583d5760008382815181106157bd576157bd617e43565b602002602001015190508083116157ff57604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061582c565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5061583681617e29565b90506157a0565b50808314612c17576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083850361589a576158938360000151846020015186614534565b9050610a78565b6137966158b08460000151856020015188614534565b6158c38560000151866020015188614534565b85606001518660800151866145b9565b6000845160058111156158e8576158e8617669565b0361594f57604084015160208501516001600160a01b03161715615938576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61594a84608001518560600151615a17565b612c17565b60018451600581111561596457615964617669565b036159bf576040840151156159a5576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61594a8460200151848660800151876060015186866161ff565b6002845160058111156159d4576159d4617669565b036159f85761594a8460200151848660800151876040015188606001518787614289565b612c178460200151848660800151876040015188606001518787614429565b615a20816160d7565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114615a6d576040519150601f19603f3d011682016040523d82523d6000602084013e615a72565b606091505b5050905080614424576040517f470c7c1d0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101839052604401611408565b6000615acf6024600436846188ad565b810190615adc9190616fa3565b6020148015615b095750615af76102446102243660006188ad565b810190615b049190616fa3565b610240145b8015615b655750615b216102846102643660006188ad565b810190615b2e9190616fa3565b615b39906040618368565b615b4590610260618350565b615b566102646102443660006188ad565b810190615b639190616fa3565b145b8015615b8e57506018615b7f6101446101243660006188ad565b810190615b8c9190616fa3565b105b905080614531576040517f39f3e3fd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080615bf8615bdd6080860160608701617b0d565b6001600160a01b031660009081526001602052604090205490565b8551909150615c0d6080860160608701617b0d565b615c1d60a0870160808801617b0d565b8760400151886080015187600001518961012001358a61014001358b61016001358c61018001358d6101a001358b604051602001615c669c9b9a99989796959493929190617ec1565b604051602081830303815290604052805190602001209150509392505050565b6001836003811115615c9a57615c9a617669565b118015615cb05750336001600160a01b03821614155b8015615cc55750336001600160a01b03831614155b15615dc1576040517f0e1d31dc00000000000000000000000000000000000000000000000000000000808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc90608401602060405180830381865afa158015615d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615d6591906184d7565b7fffffffff000000000000000000000000000000000000000000000000000000001614615dc1576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b5050505050565b6000838152600260205260409020615de38482600180612a5e565b50805460ff16615df857615df8838584612b8c565b710100000000000000000000000000000100019055505050565b815181146152245761522482614518565b836001600160a01b03163b600003615e72576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611408565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401600060405180830381600087803b158015615edd57600080fd5b505af115801561450e573d6000803e3d6000fd5b6020870151516000615f04826001618350565b67ffffffffffffffff811115615f1c57615f1c616fbc565b604051908082528060200260200182016040528015615f7c57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181615f3a5790505b50905060005b8281101561604c5760008a602001518281518110615fa257615fa2617e43565b602002602001015190506040518060c0016040528082600001516003811115615fcd57615fcd617669565b815260200182602001516001600160a01b0316815260200182604001516001600160a01b0316815260200182606001516001600160a01b03168152602001826080015181526020018260a0015181525083838151811061602f5761602f617e43565b6020026020010181905250508061604590617e29565b9050615f82565b506040518060c0016040528089600381111561606a5761606a617669565b8152602001886001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b03168152602001858152602001848152508183815181106160b8576160b8617e43565b6020908102919091018101919091528901525050509490935250505050565b80600003614531576040517f91b3e51400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846001600160a01b03163b600003616160576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152602401611408565b6040517ff242432a0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b1580156161e057600080fd5b505af11580156161f4573d6000803e3d6000fd5b505050505050505050565b616208836160d7565b6162128183615e12565b8161622857616223868686866169e5565b613327565b6133278282600189898960008a615ef1565b805161624590616bf0565b6001600160a01b0316634ce34aa282602001516040518263ffffffff1660e01b815260040161627491906188d7565b6020604051808303816000875af1158015616293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906162b791906184d7565b506060602090910152565b6040805160a0810182526000808252602080830182905282840182905260608084018390526080840183905284519081018552828152908101829052928301529083838151811061631557616315617e43565b6020908102919091010151518152835184908490811061633757616337617e43565b60209081029190910181015181015190820152845181511015604082018190526165705760008582600001518151811061637357616373617e43565b602002602001015190508160400151806163965750806040015151826020015110155b15156040830181905261656e57600081604001518360200151815181106163bf576163bf617e43565b602002602001015190506040518060a00160405280826000015160058111156163ea576163ea617669565b815260200182602001516001600160a01b03168152602001826040015181526020018260600151815260200182608001516001600160a01b03168152509350600081606001818152505060008560016164439190618350565b90505b865181101561656b5786818151811061646157616461617e43565b6020908102919091010151518452865187908290811061648357616483617e43565b602090810291909101810151810151908501528751845110156040850181905261656b57878460000151815181106164bd576164bd617e43565b6020026020010151925082608001516effffffffffffffffffffffffffffff1660001461655b57604080840151516020860151101590850181905261656b57826040015184602001518151811061651657616516617e43565b60200260200101519150816060015185606001516165349190618350565b60608087019190915260009083015261654d8286616d36565b15156040850181905261656b575b61656481617e29565b9050616446565b50505b505b8060400151156165ac576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509392505050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e0830182905282526020820181905291810191909152600084848151811061660857616608617e43565b6020026020010151600001519050600085858151811061662a5761662a617e43565b60200260200101516020015190506000875183101590508061685157600088848151811061665a5761665a617e43565b60200260200101519050818061667557508060200151518310155b91508161684f5760008160200151848151811061669457616694617e43565b6020026020010151905060405180606001604052806040518060a00160405280846000015160058111156166ca576166ca617669565b815260200184602001516001600160a01b0316815260200184604001518152602001846060015181526020018a6001600160a01b0316815250815260200183600001516001600160a01b03168152602001836060015181525095506000816060018181525050600088600161673f9190618350565b90505b895181101561684c5789818151811061675d5761675d617e43565b602002602001015160000151955089818151811061677d5761677d617e43565b60200260200101516020015194508a5186101593508361684c578a86815181106167a9576167a9617e43565b6020026020010151925082608001516effffffffffffffffffffffffffffff1660001461683c5782602001515185101593508361684c57826020015185815181106167f6576167f6617e43565b6020026020010151915081606001518760000151606001516168189190618350565b8751606090810191909152600090830152616834838389616dbf565b93508361684c575b61684581617e29565b9050616742565b50505b505b8015616889576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050949350505050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208201819052918101829052906168df8686866162c2565b604080516060810182529182523360208301528101939093525090949350505050565b6040517f1626ba7e00000000000000000000000000000000000000000000000000000000808252906001600160a01b03851690631626ba7e9061694b908690869060040161895b565b602060405180830381865afa158015616968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061698c91906184d7565b7fffffffff000000000000000000000000000000000000000000000000000000001614614424576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836001600160a01b03163b600003616a34576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611408565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691616ac69190618974565b6000604051808303816000865af19150503d8060008114616b03576040519150601f19603f3d011682016040523d82523d6000602084013e616b08565b606091505b509150915081616b6d576040517ff486bc870000000000000000000000000000000000000000000000000000000081526001600160a01b038088166004830152808716602483015285166044820152600060648201526084810184905260a401611408565b805115801590616b7f57506020815110155b156133275780806020019051810190616b989190618986565b613327576040517f988919230000000000000000000000000000000000000000000000000000000081526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401611408565b6000616cd9826040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060601b166021820152603581018290527f00000000000000000000000000000000000000000000000000000000000000006055820152600090607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b9050806001600160a01b03163b600003616d31576040517f1cf99b26000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0382166024820152604401611408565b919050565b600082608001516001600160a01b031682608001516001600160a01b0316141580616d85575082516005811115616d6f57616d6f617669565b82516005811115616d8257616d82617669565b14155b80616daa575082602001516001600160a01b031682602001516001600160a01b031614155b80610688575050604091820151910151141590565b60008260400151826000015160400151141580616df6575083600001516001600160a01b031682602001516001600160a01b031614155b80616e0957508360600151826040015114155b80616e39575082516005811115616e2257616e22617669565b8251516005811115616e3657616e36617669565b14155b80610a78575082602001516001600160a01b03168260000151602001516001600160a01b03161415949350505050565b6040518060a00160405280616e7c616e9d565b81526000602082018190526040820152606080820181905260809091015290565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160006003811115616eea57616eea617669565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b60005b83811015616f35578181015183820152602001616f1d565b83811115612c175750506000910152565b60008151808452616f5e816020860160208601616f1a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106886020830184616f46565b600060208284031215616fb557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561700e5761700e616fbc565b60405290565b604051610160810167ffffffffffffffff8111828210171561700e5761700e616fbc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561707f5761707f616fbc565b604052919050565b600067ffffffffffffffff8211156170a1576170a1616fbc565b5060051b60200190565b6001600160a01b038116811461453157600080fd5b8035616d31816170ab565b803560068110616d3157600080fd5b600060a082840312156170ec57600080fd5b6170f4616feb565b90506170ff826170cb565b8152602082013561710f816170ab565b8060208301525060408201356040820152606082013560608201526080820135608082015292915050565b600082601f83011261714b57600080fd5b8135602061716061715b83617087565b617038565b82815260a0928302850182019282820191908785111561717f57600080fd5b8387015b858110156171a25761719589826170da565b8452928401928101617183565b5090979650505050505050565b600060c082840312156171c157600080fd5b60405160c0810181811067ffffffffffffffff821117156171e4576171e4616fbc565b6040529050806171f3836170cb565b81526020830135617203816170ab565b8060208301525060408301356040820152606083013560608201526080830135608082015260a0830135617236816170ab565b60a0919091015292915050565b600082601f83011261725457600080fd5b8135602061726461715b83617087565b82815260c0928302850182019282820191908785111561728357600080fd5b8387015b858110156171a25761729989826171af565b8452928401928101617287565b803560048110616d3157600080fd5b600061016082840312156172c857600080fd5b6172d0617014565b90506172db826170c0565b81526172e9602083016170c0565b6020820152604082013567ffffffffffffffff8082111561730957600080fd5b6173158583860161713a565b6040840152606084013591508082111561732e57600080fd5b5061733b84828501617243565b60608301525061734d608083016172a6565b608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b80356effffffffffffffffffffffffffffff81168114616d3157600080fd5b600082601f8301126173ca57600080fd5b813567ffffffffffffffff8111156173e4576173e4616fbc565b61741560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601617038565b81815284602083860101111561742a57600080fd5b816020850160208301376000918101602001919091529392505050565b600060a0828403121561745957600080fd5b617461616feb565b9050813567ffffffffffffffff8082111561747b57600080fd5b617487858386016172b5565b83526174956020850161739a565b60208401526174a66040850161739a565b604084015260608401359150808211156174bf57600080fd5b6174cb858386016173b9565b606084015260808401359150808211156174e457600080fd5b506174f1848285016173b9565b60808301525092915050565b600082601f83011261750e57600080fd5b8135602061751e61715b83617087565b82815260059290921b8401810191818101908684111561753d57600080fd5b8286015b8481101561757d57803567ffffffffffffffff8111156175615760008081fd5b61756f8986838b0101617447565b845250918301918301617541565b509695505050505050565b60008083601f84011261759a57600080fd5b50813567ffffffffffffffff8111156175b257600080fd5b6020830191508360208260051b85010111156175cd57600080fd5b9250929050565b6000806000806000606086880312156175ec57600080fd5b853567ffffffffffffffff8082111561760457600080fd5b61761089838a016174fd565b9650602088013591508082111561762657600080fd5b61763289838a01617588565b9096509450604088013591508082111561764b57600080fd5b5061765888828901617588565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106176a8576176a8617669565b9052565b6176b7828251617698565b60208101516001600160a01b038082166020850152604083015160408501526060830151606085015280608084015116608085015250505050565b600081518084526020808501945080840160005b8381101561774857815161771b8882516176ac565b808401516001600160a01b031660a08901526040015160c088015260e09096019590820190600101617706565b509495945050505050565b60208152600061068860208301846176f2565b60006020828403121561777857600080fd5b813567ffffffffffffffff81111561778f57600080fd5b8201610160818503121561068857600080fd5b60008060008060008060008060008060e08b8d0312156177c157600080fd5b8a3567ffffffffffffffff808211156177d957600080fd5b6177e58e838f016174fd565b9b5060208d01359150808211156177fb57600080fd5b6178078e838f01617588565b909b50995060408d013591508082111561782057600080fd5b61782c8e838f01617588565b909950975060608d013591508082111561784557600080fd5b506178528d828e01617588565b90965094505060808b0135925061786b60a08c016170c0565b915060c08b013590509295989b9194979a5092959850565b604080825283519082018190526000906020906060840190828701845b828110156178be5781511515845292840192908401906001016178a0565b505050838103828501526178d281866176f2565b9695505050505050565b600080602083850312156178ef57600080fd5b823567ffffffffffffffff81111561790657600080fd5b61791285828601617588565b90969095509350505050565b6000806000806040858703121561793457600080fd5b843567ffffffffffffffff8082111561794c57600080fd5b61795888838901617588565b9096509450602087013591508082111561797157600080fd5b5061797e87828801617588565b95989497509550505050565b6000806040838503121561799d57600080fd5b823567ffffffffffffffff8111156179b457600080fd5b8301604081860312156179c657600080fd5b946020939093013593505050565b6000806000806000608086880312156179ec57600080fd5b853567ffffffffffffffff80821115617a0457600080fd5b9087019060a0828a031215617a1857600080fd5b90955060208701359080821115617a2e57600080fd5b50617a3b88828901617588565b909550935050604086013591506060860135617a56816170ab565b809150509295509295909350565b60008060008060008060008060a0898b031215617a8057600080fd5b883567ffffffffffffffff80821115617a9857600080fd5b617aa48c838d01617588565b909a50985060208b0135915080821115617abd57600080fd5b617ac98c838d01617588565b909850965060408b0135915080821115617ae257600080fd5b50617aef8b828c01617588565b999c989b509699959896976060870135966080013595509350505050565b600060208284031215617b1f57600080fd5b8135610688816170ab565b606081526000617b3d6060830186616f46565b90508360208301526001600160a01b0383166040830152949350505050565b600060208284031215617b6e57600080fd5b813567ffffffffffffffff811115617b8557600080fd5b8201610240818503121561068857600080fd5b6000617ba661715b84617087565b83815260208082019190600586811b860136811115617bc457600080fd5b865b81811015617cc057803567ffffffffffffffff80821115617be75760008081fd5b818a01915060a08236031215617bfd5760008081fd5b617c05616feb565b823581528683013560028110617c1b5760008081fd5b81880152604083810135908201526060808401359082015260808084013583811115617c475760008081fd5b939093019236601f850112617c5e57600092508283fd5b83359250617c6e61715b84617087565b83815292871b84018801928881019036851115617c8b5760008081fd5b948901945b84861015617ca957853582529489019490890190617c90565b918301919091525088525050948301948301617bc6565b5092979650505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112617d0257600080fd5b83018035915067ffffffffffffffff821115617d1d57600080fd5b602001915060a0810236038213156175cd57600080fd5b600060a08284031215617d4657600080fd5b61068883836170da565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112617d8557600080fd5b83018035915067ffffffffffffffff821115617da057600080fd5b602001915060c0810236038213156175cd57600080fd5b600060c08284031215617dc957600080fd5b61068883836171af565b600060208284031215617de557600080fd5b610688826172a6565b600061059c3683617447565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203617e3c57617e3c617dfa565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b815160009082906020808601845b83811015617e9c57815185529382019390820190600101617e80565b50929695505050505050565b6004811061453157614531617669565b6176a881617ea8565b8c81526001600160a01b038c811660208301528b166040820152606081018a9052608081018990526101808101617ef789617ea8565b60a082019890985260c081019690965260e08601949094526101008501929092526101208401526101408301526101609091015295945050505050565b600060408284031215617f4657600080fd5b6040516040810181811067ffffffffffffffff82111715617f6957617f69616fbc565b604052823581526020928301359281019290925250919050565b6000617f9161715b84617087565b80848252602080830192508560051b850136811115617faf57600080fd5b855b8181101561804a57803567ffffffffffffffff811115617fd15760008081fd5b870136601f820112617fe35760008081fd5b8035617ff161715b82617087565b81815260069190911b820185019085810190368311156180115760008081fd5b928601925b8284101561803a576180283685617f34565b82528682019150604084019350618016565b8852505050938201938201617fb1565b50919695505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261808a57600080fd5b9190910192915050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea183360301811261808a57600080fd5b600061059c36836172b5565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261810957600080fd5b83018035915067ffffffffffffffff82111561812457600080fd5b6020019150368190038213156175cd57600080fd5b600081518084526020808501945080840160005b83811015617748576181608783516176ac565b60a096909601959082019060010161814d565b6000608080830187845260206001600160a01b03808916828701526040848188015283895180865260a089019150848b01955060005b818110156181ea5786516181be848251617698565b8087015186168488015284810151858501526060908101519084015295850195918701916001016181a9565b505087810360608901526181fe818a618139565b9c9b505050505050505050505050565b60006020828403121561822057600080fd5b81356018811061068857600080fd5b60008161823e5761823e617dfa565b506000190190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261827b57600080fd5b83018035915067ffffffffffffffff82111561829657600080fd5b6020019150600681901b36038213156175cd57600080fd5b6000828210156182c0576182c0617dfa565b500390565b86815260c081016182d96020830188617698565b6001600160a01b03861660408301528460608301528360808301528260a0830152979650505050505050565b87815260e081016183196020830189617698565b6001600160a01b0380881660408401528660608401528560808401528460a084015280841660c08401525098975050505050505050565b6000821982111561836357618363617dfa565b500190565b600081600019048311821515161561838257618382617dfa565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826183c5576183c5618387565b500490565b6000604082840312156183dc57600080fd5b6040516040810181811067ffffffffffffffff821117156183ff576183ff616fbc565b604052823581526020830135618414816170ab565b60208201529392505050565b60008183825b6001811015618445578151835260209283019290910190600101618426565b50505060208201905092915050565b60006040828403121561846657600080fd5b6106888383617f34565b600281106176a8576176a8617669565b6020810161059c8284618470565b600080604083850312156184a157600080fd5b505080516020909101519092909150565b600060ff821660ff84168060ff038211156184cf576184cf617dfa565b019392505050565b6000602082840312156184e957600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461068857600080fd5b600081518084526020808501945080840160005b83811015617748578151618542888251617698565b808401516001600160a01b03168885015260408082015190890152606080820151908901526080908101519088015260a0909601959082019060010161852d565b600081518084526020808501945080840160005b838110156177485781516185ac888251617698565b808401516001600160a01b0390811689860152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c09096019590820190600101618597565b600081518084526020808501945080840160005b838110156177485781518752958201959082019060010161860e565b600081518084526020808501808196508360051b8101915082860160005b858110156186ae578284038952815160a0815186528682015161866d88880182618470565b50604082810151908701526060808301519087015260809182015191860181905261869a818701836185fa565b9a87019a9550505090840190600101618648565b5091979650505050505050565b8581526001600160a01b038516602082015260a060408201526000610140855160a0808501526186f682850182516001600160a01b03169052565b6020810151610160618712818701836001600160a01b03169052565b60408301519150806101808701525061872f6102a0860182618519565b905060608201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec0868303016101a087015261876b8282618583565b91505060808201516187816101c0870182617eb8565b5060a08201516101e086015260c082015161020086015260e082015161022086015261010080830151610240870152610120808401516102608801528484015161028088015260208a015194506187eb60c08801866effffffffffffffffffffffffffffff169052565b60408a01516effffffffffffffffffffffffffffff1660e088015260608a01518784037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60908101848a015290955093506188458386616f46565b945060808a0151925083878603018188015250506188638382616f46565b92505050828103606084015261887981866185fa565b9050828103608084015261888d818561862a565b98975050505050505050565b6000826188a8576188a8618387565b500690565b600080858511156188bd57600080fd5b838611156188ca57600080fd5b5050820193919092039150565b602080825282518282018190526000919060409081850190868401855b828110156186ae578151805161890981617ea8565b8552808701516001600160a01b039081168887015286820151811687870152606080830151909116908601526080808201519086015260a0908101519085015260c090930192908501906001016188f4565b828152604060208201526000610a786040830184616f46565b6000825161808a818460208701616f1a565b60006020828403121561899857600080fd5b8151801515811461068857600080fdfea264697066735822122005ef3406942815a8864ef92b47f15c71b18e859116cbc199e6f9a4b78ee9e77f64736f6c634300080e0033",
    "sourceMap": "1276:27859:84:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28938:195;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27424:354;;;;;;;;;;-1:-1:-1;27424:354:84;;;;;:::i;:::-;27544:16;17179:23:99;;;:12;:23;;;;;17284;;;;;;;17321;;;;;;17358:21;;;;;;;17393:23;;;;;;27424:354:84;;;;;1253:14:144;;1246:22;1228:41;;1312:14;;1305:22;1300:2;1285:18;;1278:50;1344:18;;;1337:34;1402:2;1387:18;;1380:34;1215:3;1200:19;27424:354:84;1009:411:144;23266:570:84;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;25372:234::-;;;;;;;;;;;;;:::i;:::-;;;13795:25:144;;;13783:2;13768:18;25372:234:84;13649:177:144;25790:747:84;;;;;;;;;;-1:-1:-1;25790:747:84;;;;;:::i;:::-;;:::i;17596:1186::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;24898:211::-;;;;;;;;;;-1:-1:-1;24898:211:84;;;;;:::i;:::-;;:::i;:::-;;;17776:14:144;;17769:22;17751:41;;17739:2;17724:18;24898:211:84;17611:187:144;20281:554:84;;;;;;:::i;:::-;;:::i;5167:549::-;;;;;;:::i;:::-;;:::i;8401:595::-;;;;;;:::i;:::-;;:::i;11991:1239::-;;;;;;:::i;:::-;;:::i;27970:225::-;;;;;;;;;;-1:-1:-1;27970:225:84;;;;;:::i;:::-;;:::i;28500:303::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;3507:315::-;;;;;;:::i;:::-;;:::i;24177:215::-;;;;;;;;;;-1:-1:-1;24177:215:84;;;;;:::i;:::-;;:::i;28938:195::-;29018:26;29119:7;8008:5:96;;;;;;;;;;;;;;;;;;7892:128;29119:7:84;29104:22;;28938:195;:::o;23266:570::-;23555:29;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:32::1;885:16:100;:27:::0;23698:131:84::2;23736:14:::0;23698:131:::2;23768:17:::0;;23698:131:::2;:::i;:::-;23803:12;;23698:20;:131::i;:::-;2345:1:32::1;933:16:100;:31:::0;23679:150:84;23266:570;-1:-1:-1;;;;;;23266:570:84:o;25372:234::-;25470:18;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;25580:19:84::1;:17;:19::i;25790:747::-:0;26104:389;;;;;;;;;25908:17;;26074:456;;26104:389;26137:13;;;;:5;:13;:::i;:::-;-1:-1:-1;;;;;26104:389:84;;;;;26168:5;:10;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26104:389:84;;;;;26196:11;;;;:5;:11;:::i;:::-;26104:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;26104:389:84;;;-1:-1:-1;;26104:389:84;;26225:19;;;;:5;:19;:::i;:::-;26104:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;26104:389:84;;;-1:-1:-1;;26104:389:84;;26262:15;;;;;;;;:::i;:::-;26104:389;;;;;;;;:::i;:::-;;;;;26295:5;:15;;;26104:389;;;;26328:5;:13;;;26104:389;;;;26359:5;:14;;;26104:389;;;;26391:5;:10;;;26104:389;;;;26419:5;:16;;;26104:389;;;;26453:5;:19;;;;;;;;:::i;:::-;26104:389;;;-1:-1:-1;26507:13:84;;;;26074:16;:456::i;:::-;26062:468;25790:747;-1:-1:-1;;25790:747:84:o;17596:1186::-;18079:29;18110;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:32::1;885:16:100;:27:::0;;;18265:79:84::2;18316:14:::0;18265:33:::2;:79::i;:::-;18211:133;;18415:360;18464:14;18496:15;18529:17;;18415:360;;;;;:::i;:::-;18564:17:::0;;18599:25;;18642:19;-1:-1:-1;;;;;18679:23:84;::::2;::::0;:48:::2;;18718:9;18679:48;;;18705:10;18679:48;18745:16;18415:31;:360::i;:::-;2345:1:32::1;933:16:100;:31:::0;18396:379:84;;;;-1:-1:-1;17596:1186:84;-1:-1:-1;;;;;;;;;;;;17596:1186:84:o;24898:211::-;25011:14;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;25085:17:84::1;25095:6;;25085:9;:17::i;:::-;25073:29:::0;24898:211;-1:-1:-1;;;24898:211:84:o;20281:554::-;20493:29;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:32::1;885:16:100;:27:::0;20636:192:84::2;20674:32;20699:6:::0;;20674:24:::2;:32::i;:::-;20724:25;::::0;;20747:1:::2;20724:25:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20724:25:84::2;;;;;;;;;;;;;;;;;20802:12;;20636:20;:192::i;:::-;2345:1:32::1;933:16:100;:31:::0;20617:211:84;20281:554;-1:-1:-1;;;;;20281:554:84:o;5167:549::-;5347:14;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:32::1;885:16:100;:27:::0;5492:217:84::2;5538:30;5562:5:::0;5538:23:::2;:30::i;:::-;5582:25;::::0;;5605:1:::2;5582:25:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5582:25:84::2;;;;;;;;;;;;;;;;;5656:19;5689:10;5492:32;:217::i;:::-;2345:1:32::1;933:16:100;:31:::0;5480:229:84;5167:549;-1:-1:-1;;;5167:549:84:o;8401:595::-;8709:14;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:32::1;885:16:100;:27:::0;8794:195:84::2;;8840:13:::0;8794:195:::2;:::i;:::-;;8867:17:::0;;8794:195:::2;:::i;:::-;8898:19:::0;-1:-1:-1;;;;;8931:23:84;::::2;::::0;:48:::2;;8970:9;8794:32;:195::i;8931:48::-;8957:10;8794:32;:195::i;11991:1239::-:0;12370:29;12401;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:32::1;885:16:100;:27:::0;;;12534:54:84::2;12572:6:::0;;12534:24:::2;:54::i;:::-;12494:94;;12654:51;12708:79;12759:14;12708:33;:79::i;:::-;12654:133:::0;-1:-1:-1;12858:365:84::2;12907:14:::0;12654:133;12995:1:::2;12972:25;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12972:25:84::2;;;;;;;;;;;;;;;;;13050:17;;13085:25;;13128:19;13165:10;13193:16;12858:31;:365::i;:::-;2345:1:32::1;933:16:100;:31:::0;12839:384:84;;;;-1:-1:-1;11991:1239:84;-1:-1:-1;;;;;;;;;;;11991:1239:84:o;27970:225::-;-1:-1:-1;;;;;1701:18:92;;28071:15:84;1701:18:92;;;:9;:18;;;;;;28168:20:84;1505:221:92;28500:303:84;28600:21;28635:23;28672:25;28782:14;:12;:14::i;:::-;28775:21;;;;;;28500:303;;;:::o;3507:315::-;3683:14;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:32::1;885:16:100;:27:::0;3774:41:84::2;3804:10:::0;3774:29:::2;:41::i;:::-;2345:1:32::1;933:16:100;:31:::0;3762:53:84;3507:315;-1:-1:-1;;3507:315:84:o;24177:215::-;24298:14;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;24370:15:84::1;24378:6;;24370:7;:15::i;33066:919:97:-:0;33265:29;33362:51;33416:79;33467:14;33416:33;:79::i;:::-;33362:133;;33587:257;33635:14;33663:15;33692:17;33723:4;33789:14;:21;33832:1;33587:34;:257::i;:::-;33925:53;33948:15;33965:12;;33925:22;:53::i;:::-;33918:60;;;33066:919;;;;;;;:::o;938:333:92:-;1020:18;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;1142:10:92::1;1132:21;::::0;;;:9:::1;:21;::::0;;;;1130:23;;1132:21;;;1130:23:::1;::::0;::::1;:::i;:::-;::::0;;;;-1:-1:-1;1222:42:92::1;::::0;13795:25:144;;;1130:23:92;;-1:-1:-1;1253:10:92::1;::::0;1222:42:::1;::::0;13783:2:144;13768:18;1222:42:92::1;;;;;;;938:333:::0;:::o;2969:1866:96:-;3097:17;3207:28;3265:15;:21;;;:28;3238:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3238:65:96;;3207:96;;3313:36;3379:15;:47;;;3352:84;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3352:84:96;;3313:123;;3501:9;3496:205;3520:15;:21;;;:28;3516:1;:32;3496:205;;;3650:40;3665:15;:21;;;3687:1;3665:24;;;;;;;;:::i;:::-;;;;;;;3650:14;:40::i;:::-;3633:11;3645:1;3633:14;;;;;;;;:::i;:::-;;;;;;;;;;:57;3550:3;;;:::i;:::-;;;3496:205;;;;3786:9;3768:332;3817:15;:47;;;3813:1;:51;3768:332;;;4003:86;4043:15;:29;;;4073:1;4043:32;;;;;;;;:::i;:::-;;;;;;;4003:22;:86::i;:::-;3978:19;3998:1;3978:22;;;;;;;;:::i;:::-;;;;;;;;;;:111;3878:3;;;:::i;:::-;;;3768:332;;;;4258:15;4295;:23;;;4340:15;:20;;;4409:11;4392:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;4382:40;;;;;;4471:19;4454:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;4444:48;;;;;;4514:15;:25;;;4561:15;:25;;;4608:15;:23;;;4653:15;:24;;;4699:15;:20;;;4741:15;:26;;;4789:7;4226:588;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4199:629;;;;;;4180:648;;;;2969:1866;;;;:::o;16114:731:98:-;16379:21;;16233:39;;16379:21;16500:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16500:33:98;;-1:-1:-1;;16500:33:98;;;;;;;;;;;;16482:51;;16591:9;16586:171;16610:11;16606:1;:15;16586:171;;;16704:42;16728:14;16743:1;16728:17;;;;;;;;:::i;:::-;;;;;;;16704:23;:42::i;:::-;16683:15;16699:1;16683:18;;;;;;;;:::i;:::-;;;;;;:63;;;;16623:3;;;;:::i;:::-;;;16586:171;;;;16816:22;16114:731;;;:::o;6644:1251:97:-;7102:29;7133;7258:256;7306:14;7334:15;7363:17;7394:5;7465:16;7495:9;7258:34;:256::i;:::-;7587:194;7630:15;7587:194;7659:17;;7587:194;:::i;:::-;;7690:25;;7587:194;:::i;:::-;7729:19;7762:9;7587:29;:194::i;:::-;7555:226;;;;-1:-1:-1;6644:1251:97;-1:-1:-1;;;;;;;;;;;6644:1251:97:o;13992:1951:99:-;14089:4;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;14159:31:99::1;::::0;;14350:6;14159:31;14410:1505:::1;14434:11;14430:1;:15;14410:1505;;;14501:20;14524:6;;14531:1;14524:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;14501:32:::0;-1:-1:-1;14594:40:99::1;14637:16;14501:32:::0;;14637:16:::1;:::i;:::-;14594:59:::0;-1:-1:-1;14732:23:99::1;;::::0;::::1;14594:59:::0;14732:23:::1;:::i;:::-;14722:33:::0;-1:-1:-1;14860:88:99::1;;14919:15:::0;14860:88:::1;:::i;:::-;:41;:88::i;:::-;15048:23;::::0;;;:12:::1;:23;::::0;;;;;-1:-1:-1;14848:100:99;;-1:-1:-1;15158:234:99::1;::::0;14848:100;;15048:23;;15326:4:::1;15158:18;:234::i;:::-;-1:-1:-1::0;15474:23:99;;::::1;;15469:436;;15567:53;15584:7:::0;15593:9;15604:15:::1;;::::0;::::1;:5:::0;:15:::1;:::i;:::-;15567:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;15567:16:99::1;::::0;-1:-1:-1;;;15567:53:99:i:1;:::-;15706:30:::0;;;::::1;15732:4;15706:30;::::0;;15869:20:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;15834:56:99::1;15860:7;-1:-1:-1::0;;;;;15834:56:99::1;;15849:9;15834:56;;;;13795:25:144::0;;13783:2;13768:18;;13649:177;15834:56:99::1;;;;;;;;15469:436;14452:1463;;14447:3;;;;:::i;:::-;;;14410:1505;;;-1:-1:-1::0;15932:4:99::1;::::0;13992:1951;-1:-1:-1;;;;;;;13992:1951:99:o;12362:736:98:-;12468:37;12618:6;;12729:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12712:49;;12819:9;12814:198;12838:11;12834:1;:15;12814:198;;;12967:34;12991:6;;12998:1;12991:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;12967:23;:34::i;:::-;12947:14;12962:1;12947:17;;;;;;;;:::i;:::-;;;;;;:54;;;;12851:3;;;;:::i;:::-;;;12814:198;;;;13070:21;12362:736;;;;:::o;11694:380::-;11796:34;;:::i;:::-;11939:128;;;;;;;;;;11966:16;:5;;:16;:::i;:::-;11939:128;;;:::i;:::-;;;;;11996:1;11939:128;;;;;;12011:1;11939:128;;;;;;12026:5;:15;;;;;;;;:::i;:::-;11939:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11939:128:98;;;-1:-1:-1;;11939:128:98;;;;;;;;;;;;;;;;;-1:-1:-1;11923:144:98;11694:380;-1:-1:-1;;11694:380:98:o;3136:1664::-;3363:4;3447:33;3579:17;3610:21;3645:23;3681:165;3728:13;3759:17;3794:4;3816:16;3681:29;:165::i;:::-;3565:281;;;;;;3936:65;3968:13;3983:17;3936:31;:65::i;:::-;4129:24;;4088:38;4281:181;4129:24;4354:13;4381:15;4410:19;4443:9;4281:30;:181::i;:::-;4242:220;;4637:15;:20;;;-1:-1:-1;;;;;4549:222:98;4600:15;:23;;;-1:-1:-1;;;;;4549:222:98;;4577:9;4671;4694:14;:25;;;4733:14;:28;;;4549:222;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;4789:4:98;;3136:1664;-1:-1:-1;;;;;;;;;;3136:1664:98:o;7435:335:96:-;7651:8;;;;;;;;;;;;;;;;;7554:23;;7687:18;:16;:18::i;:::-;7435:335;;7743:19;;-1:-1:-1;7435:335:96;-1:-1:-1;7435:335:96:o;10145:9637:89:-;10258:4;;;10425:25;;;;;;;;:::i;:::-;10398:52;;10472:17;:28;10490:9;10472:28;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;10472:28:89;;;;;;;-1:-1:-1;;;;10654:25:89;;;;10472:28;10654:25;;;:::i;:::-;10627:52;;10705:22;:33;10728:9;10705:33;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;10705:33:89;;;;;;;-1:-1:-1;;;;10904:5:89;:42;;;;;;;;:::i;:::-;;:101;;;-1:-1:-1;10971:34:89;10962:5;:43;;;;;;;;:::i;:::-;;10904:101;10887:276;;;-1:-1:-1;11061:15:89;10887:276;;;-1:-1:-1;11138:14:89;10887:276;11253:9;:14;:65;;;;-1:-1:-1;11303:15:89;11271:28;:47;;;;;;;;:::i;:::-;;11253:65;11249:129;;;11341:26;;;;;11357:9;11341:26;;;13795:25:144;13768:18;;11341:26:89;;;;;;;;11249:129;11468:9;:14;;;;:64;;-1:-1:-1;11518:14:89;11486:28;:46;;;;;;;;:::i;:::-;;11468:64;11464:128;;;11555:26;;;;;11571:9;11555:26;;;13795:25:144;13768:18;;11555:26:89;13649:177:144;11464:128:89;11677:33;11746:35;11737:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;11806:36:89;11797:5;:45;;;;;;;;:::i;:::-;;11737:105;11720:295;;;11895:21;;;;;;;;:::i;:::-;11867:49;;11720:295;;;11975:29;;;;:10;:29;:::i;:::-;11947:57;;11720:295;12080:25;;12132:5;:42;;;;;;;;:::i;:::-;;:101;;;-1:-1:-1;12199:34:89;12190:5;:43;;;;;;;;:::i;:::-;;12132:101;12115:566;;;-1:-1:-1;12277:15:89;12115:566;;;12335:35;12326:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;12395:36:89;12386:5;:45;;;;;;;;:::i;:::-;;12326:105;12309:372;;;-1:-1:-1;12475:14:89;12309:372;;;12519:35;12510:5;:44;;;;;;;;:::i;:::-;;12506:175;;-1:-1:-1;12589:15:89;12506:175;;;-1:-1:-1;12654:16:89;12506:175;12748:24;12808:35;12799:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;12868:36:89;12859:5;:45;;;;;;;;:::i;:::-;;12799:105;12782:449;;;-1:-1:-1;12947:14:89;12782:449;;;13004:33;12995:5;:42;;;;;;;;:::i;:::-;;:102;;;-1:-1:-1;13062:35:89;13053:5;:44;;;;;;;;:::i;:::-;;12995:102;12978:253;;;-1:-1:-1;13140:15:89;12978:253;;;-1:-1:-1;13204:16:89;12978:253;13318:221;13356:10;13380:9;13403:16;13433:28;13475:25;13514:15;13318:24;:221::i;:::-;13612:23;13638:18;;;;;;;;:::i;:::-;13612:44;-1:-1:-1;13736:18:89;13790:35;13781:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;13850:36:89;13841:5;:45;;;;;;;;:::i;:::-;;13781:105;13764:273;;;-1:-1:-1;13924:30:89;;;;13764:273;;;-1:-1:-1;13998:28:89;;;;13764:273;14123:33;14114:5;:42;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;14185:34:89;14176:5;:43;;;;;;;;:::i;:::-;;14114:105;14113:245;;;;-1:-1:-1;14302:34:89;;;;;;14249:29;;14302:10;14249:29;:::i;:::-;-1:-1:-1;;;;;14241:95:89;;14240:118;;14113:245;14112:435;;;-1:-1:-1;14386:35:89;14377:5;:44;;;;;;;;:::i;:::-;;:109;;;-1:-1:-1;14450:36:89;14441:5;:45;;;;;;;;:::i;:::-;;14377:109;14376:170;;;;-1:-1:-1;14507:34:89;;;;:39;;14376:170;14112:615;;;-1:-1:-1;14574:35:89;14565:5;:44;;;;;;;;:::i;:::-;;:109;;;-1:-1:-1;14638:36:89;14629:5;:45;;;;;;;;:::i;:::-;;14565:109;14564:162;;;;-1:-1:-1;14695:26:89;;;;:31;;14564:162;14095:697;;;14759:22;;;;;;;;;;;;;;14095:697;-1:-1:-1;;;;;;;;;;;;;;;;;15062:33:89;15053:5;:42;;;;;;;;:::i;:::-;;15049:4580;;15191:268;15224:21;;;;;;;;:::i;:::-;15263:7;15288:10;15316;:26;;;15360:10;:22;;;15400:10;15428:17;15191:15;:268::i;:::-;15555:67;15579:10;:30;;;15611:10;15555:23;:67::i;:::-;15049:4580;;;15652:34;15643:5;:43;;;;;;;;:::i;:::-;;15639:3990;;15783:269;15817:21;;;;;;;;:::i;:::-;15856:7;15881:10;15909;:26;;;15953:10;:22;;;15993:10;16021:17;15783:16;:269::i;15639:3990::-;16245:35;16236:5;:44;;;;;;;;:::i;:::-;;16232:3397;;16376:268;16409:21;;;;;;;;:::i;16376:268::-;16727:331;16770:10;16798:7;16823:29;;;;:10;:29;:::i;:::-;16870:10;:30;;;16918:10;16946:5;17027:17;16727:25;:331::i;16232:3397::-;17088:36;17079:5;:45;;;;;;;;:::i;:::-;;17075:2554;;17221:269;17255:21;;;;;;;;:::i;17075:2554::-;17934:35;17925:5;:44;;;;;;;;:::i;:::-;;17921:1708;;18065:292;18098:29;;;;:10;:29;:::i;:::-;18145:10;18173:7;18198:10;:34;;;18250:10;:30;;;18298:10;18326:17;18065:15;:292::i;:::-;18440:314;18483:7;18508:10;18536;:21;;;;;;;;;;:::i;:::-;18575:10;:22;;;18615:10;18643:4;18723:17;18440:25;:314::i;17921:1708::-;18928:293;18962:29;;;;:10;:29;:::i;:::-;19009:10;19037:7;19062:10;:34;;;19114:10;:30;;;19162:10;19190:17;18928:16;:293::i;:::-;19304:314;19347:7;19372:10;19400;:21;;;;;;;;;;:::i;19304:314::-;19719:34;19735:17;19719:15;:34::i;:::-;-1:-1:-1;19771:4:89;;10145:9637;-1:-1:-1;;;;;;;;;;10145:9637:89:o;11610:1882:99:-;11715:4;2376:1:32;1161:16:100;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;11785:31:99::1;::::0;;11971:6;11785:31;12031:1434:::1;12055:11;12051:1;:15;12031:1434;;;12122:30;12155:6;;12162:1;12155:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;12122:42:::0;-1:-1:-1;12189:13:99::1;;::::0;::::1;12122:42:::0;12189:13:::1;:::i;:::-;12179:23:::0;-1:-1:-1;12223:10:99::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;12216:17:::0;-1:-1:-1;12321:10:99::1;-1:-1:-1::0;;;;;12321:21:99;::::1;;::::0;::::1;::::0;:43:::1;;-1:-1:-1::0;12346:10:99::1;-1:-1:-1::0;;;;;12346:18:99;::::1;;;12321:43;12317:107;;;12391:18;;;;;;;;;;;;;;12317:107;12515:17;12535:504;12569:425;;;;;;;;12606:7;-1:-1:-1::0;;;;;12569:425:99::1;;;;;12635:4;-1:-1:-1::0;;;;;12569:425:99::1;;;;;12661:5;:11;;;;;;;;:::i;:::-;12569:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;-1:-1:-1::0;;;12569:425:99;;;-1:-1:-1;;12569:425:99::1;;12694:19;;::::0;::::1;:5:::0;:19:::1;:::i;:::-;12569:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;12535:504;13139:23;::::0;;;:12:::1;:23;::::0;;;;;;13244:31;;13289:30;;13244:31:::1;13289:30;::::0;;13414:40;;13139:23;;-1:-1:-1;12515:524:99;;-1:-1:-1;;;;;;13414:40:99;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;12515:524;13795:25:144;;13783:2;13768:18;;13649:177;13414:40:99::1;;;;;;;;12073:1392;;12068:3;;;;:::i;:::-;;;12031:1434;;9347:8431:97::0;9741:21;;9719:19;9741:21;9868:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9868:26:97;-1:-1:-1;9837:57:97;-1:-1:-1;9952:15:97;9970:7;;:68;:7;9993:45;9970:68;;;;:132;;-1:-1:-1;10054:7:97;;:48;:7;10065:37;10054:48;;9970:132;9952:150;-1:-1:-1;10112:24:97;;10183:6168;10207:11;10203:1;:15;10183:6168;;;10282:34;10319:14;10334:1;10319:17;;;;;;;;:::i;:::-;;;;;;;10282:54;;10396:36;10435:15;10451:1;10435:18;;;;;;;;:::i;:::-;;;;;;;10396:57;;10547:16;10567:1;10547:21;10543:383;;10691:1;10665:23;;;;:27;;;10788:24;;:28;10903:8;;10543:383;11033:17;11068;11103:19;11139:191;11190:13;11225:17;11264:15;11301:11;11139:29;:191::i;:::-;11015:315;;;;;;11426:9;11439:1;11426:14;11422:376;;-1:-1:-1;;11563:1:97;11537:23;;;;:27;;;-1:-1:-1;11660:24:97;;:28;11775:8;;11422:376;11889:9;11872:11;11884:1;11872:14;;;;;;;;:::i;:::-;;;;;;;;;;:26;11970:18;;;;:::i;:::-;12087:24;;:34;;;;12211:32;;;;12357:30;;;;;11970:18;;-1:-1:-1;12087:34:97;-1:-1:-1;12211:32:97;12067:17;12460:1741;12484:5;:12;12480:1;:16;12460:1741;;;12565:26;12594:5;12600:1;12594:8;;;;;;;;:::i;:::-;;;;;;;12565:37;;12663:19;:80;;;-1:-1:-1;12728:15:97;12706:18;;:37;;;;;;;;:::i;:::-;;12663:80;12621:122;;12833:17;12853:135;12887:9;12918:11;12951:9;:19;;;12853:12;:135::i;:::-;12833:155;;13111:9;:19;;;13086:9;:21;;;:44;13082:499;;13228:21;;;:33;;;13082:499;;;13409:153;13447:9;13482:11;13519:9;:21;;;13409:12;:153::i;:::-;13385:21;;;:177;13082:499;13675:19;;;:31;;;13862:21;;;;13820:224;;13697:9;13946;13977:7;14006:5;13820:20;:224::i;:::-;13796:21;;;:248;;;14127:25;;;;:28;;14153:1;;14127:28;;;;;;:::i;:::-;;;;;;;:35;;:59;;;;;12503:1698;;12498:3;;;;:::i;:::-;;;12460:1741;;;-1:-1:-1;14352:24:97;;:38;;;14291:40;14485:1856;14509:13;:20;14505:1;:24;14485:1856;;;14606:42;14652:13;14666:1;14652:16;;;;;;;;:::i;:::-;;;;;;;14606:63;;14756:17;14776:143;14810:9;14841:11;14874:17;:27;;;14776:12;:143::i;:::-;14756:163;;15071:17;:27;;;15038:17;:29;;;:60;15013:574;;15213:29;;;:41;;;15013:574;;;15407:161;15445:9;15480:11;15517:17;:29;;;15407:12;:161::i;:::-;15375:29;;;:193;15013:574;15681:27;;;:39;;;15916:29;;;;15870:261;;15711:9;16024;16059:7;16092:4;15870:20;:261::i;:::-;15816:29;;;:333;;;16235:28;;;;:31;;16264:1;;16235:31;;;;;;:::i;:::-;;;;;;;:38;;:91;;;;;14536:1805;;14531:3;;;;:::i;:::-;;;14485:1856;;;;10225:6126;;;;;;;;;10183:6168;10220:3;;;:::i;:::-;;;10183:6168;;;;16365:19;:33;;;;;16388:10;16365:33;16361:95;;;16421:24;;;;;;;;;;;;;;16361:95;16531:59;16555:15;16572:17;16531:23;:59::i;:::-;16721:9;16716:1056;16740:11;16736:1;:15;16716:1056;;;16867:1;16859:10;;16841:11;16853:1;16841:14;;;;;;;;:::i;:::-;;;;;;;:28;16837:75;16889:8;16837:75;16988:38;17047:14;17062:1;17047:17;;;;;;;;:::i;:::-;;;;;;;:28;;;16988:101;;17179:29;17211:15;17227:1;17211:18;;;;;;;;:::i;:::-;;;;;;;:29;;;17179:61;;17354:35;17392:15;17408:1;17392:18;;;;;;;;:::i;:::-;;;;;;;:49;;;17354:87;;17641:15;:20;;;-1:-1:-1;;;;;17536:225:97;17600:15;:23;;;-1:-1:-1;;;;;17536:225:97;;17568:11;17580:1;17568:14;;;;;;;;:::i;:::-;;;;;;;17679:9;17706:10;17734:13;17536:225;;;;;;;;;:::i;:::-;;;;;;;;16758:1014;;;16716:1056;16753:3;;;:::i;:::-;;;16716:1056;;;;9646:8132;;;;9347:8431;;;;;;:::o;34924:2213::-;35074:29;35213:12;;35336:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35336:34:97;;-1:-1:-1;;35336:34:97;;;;;;;;;;;;35323:47;;35429:31;35522:9;35517:873;35541:17;35537:1;:21;35517:873;;;35633:32;35668:12;;35681:1;35668:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;35633:50;-1:-1:-1;35770:26:97;35799:162;35834:15;35867:27;35633:50;;35867:27;:::i;:::-;35912:35;;;;:11;:35;:::i;:::-;35799:17;:162::i;:::-;35770:191;;36081:9;:17;;;-1:-1:-1;;;;;36053:45:97;:9;:14;;;:24;;;-1:-1:-1;;;;;36053:45:97;;36049:331;;36174:25;;;:::i;:::-;;;36049:331;;;36356:9;36314:10;36325:27;36329:23;36325:1;:27;:::i;:::-;36314:39;;;;;;;;:::i;:::-;;;;;;:51;;;;36049:331;35565:825;;35560:3;;;;:::i;:::-;;;35517:873;;;-1:-1:-1;36466:28:97;;36462:484;;36510:23;36536:59;36572:23;36536:17;:59;:::i;:::-;36510:85;;36609:37;36682:15;36649:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36649:62:97;;-1:-1:-1;;36649:62:97;;;;;;;;;;;;36609:102;;36779:9;36774:116;36798:15;36794:1;:19;36774:116;;;36862:10;36873:1;36862:13;;;;;;;;:::i;:::-;;;;;;;36838:18;36857:1;36838:21;;;;;;;;:::i;:::-;;;;;;:37;;;;36815:3;;;;:::i;:::-;;;36774:116;;;-1:-1:-1;36917:18:97;-1:-1:-1;;36462:484:97;37008:64;37044:15;37061:10;37008:35;:64::i;:::-;;37113:17;;34924:2213;;;;;:::o;1215:472:96:-;1314:7;1415:20;1457:9;:18;;;1497:9;:15;;;1534:9;:30;;;1586:9;:21;;;1629:9;:19;;;1383:283;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1356:324;;;;;;1337:343;;1215:472;;;:::o;1912:593::-;2035:7;2136:28;2186:17;:26;;;2234:17;:23;;;2279:17;:38;;;2339:17;:29;;;2390:17;:27;;;2439:17;:27;;;2104:380;;;;;;;;;;;;;;:::i;13369:2472:98:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13612:24:98;;:30;;;13770:12;;13585:24;;13754:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13754:29:98;;-1:-1:-1;;13754:29:98;;;;;;;;;;;;13722:61;;13853:9;13848:519;13872:5;:12;13868:1;:16;13848:519;;;13945:26;13974:5;13980:1;13974:8;;;;;;;;:::i;:::-;;;;;;;13945:37;;14065:26;14094:179;;;;;;;;14121:9;:18;;;14094:179;;;;;;;;:::i;:::-;;;;;14157:9;:15;;;-1:-1:-1;;;;;14094:179:98;;;;;14190:9;:30;;;14094:179;;;;14238:9;:21;;;14094:179;;;14065:208;;14347:9;14331:10;14342:1;14331:13;;;;;;;;:::i;:::-;;;;;;:25;;;;13891:476;;13886:3;;;;:::i;:::-;;;13848:519;;;-1:-1:-1;14476:37:98;;:64;;;14701:20;;14433:40;;14669:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14669:62:98;;-1:-1:-1;;14669:62:98;;;;;;;;;;;;14631:100;;14809:9;14804:667;14828:13;:20;14824:1;:24;14804:667;;;14917:42;14963:13;14977:1;14963:16;;;;;;;;:::i;:::-;;;;;;;14917:63;;15074:32;15109:259;;;;;;;;15139:17;:26;;;15109:259;;;;;;;;:::i;:::-;;;;;15183:17;:23;;;-1:-1:-1;;;;;15109:259:98;;;;;15224:17;:38;;;15109:259;;;;15280:17;:29;;;15109:259;;;;15327:17;:27;;;-1:-1:-1;;;;;15109:259:98;;;;15074:294;;15448:12;15429:13;15443:1;15429:16;;;;;;;;:::i;:::-;;;;;;:31;;;;14855:616;;14850:3;;;;:::i;:::-;;;14804:667;;;-1:-1:-1;15567:207:98;;;;;;;;15595:24;;:32;-1:-1:-1;;;;;15567:207:98;;;;;;;;;;;;;;;;;;15692:24;;:35;;;15567:207;;;;15741:23;;;;;15567:207;;;;;;;13369:2472;-1:-1:-1;;;13369:2472:98:o;21625:4575:97:-;22131:24;;22302:32;;21943:29;;;;22476:55;22302:32;22131:24;22476:55;:::i;:::-;22447:94;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22447:94:97;;-1:-1:-1;;22447:94:97;;;;;;;;;;;;22434:107;;22600:31;22699:9;22694:937;22718:22;22714:1;:26;22694:937;;;22832:40;22876:17;22894:1;22876:20;;;;;;;;:::i;:::-;;;;;;;22832:65;;22987:26;23016:186;23053:15;23086:10;23114;23142:19;23179:9;23016:19;:186::i;:::-;22987:215;;23322:9;:17;;;-1:-1:-1;;;;;23294:45:97;:9;:14;;;:24;;;-1:-1:-1;;;;;23294:45:97;;23290:331;;23415:25;;;:::i;:::-;;;23290:331;;;23597:9;23555:10;23566:27;23570:23;23566:1;:27;:::i;:::-;23555:39;;;;;;;;:::i;:::-;;;;;;:51;;;;23290:331;22747:884;;22742:3;;;;:::i;:::-;;;22694:937;;;;23702:9;23697:1068;23721:30;23717:1;:34;23697:1068;;;23847:40;23908:25;23934:1;23908:28;;;;;;;;:::i;:::-;;;;;;;23847:103;;24040:26;24069:204;24106:15;24139:18;24175:10;24203:19;24240:9;24069:19;:204::i;:::-;24040:233;;24393:9;:17;;;-1:-1:-1;;;;;24365:45:97;:9;:14;;;:24;;;-1:-1:-1;;;;;24365:45:97;;24361:394;;24486:25;;;:::i;:::-;;;24361:394;;;24731:9;24626:10;24687:23;24658:26;24662:22;24658:1;:26;:::i;:::-;:52;;;;:::i;:::-;24626:102;;;;;;;;:::i;:::-;;;;;;:114;;;;24361:394;23758:1007;;23753:3;;;;:::i;:::-;;;23697:1068;;;-1:-1:-1;24841:28:97;;24837:960;;25171:23;25273;25198:71;25239:30;25198:22;:71;:::i;:::-;25197:99;;;;:::i;:::-;25171:125;;25379:37;25452:15;25419:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25419:62:97;;-1:-1:-1;;25419:62:97;;;;;;;;;;;;25379:102;;25562:9;25557:116;25581:15;25577:1;:19;25557:116;;;25645:10;25656:1;25645:13;;;;;;;;:::i;:::-;;;;;;;25621:18;25640:1;25621:21;;;;;;;;:::i;:::-;;;;;;:37;;;;25598:3;;;;:::i;:::-;;;25557:116;;;-1:-1:-1;25768:18:97;-1:-1:-1;;24837:960:97;25856:10;:17;25877:1;25856:22;25852:88;;25901:28;;;;;;;;;;;;;;25852:88;26048:98;26097:15;26126:10;26048:35;:98::i;:::-;26030:116;;26157:36;;;21625:4575;;;;;;;;:::o;1699:639:88:-;1827:17;1937:187;2017:15;:29;;;:36;2067:15;:47;;;1937:66;:187::i;:::-;2297:23;;-1:-1:-1;;;;;1701:18:92;2297:23:88;1701:18:92;;;:9;:18;;;;;;2226:105:88;;2256:15;;2226:16;:105::i;4100:1588:103:-;4368:23;;4285:10;;4368:23;;;;;4364:301;;;4484:15;4480:88;;;4526:27;;;;;;;;13795:25:144;;;13768:18;;4526:27:103;13649:177:144;4480:88:103;-1:-1:-1;4649:5:103;4642:12;;4364:301;4778:21;;;;;;;4864:25;;4860:746;;4989:15;4985:611;;;5111:31;;;;;;;;13795:25:144;;;13768:18;;5111:31:103;13649:177:144;4985:611:103;5269:23;;;;;;;5245:47;;5241:355;;5393:15;5389:98;;;5439:29;;;;;;;;13795:25:144;;;13768:18;;5439:29:103;13649:177:144;5389:98:103;5576:5;5569:12;;;;;5241:355;-1:-1:-1;5677:4:103;;4100:1588;-1:-1:-1;;;;;4100:1588:103:o;2747:569::-;2971:10;-1:-1:-1;;;;;2960:21:103;;;2956:58;;2747:569;;;:::o;2956:58::-;3104:14;3121:50;3141:18;:16;:18::i;:::-;3161:9;5308:60:96;;43655:16:144;5308:60:96;;;43639:102:144;43757:11;;;43750:27;;;43793:12;;;43786:28;;;5248:13:96;;43830:12:144;;5308:60:96;;;;;;;;;;;;5285:93;;;;;;5277:101;;5128:257;;;;;3121:50:103;3104:67;;3260:49;3282:7;3291:6;3299:9;3260:21;:49::i;:::-;2877:439;2747:569;;;:::o;4395:6288:99:-;4657:17;4688:20;4722:22;4819:38;4860:13;:24;;;4819:65;;4994:142;5023:15;:25;;;5066:15;:23;;;5107:15;4994:11;:142::i;:::-;4976:302;;-1:-1:-1;5258:1:99;;-1:-1:-1;5258:1:99;;-1:-1:-1;5258:1:99;;-1:-1:-1;5242:25:99;;4976:302;5394:23;;;;5458:25;;;;5386:32;;;;;5450:34;5572:23;;;;:41;;-1:-1:-1;5599:14:99;;5572:41;5568:92;;;5636:13;;;;;;;;;;;;;;5568:92;5780:11;5768:9;:23;:93;;;;;5807:54;5835:15;:25;;;5807:27;:54::i;:::-;5751:262;;;5970:32;;;;;;;;;;;;;;5751:262;6115:58;6157:15;6115:41;:58::i;:::-;6103:70;;6221:307;6273:13;6300:17;6331:16;6361:9;6384:15;:24;;;6422:15;:25;;;6461:15;:23;;;6498:15;:20;;;6221:38;:307::i;:::-;6606:31;6640:23;;;:12;:23;;;;;;6750:189;;6653:9;;6640:23;;6910:15;6750:18;:189::i;:::-;6732:348;;-1:-1:-1;7064:1:99;;-1:-1:-1;7064:1:99;;-1:-1:-1;7045:24:99;;-1:-1:-1;;;7045:24:99;6732:348;7176:23;;;;7171:194;;7215:139;7249:15;:23;;;7290:9;7317:13;:23;;;7215:16;:139::i;:::-;7490:21;;;;;;;;;7558:23;;;;7678:22;;7674:2871;;7801:11;7816:1;7801:16;7797:668;;7928:17;7916:29;;7977:17;7963:31;;7797:668;;;8130:11;8109:17;:32;8105:360;;8241:30;8260:11;8241:30;;:::i;:::-;;-1:-1:-1;8370:30:99;8383:17;8370:30;;:::i;:::-;;-1:-1:-1;8418:32:99;8433:17;8418:32;;:::i;:::-;;;8105:360;8594:11;8564:27;8582:9;8564:15;:27;:::i;:::-;:41;8560:197;;;8713:29;8727:15;8713:11;:29;:::i;:::-;8701:41;;8560:197;8839:28;8858:9;8839:28;;:::i;:::-;;-1:-1:-1;8985:17:99;8967:35;;;:86;;-1:-1:-1;9036:17:99;9022:31;;8967:86;8946:1005;;;9163:17;9183:145;9227:9;9258:52;9281:15;9298:11;9258:22;:52::i;:::-;9183:22;:145::i;:::-;9163:165;-1:-1:-1;9420:21:99;9444:14;;:30;;9465:9;9444:30;;;9461:1;9444:30;9420:54;-1:-1:-1;9565:25:99;9420:54;9565:9;:25;:::i;:::-;9553:37;-1:-1:-1;9626:31:99;9644:13;9626:15;:31;:::i;:::-;9608:49;-1:-1:-1;9689:27:99;9703:13;9689:11;:27;:::i;:::-;9675:41;-1:-1:-1;9796:19:99;9818:37;9838:17;-1:-1:-1;;9818:37:99;:::i;:::-;9796:59;-1:-1:-1;9909:25:99;9796:59;9909:11;:25;:::i;:::-;9875:29;9893:11;9875:15;:29;:::i;:::-;9874:61;;9068:883;;;8946:1005;10040:30;;10129:48;10191:46;;;;;;10129:48;;;;;;;;;;;;;10066:4;10129:48;10191:46;;;;7674:2871;;;10343:30;;10432:42;10488:46;;;;;;10432:42;;;;;;;;;;;;;10369:4;10432:42;10488:46;;;;7674:2871;-1:-1:-1;;10616:60:99;;;;;-1:-1:-1;;10616:60:99;;-1:-1:-1;;4395:6288:99;;;;;;;;;:::o;8570:5322:93:-;8833:24;;8960;;8813:17;9044:3731;9068:9;9064:1;:13;9044:3731;;;9145:40;9189:17;9207:1;9189:20;;;;;;;;:::i;:::-;;;;;;;;;;;9321:27;;9189:20;;-1:-1:-1;9367:15:93;;9363:94;;9409:33;;;;;;;;;;;;;;9363:94;9571:22;;;;9546;;;9813:16;:21;;;:35;;;;;;;;:::i;:::-;;9809:2360;;9954:15;:21;;;:28;9936:14;:46;9932:133;;10013:33;;;;;;;;;;;;;;9932:133;10158:22;10205:15;:21;;;10227:14;10205:37;;;;;;;;:::i;:::-;;;;;;;;;;;10367:14;;10422:26;;;;10367:14;;-1:-1:-1;10422:26:93;-1:-1:-1;10205:37:93;-1:-1:-1;10560:29:93;10548:8;:41;;;;;;;;:::i;:::-;;10544:200;;10630:15;10613:32;;10544:200;;;10709:16;10692:33;;10544:200;10867:27;;;;10838:26;;;;:56;9809:2360;;;11094:15;:29;;;:36;11076:14;:54;11072:149;;11161:41;;;;;;;;;;;;;;11072:149;11314:38;11377:15;:29;;;11407:14;11377:45;;;;;;;;:::i;:::-;;;;;;;;;;;11547:22;;11610:34;;;;11547:22;;-1:-1:-1;11610:34:93;-1:-1:-1;11377:45:93;-1:-1:-1;11756:29:93;11744:8;:41;;;;;;;;:::i;:::-;;11740:216;;11834:15;11809:40;;11740:216;;;11921:16;11896:41;;11740:216;12109:27;;;;12050:34;;;;:104;9809:2360;12260:29;12280:8;12260:19;:29::i;:::-;12255:103;;12316:27;;;;;;;;;;;;;;12255:103;12446:34;;12442:323;;12577:173;12611:16;:27;;;12660:20;12702:16;:30;;;12577:12;:173::i;:::-;9084:3691;;;;;9079:3;;;;:::i;:::-;;;9044:3731;;;-1:-1:-1;12933:24:93;;:38;;;:45;12911:18;13052:351;13076:10;13072:1;:14;13052:351;;;13196:109;13237:13;:24;;;:38;;;13276:1;13237:41;;;;;;;;:::i;:::-;;;;;;;:50;;;13196:19;:109::i;:::-;13175:218;;;13345:33;;;;;;;;;;;;;;13175:218;13088:3;;;:::i;:::-;;;13052:351;;;-1:-1:-1;;13487:24:93;;:30;;;:37;:24;13589:297;13613:10;13609:1;:14;13589:297;;;13733:63;13753:13;:24;;;:30;;;13784:1;13753:33;;;;;;;;:::i;13733:63::-;13712:164;;;13836:25;;;;;;;;;;;;;;13712:164;13625:3;;;:::i;:::-;;;13589:297;;;;8728:5164;;;8570:5322;;:::o;5958:5460:98:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6400:179:98;;;;;;;;;;;;;;;;;;;;;;;;;6507:25;;;;6400:179;;;;;;;;6546:23;;;;6400:179;;;;-1:-1:-1;;;;;;;;6365:32:98;-1:-1:-1;;;;;;6400:179:98;6744:23;;6842:26;;;;7000:21;;;;:28;6971:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6971:67:98;;-1:-1:-1;;6971:67:98;;;;;;;;;;;-1:-1:-1;6943:25:98;;;:95;7180:9;7175:1545;7199:15;:21;;;:28;7195:1;:32;7175:1545;;;7296:26;7325:15;:21;;;7347:1;7325:24;;;;;;;;:::i;:::-;;;;;;;7296:53;;7519:15;7497:37;;;;;;;;:::i;:::-;:18;;:37;;;;;;;;:::i;:::-;;7493:115;;7565:24;;;;;;;;;;;;;;7493:115;7706:14;7723:177;7759:9;:21;;;7802:9;:19;;;7843:12;7877:5;7723:14;:177::i;:::-;7706:194;;7989:32;8024:227;;;;;;;;8058:9;:18;;;8024:227;;;;;;;;:::i;:::-;;;;;8098:9;:15;;;-1:-1:-1;;;;;8024:227:98;;;;;8135:9;:30;;;8024:227;;;;8187:6;8024:227;;;;8223:9;-1:-1:-1;;;;;8024:227:98;;;;7989:262;;8368:183;;;;;;;;8399:12;:21;;;8368:183;;;;;;;;:::i;:::-;;;;;8442:12;:18;;;-1:-1:-1;;;;;8368:183:98;;;;;8482:12;:23;;;8368:183;;;;8527:6;8368:183;;;8337:14;:25;;;8363:1;8337:28;;;;;;;;:::i;:::-;;;;;;:214;;;;8642:63;8652:12;8666:7;8675:10;8687:17;8642:9;:63::i;:::-;7234:1486;;;7229:3;;;;:::i;:::-;;;7175:1545;;;;8870:15;:29;;;:36;8838:78;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8838:78:98;;-1:-1:-1;;8838:78:98;;;;;;;;;;;-1:-1:-1;8807:28:98;;;:109;9016:9;8991:22;9170:1833;9194:15;:29;;;:36;9190:1;:40;9170:1833;;;9307:42;9374:15;:29;;;9404:1;9374:32;;;;;;;;:::i;:::-;;;;;;;9307:117;;9524:14;9541:192;9577:17;:29;;;9628:17;:27;;;9677:12;9711:4;9541:14;:192::i;:::-;9524:209;;9809:32;9844:260;;;;;;;;9878:17;:26;;;9844:260;;;;;;;;:::i;:::-;;;;;9926:17;:23;;;-1:-1:-1;;;;;9844:260:98;;;;;9971:17;:38;;;9844:260;;;;10031:6;9844:260;;;;10059:17;:27;;;-1:-1:-1;;;;;9844:260:98;;;;9809:295;;10210:12;10176:14;:28;;;10205:1;10176:31;;;;;;;;:::i;:::-;;;;;;;;;;:46;10350:15;10325:21;;:40;;;;;;;;:::i;:::-;;10321:382;;10483:14;10474:6;:23;10470:112;;;10532:27;;;;;;;;;;;;;;10470:112;10660:24;10678:6;10660:24;;:::i;:::-;;;10321:382;10802:186;10833:12;10867:10;10899:12;:32;;;10953:17;10802:9;:186::i;:::-;9237:1766;;;9232:3;;;;:::i;:::-;;;9170:1833;;;;11103:34;11119:17;11103:15;:34::i;:::-;11206:19;;11202:139;;11281:49;11302:10;11315:14;11281:12;:49::i;:::-;11390:21;;;;;5958:5460;;;;;;;;:::o;6847:283:96:-;6898:7;6968:9;6951:13;:26;:172;;-1:-1:-1;4311:182:90;;;7047:24:96;4311:182:90;;;;53579:25:144;;;;7085:10:96;53620:18:144;;;53613:34;7109:13:96;53663:18:144;;;53656:34;4435:13:90;53706:18:144;;;53699:34;4474:4:90;53749:19:144;;;;53742:84;;;;4311:182:90;;;;;;;;;;53551:19:144;;;;4311:182:90;;;4288:215;;;;;;28938:195:84:o;6951:172:96:-;-1:-1:-1;6992:17:96;;6847:283::o;22146:10528:89:-;22524:59;22536:10;:20;;;22558:10;:18;;;22578:4;22524:11;:59::i;:::-;;22803:34;:32;:34::i;:::-;22929:186;23009:31;;;;:10;:31;:::i;:::-;:38;;23061:10;:44;;;22929:66;:186::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23307:48:89;23358:193;;;;;;;;23392:9;23358:193;;;;;;;;:::i;:::-;;;;;23415:16;23358:193;;;;;;;;:::i;:::-;;;;;23445:28;23358:193;;;;;;;;:::i;:::-;;;;;23487:25;-1:-1:-1;;;;;23358:193:89;;;;;23526:15;23358:193;;;;;;;;:::i;:::-;;;23307:244;-1:-1:-1;23632:35:89;23702:31;;;;:10;:31;:::i;:::-;:42;;-1:-1:-1;23743:1:89;23702:42;:::i;:::-;23670:84;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23670:84:89;;-1:-1:-1;;23670:84:89;;;;;;;;;;;-1:-1:-1;23878:28:89;23860:46;;24033:345;;;;;;;;;24072:37;;;;23632:122;;-1:-1:-1;23860:15:89;;24033:345;;;;;;;;;;:::i;:::-;;;;;;;;24131:29;;;;:10;:29;:::i;:::-;-1:-1:-1;;;;;24033:345:89;;;;;24182:10;:34;;;24033:345;;;;24238:10;:30;;;24033:345;;;;24290:10;:30;;;24033:345;;;;24342:10;:18;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24033:345:89;;;23963:429;-1:-1:-1;24522:48:89;:44;;;;24569:1;24522:48;:::i;:::-;24491:93;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24491:93:89;-1:-1:-1;24462:26:89;;;;:122;;;;24720:15;;24757:33;;24812:30;;;;;24864:45;;;;;24931:36;;;;24989:34;;;;25045;;;;24688:409;;;;24812:30;;24931:36;;24989:34;;24688:409;;:::i;:::-;;;;;;;;;;;;;24661:450;;;;;;24629:6;:26;;;24656:1;24629:29;;;;;;;;:::i;:::-;;;;;;:482;;;;;25227:42;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25227:42:89;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25383:39:89;25425:296;;;;;;;;25455:20;:37;;;25425:296;;;;;;;;:::i;:::-;;;;;25510:24;:30;;;-1:-1:-1;;;;;25425:296:89;;;;;25558:24;:45;;;25425:296;;;;25621:24;:34;;;25425:296;;;;25673:24;:34;;;-1:-1:-1;;;;;25425:296:89;;;;25383:338;;25844:19;25825:13;25839:1;25825:16;;;;;;;;:::i;:::-;;;;;;:38;;;;26095:22;26073:2431;26156:31;;;;:10;:31;:::i;:::-;:38;;26139:14;:55;26073:2431;;;26314:46;26385:10;:31;;;;;;;;:::i;:::-;26417:14;26385:47;;;;;;;:::i;:::-;;;;;;26314:136;;;;;;;;;;:::i;:::-;;;26568:291;;;;;;;;26602:20;:49;;;26568:291;;;;;;;;:::i;:::-;;;;;26673:20;:46;;;-1:-1:-1;;;;;26568:291:89;;;;;26741:1;26568:291;;;;26764:19;:26;;;26568:291;;;;26812:19;:29;;;-1:-1:-1;;;;;26568:291:89;;;;26543:316;;27019:22;26983:13;26997:14;27014:1;26997:18;;;;:::i;:::-;26983:33;;;;;;;;:::i;:::-;;;;;;:58;;;;27222:10;:44;;;27184:14;:82;27159:175;;27307:8;;;27159:175;27479:344;;;;;;;;27518:20;:49;;;27479:344;;;;;;;;:::i;:::-;;;;;27589:20;:46;;;-1:-1:-1;;;;;27479:344:89;;;;;27657:1;27479:344;;;;27680:19;:26;;;27479:344;;;;27728:19;:26;;;27479:344;;;;27776:19;:29;;;-1:-1:-1;;;;;27479:344:89;;;;27453:370;;28072:6;:15;;;28113:23;:32;;;28171:23;:29;;;28226:23;:44;;;28296:23;:35;;;28357:23;:33;;;28416:23;:33;;;28036:435;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;28005:484;;;;;;27956:6;:26;;;27983:14;28000:1;27983:18;;;;:::i;:::-;27956:46;;;;;;;;:::i;:::-;;;;;;:533;;;;;26243:2261;26073:2431;26212:16;;;:::i;:::-;;;26073:2431;;;;28924:6;:26;;;28907:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;;28880:85;;28907:44;28880:85;;;;28853:24;;;:112;29090:65;;;;29043:1017;29190:31;;;;:10;:31;:::i;:::-;:38;;29173:14;:55;29043:1017;;;29348:46;29419:10;:31;;;;;;;;:::i;:::-;29451:14;29419:47;;;;;;;:::i;:::-;;;;;;29348:136;;;;;;;;;;:::i;:::-;;;29572:291;;;;;;;;29606:20;:49;;;29572:291;;;;;;;;:::i;:::-;;;;;29677:20;:46;;;-1:-1:-1;;;;;29572:291:89;;;;;29745:1;29572:291;;;;29768:19;:26;;;29572:291;;;;29816:19;:29;;;-1:-1:-1;;;;;29572:291:89;;;;29547:316;;30023:22;29987:13;30001:14;30018:1;30001:18;;;;:::i;:::-;29987:33;;;;;;;;:::i;:::-;;;;;;:58;;;;29277:783;29246:16;;;;:::i;:::-;;;29043:1017;;;-1:-1:-1;30181:24:89;;-1:-1:-1;30224:1:89;;-1:-1:-1;30208:18:89;;-1:-1:-1;;30208:18:89;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30208:18:89;;-1:-1:-1;;30208:18:89;;;;;;;;;;;;30181:45;;30324:20;30306:6;:15;;:38;;;;;30393:26;30422:200;;;;;;;;30449:20;:36;;;30422:200;;;;;;;;:::i;:::-;;;;;30503:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;30422:200:89;;;;;30542:10;:26;;;30422:200;;;;30586:10;:22;;;30422:200;;;30393:229;;30705:9;30694:5;30700:1;30694:8;;;;;;;;:::i;:::-;;;;;;:20;;;;30802:33;:478;;;;;;;;30923:6;:15;;;30964:9;:18;;;31008:9;:15;;;31049:9;:20;;;31095:9;:16;;;31210:9;:16;;;30887:361;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30856:410;;;;;;30802:478;;;;;31407:15;31390:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;31363:74;;31390:33;31363:74;;;;;;;31339:21;;;:98;-1:-1:-1;;31654:15:89;31636:33;;31741:114;31339:6;31793:10;31821:20;31741:10;:114::i;:::-;31722:16;;;:133;32052:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31950:213:89;32016:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31950:213:89;;31982:6;:16;;;32085:10;32113:5;32136:13;31950:213;;;;;;;;;:::i;:::-;;;;;;;;32262:192;32311:6;:16;;;32341:10;:19;;;32374:9;32397:10;:18;;;;;;;;;;:::i;:::-;32429:10;:15;;;;;;;;;;:::i;:::-;32262:35;:192::i;:::-;32575:16;;;;32527:140;;32605:18;;;;;;;;:::i;:::-;32637:20;;;;:10;:20;:::i;:::-;32527:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32527:34:89;;-1:-1:-1;;;32527:140:89:i;:::-;22433:10241;;;;22146:10528;;;;;;:::o;8194:1122:94:-;8506:65;8541:17;8560:10;8506:34;:65::i;:::-;8633:10;8629:681;;8747:6;8757:1;8747:11;8743:86;;8785:29;;;;;;;;;;;;;;8743:86;8908:51;8931:5;8938:4;8944:2;8948:10;8908:22;:51::i;:::-;8629:681;;;9058:241;9083:10;9111:17;9146:22;9186:5;9209:4;9231:2;9251:10;9279:6;9058:7;:241::i;:::-;8194:1122;;;;;;;:::o;33102:1696:89:-;33323:9;33298:22;33394:896;33418:31;;;;:10;:31;:::i;:::-;:38;;33414:1;:42;33394:896;;;33527:48;33596:31;;;;:10;:31;:::i;:::-;33628:1;33596:34;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;33773:26:89;;33876:42;;;33872:115;;;33945:27;;;;;;;;;;;;;;33872:115;34060:116;34090:29;;;;;;;;:::i;:::-;34137:25;34060:12;:116::i;:::-;34236:43;34254:25;34236:43;;:::i;:::-;;;33463:827;;33458:3;;;;:::i;:::-;;;33394:896;;;;34373:14;34364:6;:23;34360:88;;;34410:27;;;;;;;;;;;;;;34360:88;34500:40;34513:18;;;;;;;;:::i;:::-;34533:6;34500:12;:40::i;:::-;34646:6;34629:14;:23;34625:167;;;34723:58;34744:10;34757:23;34774:6;34757:14;:23;:::i;:::-;34723:12;:58::i;:::-;33224:1574;33102:1696;;:::o;10412:1058:94:-;10716:28;10737:6;10716:20;:28::i;:::-;10820:65;10855:17;10874:10;10820:34;:65::i;:::-;10947:10;10943:521;;11052:60;11076:5;11083:4;11089:2;11093:10;11105:6;11052:23;:60::i;10943:521::-;11211:242;11236:10;11264:17;11299:23;11340:5;11363:4;11385:2;11405:10;11433:6;11211:7;:242::i;35654:1600:89:-;35993:18;36025:11;36021:157;;;-1:-1:-1;36065:28:89;;;;36021:157;;;-1:-1:-1;36137:30:89;;;;36021:157;36244:9;36239:760;36263:31;;;;:10;:31;:::i;:::-;:38;;36259:1;:42;36239:760;;;36372:48;36441:31;;;;:10;:31;:::i;:::-;36473:1;36441:34;;;;;;;:::i;:::-;;;;;;36372:117;;36583:11;36579:86;;;36614:36;36624:26;;36614:36;;:::i;:::-;;;36579:86;36756:232;36788:10;36816:4;36838:29;;;;;;;;:::i;:::-;36885:26;;36929:10;36957:17;36756:14;:232::i;:::-;-1:-1:-1;36303:3:89;;;:::i;:::-;;;36239:760;;;;37090:157;37118:10;37142:4;37160:2;37176:6;37196:10;37220:17;37090:14;:157::i;:::-;35926:1328;35654:1600;;;;;;;:::o;12964:304:94:-;13119:17;:27;;;:34;13157:1;13119:39;13115:76;;12964:304;:::o;13115:76::-;13234:27;13243:17;13234:8;:27::i;:::-;12964:304;:::o;3341:777:87:-;3471:16;3589:11;3576:9;:24;3572:67;;-1:-1:-1;3623:5:87;3616:12;;3572:67;3727:27;3757:17;3765:9;3757:5;:17;:::i;:::-;3727:47;-1:-1:-1;3866:33:87;3888:11;3727:47;3866:33;:::i;:::-;3855:44;-1:-1:-1;3981:10:87;4036:5;4022:9;3996:22;4007:11;3855:44;3996:22;:::i;:::-;3995:36;;;;:::i;:::-;3994:47;3981:60;;4056:5;4051:61;;4084:17;;;;;;;;;;;;;;4051:61;3489:629;;3341:777;;;;;:::o;1305:1514::-;1494:7;1608:9;1593:11;:24;1589:1158;;1714:20;;1848:19;1858:9;1848:7;:19;:::i;:::-;1829:38;-1:-1:-1;1959:15:87;1977:27;1995:9;1977:15;:27;:::i;:::-;1959:45;-1:-1:-1;2096:17:87;2116:18;1959:45;2116:8;:18;:::i;:::-;2096:38;;2234:7;2230:73;;;2276:12;2287:1;2276:8;:12;:::i;:::-;2261:27;;2230:73;2393:27;2508:12;2469:19;2481:7;2469:9;:19;:::i;:::-;2425:23;2439:9;2425:11;:23;:::i;:::-;2424:65;;;;:::i;:::-;:96;;;;:::i;:::-;2393:128;-1:-1:-1;2613:17:87;2633:30;2655:8;2393:128;2633:30;:::i;:::-;2613:50;-1:-1:-1;2720:16:87;;-1:-1:-1;;;;;;2720:16:87;1589:1158;-1:-1:-1;2803:9:87;;1305:1514;-1:-1:-1;;;;1305:1514:87:o;1652:6051:93:-;1912:24;;1892:17;1995:4091;2019:9;2015:1;:13;1995:4091;;;2096:40;2140:17;2158:1;2140:20;;;;;;;;:::i;:::-;;;;;;;2096:65;;2251:18;2272:16;:27;;;2251:48;;2388:15;:22;2374:10;:36;2370:115;;2437:33;;;;;;;;;;;;;;2370:115;2571:15;2587:10;2571:27;;;;;;;;:::i;:::-;;;;;;;:37;;;:42;;2612:1;2571:42;2567:89;;2633:8;;;;2567:89;2770:22;;;;2745;;;3012:16;:21;;;:35;;;;;;;;:::i;:::-;;3008:2472;;3067:29;3099:15;3115:10;3099:27;;;;;;;;:::i;:::-;;;;;;;:59;;;3067:91;;3262:10;:17;3244:14;:35;3240:122;;3310:33;;;;;;;;;;;;;;3240:122;3445:22;3471:10;3482:14;3471:26;;;;;;;;:::i;:::-;;;;;;;;;;;3605:14;;3660:16;;;;3605:14;;-1:-1:-1;3660:16:93;-1:-1:-1;3471:26:93;-1:-1:-1;3788:29:93;3776:8;:41;;;;;;;;:::i;:::-;;3772:200;;3858:15;3841:32;;3772:200;;;3937:16;3920:33;;3772:200;4085:27;;;;4066:16;;;;:46;-1:-1:-1;3008:2472:93;;;4288:35;4326:15;4363:10;4326:65;;;;;;;;:::i;:::-;;;;;;;:79;;;4288:117;;4510:13;:20;4492:14;:38;4488:133;;4561:41;;;;;;;;;;;;;;4488:133;4704:33;4762:13;4776:14;4762:29;;;;;;;;:::i;:::-;;;;;;;;;;;4916:22;;4979:24;;;;4916:22;;-1:-1:-1;4979:24:93;-1:-1:-1;4762:29:93;-1:-1:-1;5115:29:93;5103:8;:41;;;;;;;;:::i;:::-;;5099:216;;5193:15;5168:40;;5099:216;;;5280:16;5255:41;;5099:216;5437:27;;;;5409:24;;;;:56;-1:-1:-1;3008:2472:93;5571:29;5591:8;5571:19;:29::i;:::-;5566:103;;5627:27;;;;;;;;;;;;;;5566:103;5757:34;;5753:323;;5888:173;5922:16;:27;;;5971:20;6013:16;:30;;;5888:12;:173::i;:::-;2035:4051;;;;;1995:4091;2030:3;;;:::i;:::-;;;1995:4091;;;-1:-1:-1;;6171:22:93;;6256:9;6251:1446;6275:9;6271:1;:13;6251:1446;;;6351:36;6390:15;6406:1;6390:18;;;;;;;;:::i;:::-;;;;;;;6351:57;;6488:18;6509:14;:25;;;:32;6488:53;;6628:14;:24;;;:29;;6656:1;6628:29;6624:76;;6677:8;;;;6624:76;6777:9;6772:320;6796:10;6792:1;:14;6772:320;;;6928:58;6948:14;:25;;;6974:1;6948:28;;;;;;;;:::i;6928:58::-;6903:175;;;7034:25;;;;;;;;;;;;;;6903:175;6808:3;;;:::i;:::-;;;6772:320;;;-1:-1:-1;;7193:28:93;;;;:35;7315:9;7310:377;7334:10;7330:1;:14;7310:377;;;7466:107;7511:14;:28;;;7540:1;7511:31;;;;;;;;:::i;7466:107::-;7441:232;;;7621:33;;;;;;;;;;;;;;7441:232;7346:3;;;:::i;:::-;;;7310:377;;;;6291:1406;;6251:1446;6286:3;;;:::i;:::-;;;6251:1446;;1875:3422:95;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2235:27:95;;;:66;;-1:-1:-1;2266:35:95;;2235:66;2218:170;;;2333:44;;;;;;;;;;;;;;2218:170;2625:37;2679:151;2741:15;2774:23;;2679:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2815:1;2679:44;:151::i;:::-;2625:215;;3198:153;3248:15;3277;;3198:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3306:1;3329;3198:36;:153::i;:::-;3485:26;;2929:422;;-1:-1:-1;3458:53:95;;;;;;;;:::i;:::-;:14;;:23;:53;;;;;;;;:::i;:::-;;;:116;;;;3551:17;:23;;;-1:-1:-1;;;;;3527:47:95;:9;:14;;;:20;;;-1:-1:-1;;;;;3527:47:95;;;3458:116;:189;;;;3619:17;:28;;;3590:9;:14;;;:25;;;:57;;3458:189;3441:303;;;3679:54;;;;;;;;;;;;;;3441:303;3854:9;:14;;;:21;;;3827:17;:24;;;:48;3823:1108;;;3971:43;4035:23;;4059:1;4035:26;;;;;;;:::i;:::-;;;;;;3971:104;;;;;;;;;;:::i;:::-;;;4326:9;:14;;;:21;;;4299:17;:24;;;:48;;;;:::i;:::-;4171:15;4187;:26;;;4171:43;;;;;;;;:::i;:::-;;;;;;;:74;;;4246:15;:25;;;4171:101;;;;;;;;:::i;:::-;;;;;;;;;;;:125;;;;:176;;;;4465:14;;:21;;;4438:24;;;:48;-1:-1:-1;3823:1108:95;;;4589:43;4636:15;;4652:1;4636:18;;;;;;;:::i;:::-;;;;;;4589:66;;;;;;;;;;:::i;:::-;;;4896:17;:24;;;4872:9;:14;;;:21;;;:48;;;;:::i;:::-;4747:15;4763;:26;;;4747:43;;;;;;;;:::i;:::-;;;;;;;:71;;;4819:15;:25;;;4747:98;;;;;;;;:::i;:::-;;;;;;;:122;;:173;;;;;4503:428;3823:1108;5040:24;;;;;5016:14;;:21;;;:48;5101:27;;;;;5074:14;;-1:-1:-1;;;;;5074:54:95;;;:24;;:54;1875:3422;;;;;;;:::o;27206:3403:97:-;27506:22;;27363:29;;27506:22;27616:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27616:23:97;;27598:41;;27723:9;27718:1311;27742:11;27738:1;:15;27718:1311;;;27821:36;27860:15;27876:1;27860:18;;;;;;;;:::i;:::-;;;;;;;27821:57;;27971:14;:24;;;:29;;27999:1;27971:29;27967:304;;28248:8;;;27967:304;28350:4;28329:15;28345:1;28329:18;;;;;;;;:::i;:::-;:25;;;:18;;;;;;;;;;;:25;28499:28;;;;28443:35;28629:390;28653:13;:20;28649:1;:24;28629:390;;;28770:19;28792:13;28806:1;28792:16;;;;;;;;:::i;:::-;;;;;;;:23;;;28770:45;;28901:11;28916:1;28901:16;28897:108;;28948:38;;;;;;;;42991:25:144;;;43032:18;;;43025:34;;;43075:18;;;43068:34;;;42964:18;;28948:38:97;42789:319:144;28897:108:97;-1:-1:-1;28675:3:97;;;:::i;:::-;;;28629:390;;;;27760:1269;;27718:1311;27755:3;;;:::i;:::-;;;27718:1311;;;-1:-1:-1;;;;;;;;;;29103:22:97;-1:-1:-1;;;;;;;29128:9:97;;29288;29283:919;29307:10;:17;29303:1;:21;29283:919;;;29417:26;29446:10;29457:1;29446:13;;;;;;;;:::i;:::-;;;;;;;;;;;29500:14;;29446:13;;-1:-1:-1;29473:24:97;29610:13;;:32;;;;;;;;:::i;:::-;;29606:357;;29757:14;29743:4;:11;;;:28;29739:109;;;29802:27;;;;;;;;;;;;;;29739:109;29937:11;;;;29919:29;;;;:::i;:::-;;;29606:357;30038:153;30065:4;30087:9;:17;;;30122:9;:20;;;30160:17;30038:9;:153::i;:::-;29331:871;;29326:3;;;;:::i;:::-;;;29283:919;;;;30292:34;30308:17;30292:15;:34::i;:::-;30418:19;;30414:99;;30453:49;30474:10;30487:14;30453:12;:49::i;:::-;30580:22;;;27206:3403;;;;:::o;6498:3012:95:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6873:22:95;;7019:28;;6851:19;7134:31;;;7130:115;;7229:4;7188:46;;;;;;;;;;;:::i;7130:115::-;7332:26;7455:9;7450:685;7474:26;7470:1;:30;7450:685;;;7578:18;7599:21;7621:1;7599:24;;;;;;;;:::i;:::-;;;;;;;:35;;;7578:56;;7723:11;7709:10;:25;7705:104;;7761:33;;;;;;;;;;;;;;7705:104;7902:15;7918:10;7902:27;;;;;;;;:::i;:::-;;;;;;;:37;;;:42;;7943:1;7902:42;7898:227;;8047:5;:1;8051;8047:5;:::i;:::-;8026:26;;8105:5;;;7898:227;-1:-1:-1;7502:3:95;;;:::i;:::-;;;7450:685;;;;8197:18;8219:1;8197:23;8193:452;;-1:-1:-1;;8351:283:95;;;8378:186;;;;;-1:-1:-1;8351:283:95;;;8378:186;;;;;;;;;;;;;;;;;;;;;;;;;;;8351:283;;8378:186;8351:283;;;;;;;;;;;;;-1:-1:-1;8344:290:95;;-1:-1:-1;8344:290:95;8193:452;8732:10;8724:4;:18;;;;;;;;:::i;:::-;;8720:784;;8870:189;8924:15;8957:21;8996:22;9017:1;8996:18;:22;:::i;:::-;9036:9;8870:36;:189::i;:::-;8863:196;;;;;;;8720:784;9302:191;9348:15;9381:21;9420:22;9441:1;9420:18;:22;:::i;:::-;9460:19;9302:28;:191::i;2903:425:88:-;3223:30;3190;:63;3186:136;;;3276:35;;;;;;;;;;;;;;3186:136;2903:425;;:::o;1194:1652:101:-;1388:9;;;-1:-1:-1;;;;;1448:18:101;;;:22;1444:1015;;1557:55;1586:6;1594;1602:9;1557:28;:55::i;1444:1015::-;1725:9;:16;1745:2;1725:22;1721:738;;1921:10;1967:9;1956:41;;;;;;;;;;;;:::i;:::-;1946:51;;-1:-1:-1;11492:66:32;2016:33:101;;;-1:-1:-1;1946:51:101;-1:-1:-1;2068:30:101;2088:3;2082:9;;;2096:2;2068:30;:::i;:::-;2064:34;;1749:360;1721:738;;;2119:9;:16;2139:2;2119:22;2115:344;;2177:9;2166:41;;;;;;;;;;;;:::i;:::-;2231:13;;2157:50;;-1:-1:-1;2157:50:101;-1:-1:-1;2231:9:101;;2241:2;;2231:13;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2322:2:101;2317:7;;;;;:18;;;2328:1;:7;;2333:2;2328:7;;2317:18;2313:80;;;2362:16;;;;;44484:4:144;44472:17;;2362:16:101;;;44454:36:144;44427:18;;2362:16:101;44312:184:144;2313:80:101;2115:344;;;2430:18;;;;;;;;;;;;;;2115:344;2575:26;;;2549:23;2575:26;;;;;;;;;44728:25:144;;;44801:4;44789:17;;44769:18;;;44762:45;;;;44823:18;;;44816:34;;;44866:18;;;44859:34;;;2575:26:101;;44700:19:144;;2575:26:101;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2575:26:101;;;;;;-1:-1:-1;;;;;;;2653:29:101;;;;:58;;;2705:6;-1:-1:-1;;;;;2686:25:101;:15;-1:-1:-1;;;;;2686:25:101;;;2653:58;2649:191;;;2734:15;;;;;;;;;;;;;;1445:627:103;1577:10;1694:15;1682:9;:27;:57;;;;1724:15;1713:7;:26;;1682:57;1678:314;;;1832:15;1828:74;;;1874:13;;;;;;;;;;;;;;1828:74;-1:-1:-1;1976:5:103;1969:12;;1678:314;-1:-1:-1;2061:4:103;1445:627;;;;;:::o;17851:266:99:-;17956:16;18091:9;18083:18;;;;;;;;:::i;:::-;18104:1;18083:22;:27;;17851:266;-1:-1:-1;;17851:266:99:o;3410:1624:104:-;3875:1;3862:9;3854:18;;;;;;;;:::i;:::-;:22;:56;;;;-1:-1:-1;3892:10:104;-1:-1:-1;;;;;3892:18:104;;;;3854:56;:93;;;;-1:-1:-1;3926:10:104;-1:-1:-1;;;;;3926:21:104;;;;3854:93;3837:1191;;;4062:23;;;;:30;:35;:84;;;;-1:-1:-1;4117:24:104;;:29;4062:84;4041:977;;;4204:192;;4400:35;4204:192;;;;;;45135:25:144;;;4297:10:104;45237:18:144;;;45230:43;-1:-1:-1;;;;;45309:15:144;;;45289:18;;;45282:43;45341:18;;;45334:34;;;4400:35:104;;4204:32;;;;4400:35;;45107:19:144;;4204:192:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:231;;;4179:356;;4483:33;;;;;;;;13795:25:144;;;13768:18;;4483:33:104;13649:177:144;4179:356:104;4041:977;;;4598:267;;;;;4869:35;;-1:-1:-1;;;;;4598:50:104;;;;;:267;;4674:9;;4709:10;;4745:13;;4784:16;;4826:17;;4598:267;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:306;;;4573:431;;4952:33;;;;;;;;13795:25:144;;;13768:18;;4952:33:104;13649:177:144;10987:282:99;11088:29;11133:94;11140:5;;11133:94;;11173:1;11192:5;11173:1;11192;:5;:::i;:::-;11215:1;;-1:-1:-1;11188:9:99;-1:-1:-1;11133:94:99;;;-1:-1:-1;11261:1:99;;10987:282;-1:-1:-1;10987:282:99:o;14391:264:93:-;14486:17;14647:1;14635:8;14627:17;;;;;;;;:::i;:::-;:21;;14391:264;-1:-1:-1;;14391:264:93:o;14989:1180::-;15188:20;15238:4;15221:22;;;;;;52490:19:144;;52534:2;52525:12;;52361:182;15221:22:93;;;;;;;;;;;;;15211:33;;;;;;15188:56;;15304:9;15299:700;15323:5;:12;15319:1;:16;15299:700;;;15399:20;15422:5;15428:1;15422:8;;;;;;;;:::i;:::-;;;;;;;15399:31;;15539:12;15523;:28;15519:470;;15691:44;;;;;;52705:19:144;;;52740:12;;;52733:28;;;52777:12;;15691:44:93;;;;;;;;;;;;15660:93;;;;;;15645:108;;15519:470;;;15912:44;;;;;;52705:19:144;;;52740:12;;;52733:28;;;52777:12;;15912:44:93;;;;;;;;;;;;15881:93;;;;;;15866:108;;15519:470;-1:-1:-1;15337:3:93;;;:::i;:::-;;;15299:700;;;-1:-1:-1;16086:29:93;;;16082:81;;16138:14;;;;;;;;;;;;;;4716:1076:87;4889:14;5010:9;4995:11;:24;4991:795;;5044:135;5074:12;:22;;;5114:12;:24;;;5156:9;5044:12;:135::i;:::-;5035:144;;4991:795;;;5298:477;5336:153;5370:12;:22;;;5414:12;:24;;;5460:11;5336:12;:153::i;:::-;5507:151;5541:12;:22;;;5585:12;:24;;;5631:9;5507:12;:151::i;:::-;5676:12;:22;;;5716:12;:20;;;5754:7;5298:20;:477::i;2432:1848:94:-;2701:15;2684:13;;:32;;;;;;;;:::i;:::-;;2680:1594;;2838:15;;;;2824:10;;;;-1:-1:-1;;;;;2816:37:94;;2815:44;2811:112;;2886:22;;;;;;;;;;;;;;2811:112;2997:41;3010:4;:14;;;3026:4;:11;;;2997:12;:41::i;:::-;2680:1594;;;3076:14;3059:13;;:31;;;;;;;;:::i;:::-;;3055:1219;;3164:15;;;;:20;3160:88;;3211:22;;;;;;;;;;;;;;3160:88;3334:205;3366:4;:10;;;3394:7;3419:4;:14;;;3451:4;:11;;;3480:10;3508:17;3334:14;:205::i;3055:1219::-;3577:15;3560:13;;:32;;;;;;;;:::i;:::-;;3556:718;;3680:239;3713:4;:10;;;3741:7;3766:4;:14;;;3798:4;:15;;;3831:4;:11;;;3860:10;3888:17;3680:15;:239::i;3556:718::-;4023:240;4057:4;:10;;;4085:7;4110:4;:14;;;4142:4;:15;;;4175:4;:11;;;4204:10;4232:17;4023:16;:240::i;4511:486::-;4644:28;4665:6;4644:20;:28::i;:::-;4765:12;4783:2;-1:-1:-1;;;;;4783:7:94;4799:6;4783:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4764:47;;;4859:7;4854:137;;4941:39;;;;;-1:-1:-1;;;;;53210:55:144;;4941:39:94;;;53192:74:144;53282:18;;;53275:34;;;53165:18;;4941:39:94;53010:305:144;4146:920:88;4572:17;4604:14;4615:2;4613:1;4604:8;4572:17;4604:14;:::i;:::-;4593:37;;;;;;;:::i;:::-;4634:2;4593:43;:106;;;;-1:-1:-1;4663:17:88;4676:3;4672;4663:8;;:17;:::i;:::-;4652:40;;;;;;;:::i;:::-;4696:3;4652:47;4593:106;:229;;;;-1:-1:-1;4793:17:88;4806:3;4802;4793:8;;:17;:::i;:::-;4782:40;;;;;;;:::i;:::-;4777:45;;:2;:45;:::i;:::-;4771:51;;:3;:51;:::i;:::-;4726:17;4739:3;4735;4726:8;;:17;:::i;:::-;4715:40;;;;;;;:::i;:::-;:107;4593:229;4592:292;;;;-1:-1:-1;4882:2:88;4850:17;4863:3;4859;4850:8;;:17;:::i;:::-;4839:40;;;;;;;:::i;:::-;:45;4592:292;4572:312;;4978:12;4973:87;;5013:36;;;;;;;;;;;;;;20182:943:89;20385:17;;20511:31;20523:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1701:18:92;1590:22;1701:18;;;:9;:18;;;;;;;1505:221;20511:31:89;20666:15;;20493:49;;-1:-1:-1;20699:18:89;;;;;;;;:::i;:::-;20735:15;;;;;;;;:::i;:::-;20768:6;:21;;;20807:6;:24;;;20849:20;:30;;;20897:10;:20;;;20935:10;:18;;;20971:10;:19;;;21008:10;:15;;;21041:10;:28;;;21087:7;20638:470;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20615:503;;;;;;20603:515;;20404:721;20182:943;;;;;:::o;1231:755:104:-;1553:1;1540:9;1532:18;;;;;;;;:::i;:::-;:22;:56;;;;-1:-1:-1;1570:10:104;-1:-1:-1;;;;;1570:18:104;;;;1532:56;:93;;;;-1:-1:-1;1604:10:104;-1:-1:-1;;;;;1604:21:104;;;;1532:93;1515:465;;;1671:172;;1847:35;1671:172;;;;;;45135:25:144;;;1756:10:104;45237:18:144;;;45230:43;-1:-1:-1;;;;;45309:15:144;;;45289:18;;;45282:43;45341:18;;;45334:34;;;1847:35:104;;1671:32;;;;1847:35;;45107:19:144;;1671:172:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:211;;;1650:320;;1922:33;;;;;;;;13795:25:144;;;13768:18;;1922:33:104;13649:177:144;1650:320:104;1231:755;;;;;:::o;1599:985:99:-;1815:31;1849:23;;;:12;:23;;;;;1941:218;1862:9;1849:23;2021:4;;1941:18;:218::i;:::-;-1:-1:-1;2256:23:99;;;;2251:102;;2295:47;2312:7;2321:9;2332;2295:16;:47::i;:::-;2550:27;;;-1:-1:-1;;;1599:985:99:o;12267:342:94:-;12500:28;;:42;;12496:107;;12558:34;12574:17;12558:15;:34::i;2226:301:102:-;2380:5;-1:-1:-1;;;;;2380:17:102;;2401:1;2380:22;2376:77;;2425:17;;;;;-1:-1:-1;;;;;55653:55:144;;2425:17:102;;;55635:74:144;55608:18;;2425:17:102;55489:226:144;2376:77:102;2463:57;;;;;-1:-1:-1;;;;;56001:15:144;;;2463:57:102;;;55983:34:144;56053:15;;;56033:18;;;56026:43;56085:18;;;56078:34;;;2463:35:102;;;;;55895:18:144;;2463:57:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15131:1805:94;15683:27;;;;:34;15651:29;15864:25;15683:34;15888:1;15864:25;:::i;:::-;15842:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15842:48:94;;-1:-1:-1;;15842:48:94;;;;;;;;;;;;15788:112;;15962:9;15957:514;15981:21;15977:1;:25;15957:514;;;16060:34;16097:17;:27;;;16125:1;16097:30;;;;;;;;:::i;:::-;;;;;;;16060:67;;16216:244;;;;;;;;16249:11;:20;;;16216:244;;;;;;;;:::i;:::-;;;;;16287:11;:17;;;-1:-1:-1;;;;;16216:244:94;;;;;16322:11;:16;;;-1:-1:-1;;;;;16216:244:94;;;;;16356:11;:14;;;-1:-1:-1;;;;;16216:244:94;;;;;16388:11;:22;;;16216:244;;;;16428:11;:18;;;16216:244;;;16198:12;16211:1;16198:15;;;;;;;;:::i;:::-;;;;;;:262;;;;16009:462;16004:3;;;;:::i;:::-;;;15957:514;;;;16562:144;;;;;;;;16591:8;16562:144;;;;;;;;:::i;:::-;;;;;16613:5;-1:-1:-1;;;;;16562:144:94;;;;;16632:4;-1:-1:-1;;;;;16562:144:94;;;;;16650:2;-1:-1:-1;;;;;16562:144:94;;;;;16666:10;16562:144;;;;16690:6;16562:144;;;16524:12;16537:21;16524:35;;;;;;;;:::i;:::-;;;;;;;;;;;:182;;;;16779:27;;:42;-1:-1:-1;;;16888:41:94;;;;-1:-1:-1;;;;15131:1805:94:o;3494:144:88:-;3568:6;3578:1;3568:11;3564:68;;3602:19;;;;;;;;;;;;;;3151:413:102;3330:5;-1:-1:-1;;;;;3330:17:102;;3351:1;3330:22;3326:77;;3375:17;;;;;-1:-1:-1;;;;;55653:55:144;;3375:17:102;;;55635:74:144;55608:18;;3375:17:102;55489:226:144;3326:77:102;3413:144;;;;;-1:-1:-1;;;;;56497:15:144;;;3413:144:102;;;56479:34:144;56549:15;;;56529:18;;;56522:43;56581:18;;;56574:34;;;56624:18;;;56617:34;;;56688:3;56667:19;;;56660:32;-1:-1:-1;56708:19:144;;;56701:30;3413:40:102;;;;;56748:19:144;;3413:144:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:413;;;;;:::o;6033:999:94:-;6307:28;6328:6;6307:20;:28::i;:::-;6411:65;6446:17;6465:10;6411:34;:65::i;:::-;6538:10;6534:492;;6630:46;6652:5;6659:4;6665:2;6669:6;6630:21;:46::i;:::-;6534:492;;;6775:240;6800:10;6828:17;6863:21;6902:5;6925:4;6947:2;6975:1;6995:6;6775:7;:240::i;13665:388::-;13839:28;;13827:41;;:11;:41::i;:::-;-1:-1:-1;;;;;13810:67:94;;13891:17;:27;;;13810:118;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14012:34:94;14019:27;;;;14012:34;13665:388::o;19451:5182:95:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19901:23:95;19925:10;19901:35;;;;;;;;:::i;:::-;;;;;;;;;;;:59;19869:91;;20001:35;;:23;;20025:10;;20001:35;;;;;;:::i;:::-;;;;;;;;;;;;:58;;;19970:28;;;:89;20204:22;;20158:42;;:68;;20117:37;;;:110;;;20238:4194;;20353:36;20392:15;20425:18;:29;;;20392:76;;;;;;;;:::i;:::-;;;;;;;20353:115;;20601:18;:37;;;:146;;;;20711:14;:28;;;:35;20659:18;:28;;;:87;;20601:146;20545:202;;:37;;;:202;;;20761:3661;;20883:33;20919:14;:49;;;20969:18;:28;;;20919:79;;;;;;;;:::i;:::-;;;;;;;20883:115;;21077:248;;;;;;;;21111:13;:22;;;21077:248;;;;;;;;:::i;:::-;;;;;21155:13;:19;;;-1:-1:-1;;;;;21077:248:95;;;;;21196:13;:24;;;21077:248;;;;21242:13;:20;;;21077:248;;;;21284:13;:23;;;-1:-1:-1;;;;;21077:248:95;;;;21062:263;;21448:1;21425:13;:20;;:24;;;;;21606:9;21618:10;21631:1;21618:14;;;;:::i;:::-;21606:26;;21580:2828;21658:23;:30;21654:1;:34;21580:2828;;;21899:23;21923:1;21899:26;;;;;;;;:::i;:::-;;;;;;;;;;;:62;21867:94;;22014:26;;:23;;22038:1;;22014:26;;;;;;:::i;:::-;;;;;;;;;;;;:61;;;21983:28;;;:92;22268:22;;22235:29;;:55;;22171:37;;;:119;;;22421:5;22352:97;22594:15;22635:18;:29;;;22594:92;;;;;;;;:::i;:::-;;;;;;;22577:109;;22770:14;:24;;;:29;;22798:1;22770:29;22766:1624;;23033:28;;;;;:35;22972:57;;;;:96;;22902:66;;;:167;;;23212:5;23139:105;23353:14;:28;;;23411:18;:28;;;23353:112;;;;;;;;:::i;:::-;;;;;;;23337:128;;23648:13;:20;;;23598:12;:19;;;:70;;;;:::i;:::-;23548:19;;;;:120;;;;23842:1;23819:20;;;:24;24055:138;23819:13;23548:12;24055:27;:138::i;:::-;23986:207;;:66;;;:207;;;24336:5;24263:105;;21710:3;;;:::i;:::-;;;21580:2828;;;;20805:3617;20761:3661;20282:4150;20238:4194;24523:18;:37;;;24519:108;;;24583:33;;;;;;;;;;;;;;24519:108;19708:4925;19451:5182;;;;;:::o;11187:4403::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11529:18:95;11550:15;11566:10;11550:27;;;;;;;;:::i;:::-;;;;;;;:38;;;11529:59;;11598:17;11618:15;11634:10;11618:27;;;;;;;;:::i;:::-;;;;;;;:37;;;11598:57;;11803:23;11844:15;:22;11830:10;:36;;11803:64;;11882:18;11877:3532;;11984:36;12023:15;12039:10;12023:27;;;;;;;;:::i;:::-;;;;;;;11984:66;;12164:18;:85;;;;12216:14;:25;;;:32;12203:9;:45;;12164:85;12127:122;;12269:18;12264:3135;;12387:22;12412:14;:25;;;12438:9;12412:36;;;;;;;;:::i;:::-;;;;;;;12387:61;;12520:375;;;;;;;;12551:235;;;;;;;;12589:5;:14;;;12551:235;;;;;;;;:::i;:::-;;;;;12629:5;:11;;;-1:-1:-1;;;;;12551:235:95;;;;;12666:5;:16;;;12551:235;;;;12708:5;:12;;;12551:235;;;;12754:9;-1:-1:-1;;;;;12551:235:95;;;;12520:375;;;;12808:14;:22;;;-1:-1:-1;;;;;12520:375:95;;;;;12852:14;:25;;;12520:375;;;12508:387;;13010:1;12995:5;:12;;:16;;;;;13133:9;13145:10;13158:1;13145:14;;;;:::i;:::-;13133:26;;13107:2278;13185:15;:22;13181:1;:26;13107:2278;;;13391:15;13407:1;13391:18;;;;;;;;:::i;:::-;;;;;;;:29;;;13378:42;;13454:15;13470:1;13454:18;;;;;;;;:::i;:::-;;;;;;;:28;;;13442:40;;13612:15;:22;13598:10;:36;;13577:57;;13700:18;13746:5;13696:78;13888:15;13904:10;13888:27;;;;;;;;:::i;:::-;;;;;;;13871:44;;13941:14;:24;;;:29;;13969:1;13941:29;13937:1430;;14136:14;:25;;;:32;14095:9;:73;;14073:96;;14243:18;14293:5;14239:86;14473:14;:25;;;14499:9;14473:36;;;;;;;;:::i;:::-;;;;;;;14465:44;;14699:5;:12;;;14647:9;:14;;;:21;;;:64;;;;:::i;:::-;14595:14;;:21;;;;:116;;;;:14;14854:12;;;:16;15026:163;15075:14;14854:5;14595:9;15026:19;:163::i;:::-;15005:184;;15263:18;15313:5;15259:86;;13229:3;;;:::i;:::-;;;13107:2278;;;;12289:3110;12264:3135;11902:3507;11877:3532;15499:18;15495:89;;;15540:33;;;;;;;;;;;;;;15495:89;11449:4141;;;11187:4403;;;;;;:::o;16782:870::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17254:168:95;17316:15;17349:23;17390:18;17254:44;:168::i;:::-;17531:114;;;;;;;;;;;17592:10;17531:114;;;;;;;;;;-1:-1:-1;17531:114:95;;16782:870;-1:-1:-1;;;;16782:870:95:o;3279:347:101:-;3444:60;;3520:42;3444:60;;;3520:42;-1:-1:-1;;;;;3444:41:101;;;3520:42;;3444:60;;3486:6;;3494:9;;3444:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:118;;;3427:193;;3594:15;;;;;;;;;;;;;;840:937:102;989:5;-1:-1:-1;;;;;989:17:102;;1010:1;989:22;985:77;;1034:17;;;;;-1:-1:-1;;;;;55653:55:144;;1034:17:102;;;55635:74:144;55608:18;;1034:17:102;55489:226:144;985:77:102;1127:156;;;-1:-1:-1;;;;;56001:15:144;;;1127:156:102;;;55983:34:144;56053:15;;;56033:18;;;56026:43;56085:18;;;;56078:34;;;1127:156:102;;;;;;;;;;55895:18:144;;;;1127:156:102;;;;;;;;;1167:36;1127:156;;;1103:190;;-1:-1:-1;;;;1103:10:102;;;;:190;;1127:156;1103:190;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1072:221;;;;1376:2;1371:96;;1401:55;;;;;-1:-1:-1;;;;;59011:15:144;;;1401:55:102;;;58993:34:144;59063:15;;;59043:18;;;59036:43;59115:15;;59095:18;;;59088:43;1446:1:102;59147:18:144;;;59140:34;59190:19;;;59183:35;;;58904:19;;1401:55:102;58665:559:144;1371:96:102;1481:11;;:16;;;;:37;;;1516:2;1501:4;:11;:17;;1481:37;1477:294;;;1550:4;1539:24;;;;;;;;;;;;:::i;:::-;1534:227;;1590:156;;;;;-1:-1:-1;;;;;59821:15:144;;;1590:156:102;;;59803:34:144;59873:15;;;59853:18;;;59846:43;59925:15;;59905:18;;;59898:43;59957:18;;;59950:34;;;59714:19;;1590:156:102;59511:479:144;17502:483:94;17590:15;17699:26;17714:10;6263:239:96;;6309:12;6263:239;;;60508:92:144;60650:66;6359:19:96;60637:2:144;60633:15;60629:88;60616:11;;;60609:109;60734:12;;;60727:28;;;6449:27:96;60771:12:144;;;60764:28;6066:15:96;;60808:12:144;;6263:239:96;;;;;;;;;;;;;6228:296;;6263:239;6228:296;;;;;5975:598;-1:-1:-1;;5975:598:96;17699:26:94;17689:36;;17819:7;-1:-1:-1;;;;;17819:19:94;;17842:1;17819:24;17815:164;;17933:35;;;;;;;;60169:25:144;;;-1:-1:-1;;;;;60230:55:144;;60210:18;;;60203:83;60142:18;;17933:35:94;59995:297:144;17815:164:94;17502:483;;;:::o;18040:448:95:-;18191:23;18271:13;:23;;;-1:-1:-1;;;;;18245:49:95;:12;:22;;;-1:-1:-1;;;;;18245:49:95;;;:112;;;-1:-1:-1;18335:22:95;;18310:47;;;;;;;;:::i;:::-;:21;;:47;;;;;;;;:::i;:::-;;;18245:112;:169;;;;18395:13;:19;;;-1:-1:-1;;;;;18373:41:95;:12;:18;;;-1:-1:-1;;;;;18373:41:95;;;18245:169;:236;;;-1:-1:-1;;18457:24:95;;;;;18430:23;;;:51;;;18040:448::o;9919:510::-;10091:23;10174:5;:16;;;10145:9;:14;;;:25;;;:45;;:104;;;;10227:14;:22;;;-1:-1:-1;;;;;10206:43:95;:9;:17;;;-1:-1:-1;;;;;10206:43:95;;;10145:104;:169;;;;10289:14;:25;;;10265:9;:20;;;:49;;10145:169;:226;;;-1:-1:-1;10357:14:95;;10330:41;;;;;;;;:::i;:::-;:14;;:23;:41;;;;;;;;:::i;:::-;;;10145:226;:277;;;;10411:5;:11;;;-1:-1:-1;;;;;10387:35:95;:9;:14;;;:20;;;-1:-1:-1;;;;;10387:35:95;;;10126:296;9919:510;-1:-1:-1;;;;9919:510:95:o;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:258:144:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:144;244:16;;237:27;14:258::o;277:317::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;508:2;496:15;513:66;492:88;483:98;;;;583:4;479:109;;277:317;-1:-1:-1;;277:317:144:o;599:220::-;748:2;737:9;730:21;711:4;768:45;809:2;798:9;794:18;786:6;768:45;:::i;824:180::-;883:6;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;-1:-1:-1;975:23:144;;824:180;-1:-1:-1;824:180:144:o;1425:184::-;1477:77;1474:1;1467:88;1574:4;1571:1;1564:15;1598:4;1595:1;1588:15;1614:253;1686:2;1680:9;1728:4;1716:17;;1763:18;1748:34;;1784:22;;;1745:62;1742:88;;;1810:18;;:::i;:::-;1846:2;1839:22;1614:253;:::o;1872:255::-;1944:2;1938:9;1986:6;1974:19;;2023:18;2008:34;;2044:22;;;2005:62;2002:88;;;2070:18;;:::i;2132:334::-;2203:2;2197:9;2259:2;2249:13;;2264:66;2245:86;2233:99;;2362:18;2347:34;;2383:22;;;2344:62;2341:88;;;2409:18;;:::i;:::-;2445:2;2438:22;2132:334;;-1:-1:-1;2132:334:144:o;2471:196::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:144;2640:14;2656:4;2636:25;;2471:196::o;2672:154::-;-1:-1:-1;;;;;2751:5:144;2747:54;2740:5;2737:65;2727:93;;2816:1;2813;2806:12;2831:134;2899:20;;2928:31;2899:20;2928:31;:::i;2970:149::-;3044:20;;3093:1;3083:12;;3073:40;;3109:1;3106;3099:12;3124:566;3180:5;3228:4;3216:9;3211:3;3207:19;3203:30;3200:50;;;3246:1;3243;3236:12;3200:50;3268:22;;:::i;:::-;3259:31;;3313:35;3338:9;3313:35;:::i;:::-;3306:5;3299:50;3401:2;3390:9;3386:18;3373:32;3414:33;3439:7;3414:33;:::i;:::-;3479:7;3474:2;3467:5;3463:14;3456:31;;3547:2;3536:9;3532:18;3519:32;3514:2;3507:5;3503:14;3496:56;3612:2;3601:9;3597:18;3584:32;3579:2;3572:5;3568:14;3561:56;3678:3;3667:9;3663:19;3650:33;3644:3;3637:5;3633:15;3626:58;3124:566;;;;:::o;3695:728::-;3758:5;3811:3;3804:4;3796:6;3792:17;3788:27;3778:55;;3829:1;3826;3819:12;3778:55;3865:6;3852:20;3891:4;3915:73;3931:56;3984:2;3931:56;:::i;:::-;3915:73;:::i;:::-;4022:15;;;4084:4;4127:11;;;4115:24;;4111:33;;;4053:12;;;;4010:3;4156:15;;;4153:35;;;4184:1;4181;4174:12;4153:35;4220:2;4212:6;4208:15;4232:162;4248:6;4243:3;4240:15;4232:162;;;4314:37;4347:3;4342;4314:37;:::i;:::-;4302:50;;4372:12;;;;4265;;4232:162;;;-1:-1:-1;4412:5:144;;3695:728;-1:-1:-1;;;;;;;3695:728:144:o;4428:908::-;4492:5;4540:4;4528:9;4523:3;4519:19;4515:30;4512:50;;;4558:1;4555;4548:12;4512:50;4591:2;4585:9;4633:4;4625:6;4621:17;4704:6;4692:10;4689:22;4668:18;4656:10;4653:34;4650:62;4647:88;;;4715:18;;:::i;:::-;4751:2;4744:22;4784:6;-1:-1:-1;4784:6:144;4814:35;4839:9;4814:35;:::i;:::-;4806:6;4799:51;4902:2;4891:9;4887:18;4874:32;4915:33;4940:7;4915:33;:::i;:::-;4981:7;4976:2;4968:6;4964:15;4957:32;;5050:2;5039:9;5035:18;5022:32;5017:2;5009:6;5005:15;4998:57;5116:2;5105:9;5101:18;5088:32;5083:2;5075:6;5071:15;5064:57;5183:3;5172:9;5168:19;5155:33;5149:3;5141:6;5137:16;5130:59;5241:3;5230:9;5226:19;5213:33;5255;5280:7;5255:33;:::i;:::-;5316:3;5304:16;;;;5297:33;4428:908;;-1:-1:-1;;4428:908:144:o;5341:744::-;5412:5;5465:3;5458:4;5450:6;5446:17;5442:27;5432:55;;5483:1;5480;5473:12;5432:55;5519:6;5506:20;5545:4;5569:73;5585:56;5638:2;5585:56;:::i;5569:73::-;5676:15;;;5738:4;5781:11;;;5769:24;;5765:33;;;5707:12;;;;5664:3;5810:15;;;5807:35;;;5838:1;5835;5828:12;5807:35;5874:2;5866:6;5862:15;5886:170;5902:6;5897:3;5894:15;5886:170;;;5968:45;6009:3;6004;5968:45;:::i;:::-;5956:58;;6034:12;;;;5919;;5886:170;;6090:150;6165:20;;6214:1;6204:12;;6194:40;;6230:1;6227;6220:12;6245:1291;6307:5;6355:6;6343:9;6338:3;6334:19;6330:32;6327:52;;;6375:1;6372;6365:12;6327:52;6397:22;;:::i;:::-;6388:31;;6442:29;6461:9;6442:29;:::i;:::-;6435:5;6428:44;6504:38;6538:2;6527:9;6523:18;6504:38;:::i;:::-;6499:2;6492:5;6488:14;6481:62;6594:2;6583:9;6579:18;6566:32;6617:18;6658:2;6650:6;6647:14;6644:34;;;6674:1;6671;6664:12;6644:34;6710:66;6772:3;6763:6;6752:9;6748:22;6710:66;:::i;:::-;6705:2;6698:5;6694:14;6687:90;6830:2;6819:9;6815:18;6802:32;6786:48;;6859:2;6849:8;6846:16;6843:36;;;6875:1;6872;6865:12;6843:36;;6911:76;6983:3;6972:8;6961:9;6957:24;6911:76;:::i;:::-;6906:2;6899:5;6895:14;6888:100;;7021:46;7062:3;7051:9;7047:19;7021:46;:::i;:::-;7015:3;7008:5;7004:15;6997:71;7129:3;7118:9;7114:19;7101:33;7095:3;7088:5;7084:15;7077:58;7196:3;7185:9;7181:19;7168:33;7162:3;7155:5;7151:15;7144:58;7263:3;7252:9;7248:19;7235:33;7229:3;7222:5;7218:15;7211:58;7288:3;7351:2;7340:9;7336:18;7323:32;7318:2;7311:5;7307:14;7300:56;;7375:3;7438:2;7427:9;7423:18;7410:32;7405:2;7398:5;7394:14;7387:56;;7462:3;7525:2;7514:9;7510:18;7497:32;7492:2;7485:5;7481:14;7474:56;;6245:1291;;;;:::o;7541:186::-;7609:20;;7669:32;7658:44;;7648:55;;7638:83;;7717:1;7714;7707:12;7732:589;7774:5;7827:3;7820:4;7812:6;7808:17;7804:27;7794:55;;7845:1;7842;7835:12;7794:55;7881:6;7868:20;7907:18;7903:2;7900:26;7897:52;;;7929:18;;:::i;:::-;7973:114;8081:4;8012:66;8005:4;8001:2;7997:13;7993:86;7989:97;7973:114;:::i;:::-;8112:2;8103:7;8096:19;8158:3;8151:4;8146:2;8138:6;8134:15;8130:26;8127:35;8124:55;;;8175:1;8172;8165:12;8124:55;8240:2;8233:4;8225:6;8221:17;8214:4;8205:7;8201:18;8188:55;8288:1;8263:16;;;8281:4;8259:27;8252:38;;;;8267:7;7732:589;-1:-1:-1;;;7732:589:144:o;8326:896::-;8386:5;8434:4;8422:9;8417:3;8413:19;8409:30;8406:50;;;8452:1;8449;8442:12;8406:50;8474:22;;:::i;:::-;8465:31;;8532:9;8519:23;8561:18;8602:2;8594:6;8591:14;8588:34;;;8618:1;8615;8608:12;8588:34;8645:62;8703:3;8694:6;8683:9;8679:22;8645:62;:::i;:::-;8638:5;8631:77;8740:38;8774:2;8763:9;8759:18;8740:38;:::i;:::-;8735:2;8728:5;8724:14;8717:62;8811:38;8845:2;8834:9;8830:18;8811:38;:::i;:::-;8806:2;8799:5;8795:14;8788:62;8903:2;8892:9;8888:18;8875:32;8859:48;;8932:2;8922:8;8919:16;8916:36;;;8948:1;8945;8938:12;8916:36;8984:47;9027:3;9016:8;9005:9;9001:24;8984:47;:::i;:::-;8979:2;8972:5;8968:14;8961:71;9085:3;9074:9;9070:19;9057:33;9041:49;;9115:2;9105:8;9102:16;9099:36;;;9131:1;9128;9121:12;9099:36;;9168:47;9211:3;9200:8;9189:9;9185:24;9168:47;:::i;:::-;9162:3;9155:5;9151:15;9144:72;;8326:896;;;;:::o;9227:929::-;9294:5;9347:3;9340:4;9332:6;9328:17;9324:27;9314:55;;9365:1;9362;9355:12;9314:55;9401:6;9388:20;9427:4;9451:73;9467:56;9520:2;9467:56;:::i;9451:73::-;9558:15;;;9644:1;9640:10;;;;9628:23;;9624:32;;;9589:12;;;;9668:15;;;9665:35;;;9696:1;9693;9686:12;9665:35;9732:2;9724:6;9720:15;9744:383;9760:6;9755:3;9752:15;9744:383;;;9846:3;9833:17;9882:18;9869:11;9866:35;9863:125;;;9942:1;9971:2;9967;9960:14;9863:125;10013:71;10080:3;10075:2;10061:11;10053:6;10049:24;10045:33;10013:71;:::i;:::-;10001:84;;-1:-1:-1;10105:12:144;;;;9777;;9744:383;;;-1:-1:-1;10145:5:144;9227:929;-1:-1:-1;;;;;;9227:929:144:o;10161:392::-;10249:8;10259:6;10313:3;10306:4;10298:6;10294:17;10290:27;10280:55;;10331:1;10328;10321:12;10280:55;-1:-1:-1;10354:20:144;;10397:18;10386:30;;10383:50;;;10429:1;10426;10419:12;10383:50;10466:4;10458:6;10454:17;10442:29;;10526:3;10519:4;10509:6;10506:1;10502:14;10494:6;10490:27;10486:38;10483:47;10480:67;;;10543:1;10540;10533:12;10480:67;10161:392;;;;;:::o;10558:1160::-;10812:6;10820;10828;10836;10844;10897:2;10885:9;10876:7;10872:23;10868:32;10865:52;;;10913:1;10910;10903:12;10865:52;10953:9;10940:23;10982:18;11023:2;11015:6;11012:14;11009:34;;;11039:1;11036;11029:12;11009:34;11062:74;11128:7;11119:6;11108:9;11104:22;11062:74;:::i;:::-;11052:84;;11189:2;11178:9;11174:18;11161:32;11145:48;;11218:2;11208:8;11205:16;11202:36;;;11234:1;11231;11224:12;11202:36;11273:97;11362:7;11351:8;11340:9;11336:24;11273:97;:::i;:::-;11389:8;;-1:-1:-1;11247:123:144;-1:-1:-1;11477:2:144;11462:18;;11449:32;;-1:-1:-1;11493:16:144;;;11490:36;;;11522:1;11519;11512:12;11490:36;;11561:97;11650:7;11639:8;11628:9;11624:24;11561:97;:::i;:::-;10558:1160;;;;-1:-1:-1;10558:1160:144;;-1:-1:-1;11677:8:144;;11535:123;10558:1160;-1:-1:-1;;;10558:1160:144:o;11723:184::-;11775:77;11772:1;11765:88;11872:4;11869:1;11862:15;11896:4;11893:1;11886:15;11912:139;11992:1;11985:5;11982:12;11972:46;;11998:18;;:::i;:::-;12027;;11912:139::o;12188:459::-;12254:43;12293:3;12285:5;12279:12;12254:43;:::i;:::-;12343:4;12336:5;12332:16;12326:23;-1:-1:-1;;;;;12460:2:144;12446:12;12442:21;12435:4;12430:3;12426:14;12419:45;12513:4;12506:5;12502:16;12496:23;12489:4;12484:3;12480:14;12473:47;12569:4;12562:5;12558:16;12552:23;12545:4;12540:3;12536:14;12529:47;12637:2;12629:4;12622:5;12618:16;12612:23;12608:32;12601:4;12596:3;12592:14;12585:56;;;12188:459;;:::o;12652:663::-;12714:3;12752:5;12746:12;12779:6;12774:3;12767:19;12805:4;12834:2;12829:3;12825:12;12818:19;;12871:2;12864:5;12860:14;12892:1;12902:388;12916:6;12913:1;12910:13;12902:388;;;12981:6;12975:13;13001:46;13043:3;13038:2;13032:9;13001:46;:::i;:::-;13093:11;;;13087:18;-1:-1:-1;;;;;13083:67:144;13076:4;13067:14;;13060:91;13201:4;13193:13;13187:20;13180:4;13171:14;;13164:44;13237:4;13228:14;;;;13265:15;;;;12938:1;12931:9;12902:388;;;-1:-1:-1;13306:3:144;;12652:663;-1:-1:-1;;;;;12652:663:144:o;13320:324::-;13553:2;13542:9;13535:21;13516:4;13573:65;13634:2;13623:9;13619:18;13611:6;13573:65;:::i;13831:395::-;13925:6;13978:2;13966:9;13957:7;13953:23;13949:32;13946:52;;;13994:1;13991;13984:12;13946:52;14034:9;14021:23;14067:18;14059:6;14056:30;14053:50;;;14099:1;14096;14089:12;14053:50;14122:22;;14178:3;14160:16;;;14156:26;14153:46;;;14195:1;14192;14185:12;14413:1817;14833:6;14841;14849;14857;14865;14873;14881;14889;14897;14905;14958:3;14946:9;14937:7;14933:23;14929:33;14926:53;;;14975:1;14972;14965:12;14926:53;15015:9;15002:23;15044:18;15085:2;15077:6;15074:14;15071:34;;;15101:1;15098;15091:12;15071:34;15124:74;15190:7;15181:6;15170:9;15166:22;15124:74;:::i;:::-;15114:84;;15251:2;15240:9;15236:18;15223:32;15207:48;;15280:2;15270:8;15267:16;15264:36;;;15296:1;15293;15286:12;15264:36;15335:97;15424:7;15413:8;15402:9;15398:24;15335:97;:::i;:::-;15451:8;;-1:-1:-1;15309:123:144;-1:-1:-1;15539:2:144;15524:18;;15511:32;;-1:-1:-1;15555:16:144;;;15552:36;;;15584:1;15581;15574:12;15552:36;15623:97;15712:7;15701:8;15690:9;15686:24;15623:97;:::i;:::-;15739:8;;-1:-1:-1;15597:123:144;-1:-1:-1;15827:2:144;15812:18;;15799:32;;-1:-1:-1;15843:16:144;;;15840:36;;;15872:1;15869;15862:12;15840:36;;15911:97;16000:7;15989:8;15978:9;15974:24;15911:97;:::i;:::-;16027:8;;-1:-1:-1;15885:123:144;-1:-1:-1;;16109:3:144;16094:19;;16081:33;;-1:-1:-1;16133:39:144;16167:3;16152:19;;16133:39;:::i;:::-;16123:49;;16219:3;16208:9;16204:19;16191:33;16181:43;;14413:1817;;;;;;;;;;;;;:::o;16235:879::-;16551:2;16563:21;;;16633:13;;16536:18;;;16655:22;;;16503:4;;16730;;16708:2;16693:18;;;16757:15;;;16503:4;16800:185;16814:6;16811:1;16808:13;16800:185;;;16889:13;;16882:21;16875:29;16863:42;;16925:12;;;;16960:15;;;;16836:1;16829:9;16800:185;;;16804:3;;;17030:9;17025:3;17021:19;17016:2;17005:9;17001:18;16994:47;17058:50;17104:3;17096:6;17058:50;:::i;:::-;17050:58;16235:879;-1:-1:-1;;;;;;16235:879:144:o;17119:487::-;17230:6;17238;17291:2;17279:9;17270:7;17266:23;17262:32;17259:52;;;17307:1;17304;17297:12;17259:52;17347:9;17334:23;17380:18;17372:6;17369:30;17366:50;;;17412:1;17409;17402:12;17366:50;17451:95;17538:7;17529:6;17518:9;17514:22;17451:95;:::i;:::-;17565:8;;17425:121;;-1:-1:-1;17119:487:144;-1:-1:-1;;;;17119:487:144:o;17803:879::-;17981:6;17989;17997;18005;18058:2;18046:9;18037:7;18033:23;18029:32;18026:52;;;18074:1;18071;18064:12;18026:52;18114:9;18101:23;18143:18;18184:2;18176:6;18173:14;18170:34;;;18200:1;18197;18190:12;18170:34;18239:95;18326:7;18317:6;18306:9;18302:22;18239:95;:::i;:::-;18353:8;;-1:-1:-1;18213:121:144;-1:-1:-1;18441:2:144;18426:18;;18413:32;;-1:-1:-1;18457:16:144;;;18454:36;;;18486:1;18483;18476:12;18454:36;;18525:97;18614:7;18603:8;18592:9;18588:24;18525:97;:::i;:::-;17803:879;;;;-1:-1:-1;18641:8:144;-1:-1:-1;;;;17803:879:144:o;18687:452::-;18780:6;18788;18841:2;18829:9;18820:7;18816:23;18812:32;18809:52;;;18857:1;18854;18847:12;18809:52;18897:9;18884:23;18930:18;18922:6;18919:30;18916:50;;;18962:1;18959;18952:12;18916:50;18985:22;;19041:2;19023:16;;;19019:25;19016:45;;;19057:1;19054;19047:12;19016:45;19080:2;19129;19114:18;;;;19101:32;;-1:-1:-1;;;18687:452:144:o;19144:994::-;19326:6;19334;19342;19350;19358;19411:3;19399:9;19390:7;19386:23;19382:33;19379:53;;;19428:1;19425;19418:12;19379:53;19468:9;19455:23;19497:18;19538:2;19530:6;19527:14;19524:34;;;19554:1;19551;19544:12;19524:34;19577:22;;;;19633:3;19615:16;;;19611:26;19608:46;;;19650:1;19647;19640:12;19608:46;19673:2;;-1:-1:-1;19728:2:144;19713:18;;19700:32;;19744:16;;;19741:36;;;19773:1;19770;19763:12;19741:36;;19812:97;19901:7;19890:8;19879:9;19875:24;19812:97;:::i;:::-;19928:8;;-1:-1:-1;19786:123:144;-1:-1:-1;;20010:2:144;19995:18;;19982:32;;-1:-1:-1;20064:2:144;20049:18;;20036:32;20077:31;20036:32;20077:31;:::i;:::-;20127:5;20117:15;;;19144:994;;;;;;;;:::o;20143:1460::-;20478:6;20486;20494;20502;20510;20518;20526;20534;20587:3;20575:9;20566:7;20562:23;20558:33;20555:53;;;20604:1;20601;20594:12;20555:53;20644:9;20631:23;20673:18;20714:2;20706:6;20703:14;20700:34;;;20730:1;20727;20720:12;20700:34;20769:95;20856:7;20847:6;20836:9;20832:22;20769:95;:::i;:::-;20883:8;;-1:-1:-1;20743:121:144;-1:-1:-1;20971:2:144;20956:18;;20943:32;;-1:-1:-1;20987:16:144;;;20984:36;;;21016:1;21013;21006:12;20984:36;21055:97;21144:7;21133:8;21122:9;21118:24;21055:97;:::i;:::-;21171:8;;-1:-1:-1;21029:123:144;-1:-1:-1;21259:2:144;21244:18;;21231:32;;-1:-1:-1;21275:16:144;;;21272:36;;;21304:1;21301;21294:12;21272:36;;21343:97;21432:7;21421:8;21410:9;21406:24;21343:97;:::i;:::-;20143:1460;;;;-1:-1:-1;20143:1460:144;;;;21459:8;;21541:2;21526:18;;21513:32;;21592:3;21577:19;21564:33;;-1:-1:-1;20143:1460:144;-1:-1:-1;;;;20143:1460:144:o;21608:247::-;21667:6;21720:2;21708:9;21699:7;21695:23;21691:32;21688:52;;;21736:1;21733;21726:12;21688:52;21775:9;21762:23;21794:31;21819:5;21794:31;:::i;21860:411::-;22065:2;22054:9;22047:21;22028:4;22085:45;22126:2;22115:9;22111:18;22103:6;22085:45;:::i;:::-;22077:53;;22166:6;22161:2;22150:9;22146:18;22139:34;-1:-1:-1;;;;;22213:6:144;22209:55;22204:2;22193:9;22189:18;22182:83;21860:411;;;;;;:::o;22276:400::-;22375:6;22428:2;22416:9;22407:7;22403:23;22399:32;22396:52;;;22444:1;22441;22434:12;22396:52;22484:9;22471:23;22517:18;22509:6;22506:30;22503:50;;;22549:1;22546;22539:12;22503:50;22572:22;;22628:3;22610:16;;;22606:26;22603:46;;;22645:1;22642;22635:12;23183:2710;23369:9;23404:77;23420:60;23473:6;23420:60;:::i;23404:77::-;23515:19;;;23553:4;23573:12;;;;23503:3;23604:1;23639:15;;;23628:27;;23678:14;23667:26;;23664:46;;;23706:1;23703;23696:12;23664:46;23730:5;23744:2116;23760:6;23755:3;23752:15;23744:2116;;;23846:3;23833:17;23873:18;23923:2;23910:11;23907:19;23904:109;;;23967:1;23996:2;23992;23985:14;23904:109;24047:11;24040:5;24036:23;24026:33;;24104:4;24099:2;24083:14;24079:23;24075:34;24072:124;;;24150:1;24179:2;24175;24168:14;24072:124;24224:22;;:::i;:::-;24288:2;24275:16;24266:7;24259:33;24341:2;24337;24333:11;24320:25;24380:1;24371:7;24368:14;24358:112;;24424:1;24453:2;24449;24442:14;24358:112;24490:16;;;24483:33;24539:2;24592:11;;;24579:25;24561:16;;;24554:51;24628:2;24681:11;;;24668:25;24650:16;;;24643:51;24718:3;24761:12;;;24748:26;24790:14;;;24787:107;;;24846:1;24876:3;24871;24864:16;24787:107;24918:15;;;;;24976:14;24969:4;24960:14;;24956:35;24946:136;;25034:1;25023:12;;25064:3;25059;25052:16;24946:136;25119:3;25106:17;25095:28;;25149:74;25165:57;25218:3;25165:57;:::i;25149:74::-;25267:18;;;25363:12;;;25354:22;;25350:31;;;25307:14;;;;25410;25397:28;;25394:121;;;25467:1;25497:3;25492;25485:16;25394:121;25541:12;;;;25566:174;25584:8;25577:5;25574:19;25566:174;;;25666:19;;25652:34;;25605:14;;;;25712;;;;25566:174;;;25760:17;;;25753:32;;;;-1:-1:-1;25798:20:144;;-1:-1:-1;;25838:12:144;;;;23777;;23744:2116;;;-1:-1:-1;25882:5:144;;23183:2710;-1:-1:-1;;;;;;;23183:2710:144:o;25898:636::-;26020:4;26026:6;26086:11;26073:25;26176:66;26165:8;26149:14;26145:29;26141:102;26121:18;26117:127;26107:155;;26258:1;26255;26248:12;26107:155;26285:33;;26337:20;;;-1:-1:-1;26380:18:144;26369:30;;26366:50;;;26412:1;26409;26402:12;26366:50;26445:4;26433:17;;-1:-1:-1;26504:4:144;26492:17;;26476:14;26472:38;26462:49;;26459:69;;;26524:1;26521;26514:12;26539:232;26625:6;26678:3;26666:9;26657:7;26653:23;26649:33;26646:53;;;26695:1;26692;26685:12;26646:53;26718:47;26757:7;26746:9;26718:47;:::i;26776:644::-;26906:4;26912:6;26972:11;26959:25;27062:66;27051:8;27035:14;27031:29;27027:102;27007:18;27003:127;26993:155;;27144:1;27141;27134:12;26993:155;27171:33;;27223:20;;;-1:-1:-1;27266:18:144;27255:30;;27252:50;;;27298:1;27295;27288:12;27252:50;27331:4;27319:17;;-1:-1:-1;27390:4:144;27378:17;;27362:14;27358:38;27348:49;;27345:69;;;27410:1;27407;27400:12;27425:248;27519:6;27572:3;27560:9;27551:7;27547:23;27543:33;27540:53;;;27589:1;27586;27579:12;27540:53;27612:55;27659:7;27648:9;27612:55;:::i;27678:207::-;27751:6;27804:2;27792:9;27783:7;27779:23;27775:32;27772:52;;;27820:1;27817;27810:12;27772:52;27843:36;27869:9;27843:36;:::i;27890:211::-;28004:9;28041:54;28080:14;28073:5;28041:54;:::i;28106:184::-;28158:77;28155:1;28148:88;28255:4;28252:1;28245:15;28279:4;28276:1;28269:15;28295:195;28334:3;-1:-1:-1;;28358:5:144;28355:77;28352:103;;28435:18;;:::i;:::-;-1:-1:-1;28482:1:144;28471:13;;28295:195::o;28495:184::-;28547:77;28544:1;28537:88;28644:4;28641:1;28634:15;28668:4;28665:1;28658:15;28684:543;28902:13;;28845:3;;28876;;28955:4;28982:15;;;28845:3;29025:175;29039:6;29036:1;29033:13;29025:175;;;29102:13;;29088:28;;29138:14;;;;29175:15;;;;29061:1;29054:9;29025:175;;;-1:-1:-1;29216:5:144;;28684:543;-1:-1:-1;;;;;;28684:543:144:o;29232:114::-;29314:1;29307:5;29304:12;29294:46;;29320:18;;:::i;29351:132::-;29412:38;29444:5;29412:38;:::i;29488:1110::-;29957:25;;;-1:-1:-1;;;;;30079:15:144;;;30074:2;30059:18;;30052:43;30131:15;;30126:2;30111:18;;30104:43;30178:2;30163:18;;30156:34;;;30221:3;30206:19;;30199:35;;;29944:3;29929:19;;30243:39;30275:6;30243:39;:::i;:::-;30313:3;30298:19;;30291:35;;;;30357:3;30342:19;;30335:35;;;;30401:3;30386:19;;30379:35;;;;30445:3;30430:19;;30423:35;;;;30489:3;30474:19;;30467:35;30533:3;30518:19;;30511:36;30578:3;30563:19;;;30556:36;29488:1110;;-1:-1:-1;;;;;29488:1110:144:o;30603:489::-;30670:5;30718:4;30706:9;30701:3;30697:19;30693:30;30690:50;;;30736:1;30733;30726:12;30690:50;30769:4;30763:11;30813:4;30805:6;30801:17;30884:6;30872:10;30869:22;30848:18;30836:10;30833:34;30830:62;30827:88;;;30895:18;;:::i;:::-;30931:4;30924:24;30996:23;;30981:39;;31081:2;31066:18;;;31053:32;31036:15;;;31029:57;;;;-1:-1:-1;30966:6:144;30603:489;-1:-1:-1;30603:489:144:o;31097:1832::-;31343:9;31378:77;31394:60;31447:6;31394:60;:::i;31378:77::-;31477:3;31501:6;31496:3;31489:19;31527:4;31556:2;31551:3;31547:12;31540:19;;31600:6;31597:1;31593:14;31586:5;31582:26;31631:14;31623:6;31620:26;31617:46;;;31659:1;31656;31649:12;31617:46;31683:5;31697:1199;31713:6;31708:3;31705:15;31697:1199;;;31799:3;31786:17;31835:18;31822:11;31819:35;31816:125;;;31895:1;31924:2;31920;31913:14;31816:125;31964:23;;32029:14;32022:4;32014:13;;32010:34;32000:132;;32086:1;32115:2;32111;32104:14;32000:132;32168:2;32155:16;32197:73;32213:56;32266:2;32213:56;:::i;32197:73::-;32314:17;;;32412:1;32408:10;;;;32400:19;;32396:28;;;32353:14;;;;32453;32440:28;;32437:118;;;32509:1;32538:2;32534;32527:14;32437:118;32581:11;;;;32605:218;32623:8;32616:5;32613:19;32605:218;;;32707:61;32753:14;32746:5;32707:61;:::i;:::-;32700:5;32693:76;32806:2;32799:5;32795:14;32786:23;;32655:4;32648:5;32644:16;32635:25;;32605:218;;;32836:18;;-1:-1:-1;;;32874:12:144;;;;31730;;31697:1199;;;-1:-1:-1;32918:5:144;;31097:1832;-1:-1:-1;;;;;;31097:1832:144:o;32934:381::-;33025:4;33083:11;33070:25;33173:66;33162:8;33146:14;33142:29;33138:102;33118:18;33114:127;33104:155;;33255:1;33252;33245:12;33104:155;33276:33;;;;;32934:381;-1:-1:-1;;32934:381:144:o;33320:391::-;33421:4;33479:11;33466:25;33569:66;33558:8;33542:14;33538:29;33534:102;33514:18;33510:127;33500:155;;33651:1;33648;33641:12;33716:217;33834:9;33871:56;33912:14;33905:5;33871:56;:::i;33938:580::-;34015:4;34021:6;34081:11;34068:25;34171:66;34160:8;34144:14;34140:29;34136:102;34116:18;34112:127;34102:155;;34253:1;34250;34243:12;34102:155;34280:33;;34332:20;;;-1:-1:-1;34375:18:144;34364:30;;34361:50;;;34407:1;34404;34397:12;34361:50;34440:4;34428:17;;-1:-1:-1;34471:14:144;34467:27;;;34457:38;;34454:58;;;34508:1;34505;34498:12;34523:473;34588:3;34626:5;34620:12;34653:6;34648:3;34641:19;34679:4;34708:2;34703:3;34699:12;34692:19;;34745:2;34738:5;34734:14;34766:1;34776:195;34790:6;34787:1;34784:13;34776:195;;;34839:50;34885:3;34876:6;34870:13;34839:50;:::i;:::-;34918:4;34909:14;;;;;34946:15;;;;34812:1;34805:9;34776:195;;35001:1433;35391:4;35420:3;35461:2;35450:9;35446:18;35491:6;35480:9;35473:25;35517:2;-1:-1:-1;;;;;35628:2:144;35620:6;35616:15;35611:2;35600:9;35596:18;35589:43;35651:2;35689;35684;35673:9;35669:18;35662:30;35712:6;35747;35741:13;35778:6;35770;35763:22;35816:3;35805:9;35801:19;35794:26;;35855:2;35847:6;35843:15;35829:29;;35876:1;35886:414;35900:6;35897:1;35894:13;35886:414;;;35965:6;35959:13;35985:40;36021:3;36016:2;36010:9;35985:40;:::i;:::-;36069:11;;;36063:18;36059:27;;36045:12;;;36038:49;36127:11;;;36121:18;36107:12;;;36100:40;36163:4;36207:11;;;36201:18;36187:12;;;36180:40;36275:15;;;;36240:12;;;;35922:1;35915:9;35886:414;;;35890:3;;36347:9;36342:3;36338:19;36331:4;36320:9;36316:20;36309:49;36375:53;36424:3;36416:6;36375:53;:::i;:::-;36367:61;35001:1433;-1:-1:-1;;;;;;;;;;;;35001:1433:144:o;36439:276::-;36517:6;36570:2;36558:9;36549:7;36545:23;36541:32;36538:52;;;36586:1;36583;36576:12;36538:52;36625:9;36612:23;36664:2;36657:5;36654:13;36644:41;;36681:1;36678;36671:12;37376:196;37415:3;37443:5;37433:39;;37452:18;;:::i;:::-;-1:-1:-1;;;37488:78:144;;37376:196::o;37969:644::-;38102:4;38108:6;38168:11;38155:25;38258:66;38247:8;38231:14;38227:29;38223:102;38203:18;38199:127;38189:155;;38340:1;38337;38330:12;38189:155;38367:33;;38419:20;;;-1:-1:-1;38462:18:144;38451:30;;38448:50;;;38494:1;38491;38484:12;38448:50;38527:4;38515:17;;-1:-1:-1;38578:1:144;38574:14;;;38558;38554:35;38544:46;;38541:66;;;38603:1;38600;38593:12;38618:125;38658:4;38686:1;38683;38680:8;38677:34;;;38691:18;;:::i;:::-;-1:-1:-1;38728:9:144;;38618:125::o;38748:613::-;39046:25;;;39033:3;39018:19;;39080:52;39128:2;39113:18;;39105:6;39080:52;:::i;:::-;-1:-1:-1;;;;;39172:6:144;39168:55;39163:2;39152:9;39148:18;39141:83;39260:6;39255:2;39244:9;39240:18;39233:34;39304:6;39298:3;39287:9;39283:19;39276:35;39348:6;39342:3;39331:9;39327:19;39320:35;38748:613;;;;;;;;;:::o;39366:731::-;39708:25;;;39695:3;39680:19;;39742:52;39790:2;39775:18;;39767:6;39742:52;:::i;:::-;-1:-1:-1;;;;;39903:2:144;39895:6;39891:15;39886:2;39875:9;39871:18;39864:43;39943:6;39938:2;39927:9;39923:18;39916:34;39987:6;39981:3;39970:9;39966:19;39959:35;40031:6;40025:3;40014:9;40010:19;40003:35;40087:2;40079:6;40075:15;40069:3;40058:9;40054:19;40047:44;;39366:731;;;;;;;;;;:::o;40102:128::-;40142:3;40173:1;40169:6;40166:1;40163:13;40160:39;;;40179:18;;:::i;:::-;-1:-1:-1;40215:9:144;;40102:128::o;40235:228::-;40275:7;40401:1;-1:-1:-1;;40329:74:144;40326:1;40323:81;40318:1;40311:9;40304:17;40300:105;40297:131;;;40408:18;;:::i;:::-;-1:-1:-1;40448:9:144;;40235:228::o;40468:184::-;40520:77;40517:1;40510:88;40617:4;40614:1;40607:15;40641:4;40638:1;40631:15;40657:120;40697:1;40723;40713:35;;40728:18;;:::i;:::-;-1:-1:-1;40762:9:144;;40657:120::o;41430:583::-;41526:6;41579:2;41567:9;41558:7;41554:23;41550:32;41547:52;;;41595:1;41592;41585:12;41547:52;41628:2;41622:9;41670:2;41662:6;41658:15;41739:6;41727:10;41724:22;41703:18;41691:10;41688:34;41685:62;41682:88;;;41750:18;;:::i;:::-;41786:2;41779:22;41825:23;;41810:39;;41899:2;41884:18;;41871:32;41912:31;41871:32;41912:31;:::i;:::-;41971:2;41959:15;;41952:30;41963:6;41430:583;-1:-1:-1;;;41430:583:144:o;42018:508::-;42175:3;42206;42253:6;42175:3;42287:203;42301:4;42298:1;42295:11;42287:203;;;42365:13;;42351:28;;42402:4;42428:14;;;;42465:15;;;;42321:4;42314:12;42287:203;;;42291:3;;;42515:4;42510:3;42506:14;42499:21;;42018:508;;;;:::o;42531:253::-;42628:6;42681:2;42669:9;42660:7;42656:23;42652:32;42649:52;;;42697:1;42694;42687:12;42649:52;42720:58;42770:7;42759:9;42720:58;:::i;43113:135::-;43189:1;43182:5;43179:12;43169:46;;43195:18;;:::i;43253:198::-;43394:2;43379:18;;43406:39;43383:9;43427:6;43406:39;:::i;43853:245::-;43932:6;43940;43993:2;43981:9;43972:7;43968:23;43964:32;43961:52;;;44009:1;44006;43999:12;43961:52;-1:-1:-1;;44032:16:144;;44088:2;44073:18;;;44067:25;44032:16;;44067:25;;-1:-1:-1;43853:245:144:o;44103:204::-;44141:3;44177:4;44174:1;44170:12;44209:4;44206:1;44202:12;44244:3;44238:4;44234:14;44229:3;44226:23;44223:49;;;44252:18;;:::i;:::-;44288:13;;44103:204;-1:-1:-1;;;44103:204:144:o;45379:336::-;45448:6;45501:2;45489:9;45480:7;45476:23;45472:32;45469:52;;;45517:1;45514;45507:12;45469:52;45549:9;45543:16;45599:66;45592:5;45588:78;45581:5;45578:89;45568:117;;45681:1;45678;45671:12;45720:838;45782:3;45820:5;45814:12;45847:6;45842:3;45835:19;45873:4;45902:2;45897:3;45893:12;45886:19;;45939:2;45932:5;45928:14;45960:1;45970:563;45984:6;45981:1;45978:13;45970:563;;;46049:6;46043:13;46069:40;46105:3;46100:2;46094:9;46069:40;:::i;:::-;46153:11;;;46147:18;-1:-1:-1;;;;;46143:67:144;46129:12;;;46122:89;46234:4;46278:11;;;46272:18;46258:12;;;46251:40;46314:4;46358:11;;;46352:18;46338:12;;;46331:40;46394:4;46438:11;;;46432:18;46418:12;;;46411:40;46480:4;46471:14;;;;46508:15;;;;46006:1;45999:9;45970:563;;46563:1005;46633:3;46671:5;46665:12;46698:6;46693:3;46686:19;46724:4;46753:2;46748:3;46744:12;46737:19;;46790:2;46783:5;46779:14;46811:1;46821:722;46835:6;46832:1;46829:13;46821:722;;;46900:6;46894:13;46920:40;46956:3;46951:2;46945:9;46920:40;:::i;:::-;46999:11;;;46993:18;-1:-1:-1;;;;;47110:21:144;;;47096:12;;;47089:43;47155:4;47199:11;;;47193:18;47179:12;;;47172:40;47235:4;47279:11;;;47273:18;47259:12;;;47252:40;47315:4;47359:11;;;47353:18;47339:12;;;47332:40;47395:4;47443:11;;;47437:18;47433:27;47419:12;;;47412:49;47490:4;47481:14;;;;47518:15;;;;46857:1;46850:9;46821:722;;47695:435;47748:3;47786:5;47780:12;47813:6;47808:3;47801:19;47839:4;47868:2;47863:3;47859:12;47852:19;;47905:2;47898:5;47894:14;47926:1;47936:169;47950:6;47947:1;47944:13;47936:169;;;48011:13;;47999:26;;48045:12;;;;48080:15;;;;47972:1;47965:9;47936:169;;48135:1146;48204:3;48242:5;48236:12;48269:6;48264:3;48257:19;48295:4;48336:2;48331:3;48327:12;48361:11;48388;48381:18;;48438:6;48435:1;48431:14;48424:5;48420:26;48408:38;;48480:2;48473:5;48469:14;48501:1;48511:744;48525:6;48522:1;48519:13;48511:744;;;48596:5;48590:4;48586:16;48581:3;48574:29;48632:6;48626:13;48662:4;48698:2;48692:9;48686:4;48679:23;48749:2;48745;48741:11;48735:18;48766:49;48811:2;48805:4;48801:13;48787:12;48766:49;:::i;:::-;-1:-1:-1;48838:4:144;48883:11;;;48877:18;48862:13;;;48855:41;48919:4;48964:11;;;48958:18;48943:13;;;48936:41;49000:4;49045:11;;;49039:18;49077:13;;;49070:25;;;49116:59;49161:13;;;49039:18;49116:59;:::i;:::-;49233:12;;;;49108:67;-1:-1:-1;;;49198:15:144;;;;48547:1;48540:9;48511:744;;;-1:-1:-1;49271:4:144;;48135:1146;-1:-1:-1;;;;;;;48135:1146:144:o;49286:2953::-;49757:6;49746:9;49739:25;-1:-1:-1;;;;;49804:6:144;49800:55;49795:2;49784:9;49780:18;49773:83;49892:3;49887:2;49876:9;49872:18;49865:31;49720:4;49915:3;49953:6;49947:13;49997:3;49991;49980:9;49976:19;49969:32;50010:59;50065:2;50054:9;50050:18;50035:12;50029:19;-1:-1:-1;;;;;12122:54:144;12110:67;;12056:127;50010:59;50124:2;50110:12;50106:21;50100:28;50147:6;50162:54;50212:2;50201:9;50197:18;50181:14;-1:-1:-1;;;;;12122:54:144;12110:67;;12056:127;50162:54;50271:2;50257:12;50253:21;50247:28;50225:50;;50312:2;50306:3;50295:9;50291:19;50284:31;;50338:74;50407:3;50396:9;50392:19;50376:14;50338:74;:::i;:::-;50324:88;;50467:4;50453:12;50449:23;50443:30;50538:66;50526:9;50518:6;50514:22;50510:95;50504:3;50493:9;50489:19;50482:124;50629:69;50691:6;50675:14;50629:69;:::i;:::-;50615:83;;;50753:4;50739:12;50735:23;50729:30;50768:62;50825:3;50814:9;50810:19;50794:14;50768:62;:::i;:::-;;50891:3;50877:12;50873:22;50867:29;50861:3;50850:9;50846:19;50839:58;50958:4;50944:12;50940:23;50934:30;50928:3;50917:9;50913:19;50906:59;51026:4;51012:12;51008:23;51002:30;50996:3;50985:9;50981:19;50974:59;51052:6;51119:2;51105:12;51101:21;51095:28;51089:3;51078:9;51074:19;51067:57;51143:6;51210:2;51196:12;51192:21;51186:28;51180:3;51169:9;51165:19;51158:57;51276:2;51262:12;51258:21;51252:28;51246:3;51235:9;51231:19;51224:57;51330:2;51322:6;51318:15;51312:22;51290:44;;51343:56;51393:4;51382:9;51378:20;51362:14;47650:32;47639:44;47627:57;;47573:117;51343:56;51448:2;51436:15;;51430:22;47650:32;47639:44;51511:4;51496:20;;47627:57;51566:4;51554:17;;51548:24;51697:22;;;-1:-1:-1;51693:31:144;;;51673:18;;;51666:59;51548:24;;-1:-1:-1;;;51748:41:144;51701:6;51548:24;51748:41;:::i;:::-;51734:55;;51838:4;51830:6;51826:17;51820:24;51798:46;;51908:2;51896:9;51888:6;51884:22;51880:31;51875:2;51864:9;51860:18;51853:59;;;51932:41;51966:6;51950:14;51932:41;:::i;:::-;51921:52;;;;52020:9;52015:3;52011:19;52004:4;51993:9;51989:20;51982:49;52054:41;52091:3;52083:6;52054:41;:::i;:::-;52040:55;;52145:9;52137:6;52133:22;52126:4;52115:9;52111:20;52104:52;52173:60;52226:6;52218;52173:60;:::i;:::-;52165:68;49286:2953;-1:-1:-1;;;;;;;;49286:2953:144:o;52244:112::-;52276:1;52302;52292:35;;52307:18;;:::i;:::-;-1:-1:-1;52341:9:144;;52244:112::o;53837:331::-;53942:9;53953;53995:8;53983:10;53980:24;53977:44;;;54017:1;54014;54007:12;53977:44;54046:6;54036:8;54033:20;54030:40;;;54066:1;54063;54056:12;54030:40;-1:-1:-1;;54092:23:144;;;54137:25;;;;;-1:-1:-1;53837:331:144:o;56778:1309::-;57015:2;57067:21;;;57137:13;;57040:18;;;57159:22;;;56986:4;;57015:2;57200;;57218:18;;;;57259:15;;;56986:4;57302:759;57316:6;57313:1;57310:13;57302:759;;;57381:6;57375:13;57417:2;57411:9;57433:35;57465:2;57433:35;:::i;:::-;57481:15;;57535:11;;;57529:18;-1:-1:-1;;;;;57646:21:144;;;57632:12;;;57625:43;57712:11;;;57706:18;57702:27;;57688:12;;;57681:49;57753:4;57801:11;;;57795:18;57791:27;;;57777:12;;;57770:49;57842:4;57886:11;;;57880:18;57866:12;;;57859:40;57922:4;57966:11;;;57960:18;57946:12;;;57939:40;58008:4;57999:14;;;;58036:15;;;;57338:1;57331:9;57302:759;;58092:289;58267:6;58256:9;58249:25;58310:2;58305;58294:9;58290:18;58283:30;58230:4;58330:45;58371:2;58360:9;58356:18;58348:6;58330:45;:::i;58386:274::-;58515:3;58553:6;58547:13;58569:53;58615:6;58610:3;58603:4;58595:6;58591:17;58569:53;:::i;59229:277::-;59296:6;59349:2;59337:9;59328:7;59324:23;59320:32;59317:52;;;59365:1;59362;59355:12;59317:52;59397:9;59391:16;59450:5;59443:13;59436:21;59429:5;59426:32;59416:60;;59472:1;59469;59462:12",
    "linkReferences": {},
    "immutableReferences": {
      "39993": [
        {
          "start": 14329,
          "length": 32
        }
      ],
      "39995": [
        {
          "start": 14366,
          "length": 32
        }
      ],
      "39997": [
        {
          "start": 14287,
          "length": 32
        }
      ],
      "39999": [
        {
          "start": 9001,
          "length": 32
        },
        {
          "start": 16368,
          "length": 32
        }
      ],
      "40001": [
        {
          "start": 9111,
          "length": 32
        },
        {
          "start": 14861,
          "length": 32
        }
      ],
      "40003": [
        {
          "start": 3198,
          "length": 32
        },
        {
          "start": 16702,
          "length": 32
        }
      ],
      "40005": [
        {
          "start": 14243,
          "length": 32
        }
      ],
      "40007": [
        {
          "start": 14447,
          "length": 32
        }
      ],
      "40010": [
        {
          "start": 4767,
          "length": 32
        },
        {
          "start": 27714,
          "length": 32
        }
      ],
      "40012": [
        {
          "start": 27763,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": "fd9f1e10",
    "fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)": "e7acab24",
    "fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)": "87201b41",
    "fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)": "ed98a574",
    "fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))": "fb0f3ee1",
    "fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)": "b3a34c4c",
    "getCounter(address)": "f07ec373",
    "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))": "79df72bd",
    "getOrderStatus(bytes32)": "46423aa7",
    "incrementCounter()": "5b34b966",
    "information()": "f47b7740",
    "matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": "55944a42",
    "matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": "a8174404",
    "name()": "06fdde03",
    "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])": "88147732"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduitController\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BadContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadFraction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"BadSignatureV\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ConsiderationCriteriaResolverOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"considerationIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortfallAmount\",\"type\":\"uint256\"}],\"name\":\"ConsiderationNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CriteriaNotEnabledForItem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InexactFraction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientEtherSupplied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBasicOrderParameterEncoding\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"InvalidCallToConduit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCanceller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"InvalidConduit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFulfillmentComponentData\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"InvalidMsgValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNativeOfferItem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"InvalidRestrictedOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedFulfillmentOfferAndConsiderationComponents\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"MissingFulfillmentComponentOnAggregation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingOriginalConsiderationItems\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoReentrantCalls\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSpecifiedOrdersAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OfferAndConsiderationRequiredOnFulfillment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OfferCriteriaResolverOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderAlreadyFilled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderCriteriaResolverOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderIsCancelled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderPartiallyFilled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PartialFillsNotEnabledForOrder\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnresolvedConsiderationCriteria\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnresolvedOfferCriteria\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCounter\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"}],\"name\":\"CounterIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct SpentItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct ReceivedItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"}],\"name\":\"OrderValidated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderComponents[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint120\",\"name\":\"numerator\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"denominator\",\"type\":\"uint120\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedOrder\",\"name\":\"advancedOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"criteriaProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct CriteriaResolver[]\",\"name\":\"criteriaResolvers\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"fulfillAdvancedOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint120\",\"name\":\"numerator\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"denominator\",\"type\":\"uint120\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedOrder[]\",\"name\":\"advancedOrders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"criteriaProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct CriteriaResolver[]\",\"name\":\"criteriaResolvers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[][]\",\"name\":\"offerFulfillments\",\"type\":\"tuple[][]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[][]\",\"name\":\"considerationFulfillments\",\"type\":\"tuple[][]\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maximumFulfilled\",\"type\":\"uint256\"}],\"name\":\"fulfillAvailableAdvancedOrders\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"availableOrders\",\"type\":\"bool[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"internalType\":\"struct Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[][]\",\"name\":\"offerFulfillments\",\"type\":\"tuple[][]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[][]\",\"name\":\"considerationFulfillments\",\"type\":\"tuple[][]\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maximumFulfilled\",\"type\":\"uint256\"}],\"name\":\"fulfillAvailableOrders\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"availableOrders\",\"type\":\"bool[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"internalType\":\"struct Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"considerationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"considerationIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"considerationAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"offerIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum BasicOrderType\",\"name\":\"basicOrderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"offererConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalAdditionalRecipients\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct AdditionalRecipient[]\",\"name\":\"additionalRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct BasicOrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"}],\"name\":\"fulfillBasicOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"}],\"name\":\"fulfillOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"}],\"name\":\"getCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderComponents\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getOrderHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"getOrderStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCancelled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSize\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newCounter\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"information\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"conduitController\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint120\",\"name\":\"numerator\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"denominator\",\"type\":\"uint120\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedOrder[]\",\"name\":\"advancedOrders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"criteriaProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct CriteriaResolver[]\",\"name\":\"criteriaResolvers\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[]\",\"name\":\"offerComponents\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[]\",\"name\":\"considerationComponents\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Fulfillment[]\",\"name\":\"fulfillments\",\"type\":\"tuple[]\"}],\"name\":\"matchAdvancedOrders\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"internalType\":\"struct Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[]\",\"name\":\"offerComponents\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[]\",\"name\":\"considerationComponents\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Fulfillment[]\",\"name\":\"fulfillments\",\"type\":\"tuple[]\"}],\"name\":\"matchOrders\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"internalType\":\"struct Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"validated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"custom:coauthor\":\"d1ll0ntransmissions11\",\"custom:version\":\"1.1-reference\",\"errors\":{\"BadContractSignature()\":[{\"details\":\"Revert with an error when an EIP-1271 call to an account fails.\"}],\"BadFraction()\":[{\"details\":\"Revert with an error when supplying a fraction with a value of zero      for the numerator or denominator, or one where the numerator exceeds      the denominator.\"}],\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"BadSignatureV(uint8)\":[{\"details\":\"Revert with an error when a signature that does not contain a v      value of 27 or 28 has been supplied.\",\"params\":{\"v\":\"The invalid v value.\"}}],\"ConsiderationCriteriaResolverOutOfRange()\":[{\"details\":\"Revert with an error when providing a criteria resolver that refers      to an order with a consideration item that has not been supplied.\"}],\"ConsiderationNotMet(uint256,uint256,uint256)\":[{\"details\":\"Revert with an error if a consideration amount has not been fully      zeroed out after applying all fulfillments.\",\"params\":{\"considerationIndex\":\"The index of the consideration item on the                           order.\",\"orderIndex\":\"The index of the order with the consideration                           item with a shortfall.\",\"shortfallAmount\":\"The unfulfilled consideration amount.\"}}],\"CriteriaNotEnabledForItem()\":[{\"details\":\"Revert with an error when providing a criteria resolver that refers      to an order with an item that does not expect a criteria to be      resolved.\"}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"EtherTransferGenericFailure(address,uint256)\":[{\"details\":\"Revert with an error when an ether transfer reverts.\"}],\"InexactFraction()\":[{\"details\":\"Revert with an error when attempting to apply a fraction as part of      a partial fill that does not divide the target amount cleanly.\"}],\"InsufficientEtherSupplied()\":[{\"details\":\"Revert with an error when insufficient ether is supplied as part of      msg.value when fulfilling orders.\"}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidBasicOrderParameterEncoding()\":[{\"details\":\"Revert with an error when attempting to fill a basic order using      calldata not produced by default ABI encoding.\"}],\"InvalidCallToConduit(address)\":[{\"details\":\"Revert with an error when a call to a conduit fails with revert data      that is too expensive to return.\"}],\"InvalidCanceller()\":[{\"details\":\"Revert with an error when attempting to cancel an order as a caller      other than the indicated offerer or zone.\"}],\"InvalidConduit(bytes32,address)\":[{\"details\":\"Revert with an error when attempting to fill an order referencing an      invalid conduit (i.e. one that has not been deployed).\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"InvalidFulfillmentComponentData()\":[{\"details\":\"Revert with an error when an order or item index are out of range      or a fulfillment component does not match the type, token,      identifier, or conduit preference of the initial consideration item.\"}],\"InvalidMsgValue(uint256)\":[{\"details\":\"Revert with an error when a caller attempts to supply callvalue to a      non-payable basic order route or does not supply any callvalue to a      payable basic order route.\"}],\"InvalidNativeOfferItem()\":[{\"details\":\"Revert with an error when attempting to fulfill an order with an      offer for ETH outside of matching orders.\"}],\"InvalidProof()\":[{\"details\":\"Revert with an error when providing a criteria resolver that      contains an invalid proof with respect to the given item and      chosen identifier.\"}],\"InvalidRestrictedOrder(bytes32)\":[{\"details\":\"Revert with an error when attempting to fill an order that specifies      a restricted submitter as its order type when not submitted by      either the offerer or the order's zone or approved as valid by the      zone in question via a staticcall to `isValidOrder`.\",\"params\":{\"orderHash\":\"The order hash for the invalid restricted order.\"}}],\"InvalidSignature()\":[{\"details\":\"Revert with an error when a signer cannot be recovered from the      supplied signature.\"}],\"InvalidSigner()\":[{\"details\":\"Revert with an error when the signer recovered by the supplied      signature does not match the offerer or an allowed EIP-1271 signer      as specified by the offerer in the event they are a contract.\"}],\"InvalidTime()\":[{\"details\":\"Revert with an error when attempting to fill an order outside the      specified start time and end time.\"}],\"MismatchedFulfillmentOfferAndConsiderationComponents()\":[{\"details\":\"Revert with an error when the initial offer item named by a      fulfillment component does not match the type, token, identifier,      or conduit preference of the initial consideration item.\"}],\"MissingFulfillmentComponentOnAggregation(uint8)\":[{\"details\":\"Revert with an error when a fulfillment is provided that does not      declare at least one component as part of a call to fulfill      available orders.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"MissingOriginalConsiderationItems()\":[{\"details\":\"Revert with an error when an order is supplied for fulfillment with      a consideration array that is shorter than the original array.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"NoReentrantCalls()\":[{\"details\":\"Revert with an error when a caller attempts to reenter a protected      function.\"}],\"NoSpecifiedOrdersAvailable()\":[{\"details\":\"Revert with an error when attempting to fulfill any number of      available orders when none are fulfillable.\"}],\"OfferAndConsiderationRequiredOnFulfillment()\":[{\"details\":\"Revert with an error when a fulfillment is provided that does not      declare at least one offer component and at least one consideration      component.\"}],\"OfferCriteriaResolverOutOfRange()\":[{\"details\":\"Revert with an error when providing a criteria resolver that refers      to an order with an offer item that has not been supplied.\"}],\"OrderAlreadyFilled(bytes32)\":[{\"details\":\"Revert with an error when attempting to fill an order that has      already been fully filled.\",\"params\":{\"orderHash\":\"The order hash on which a fill was attempted.\"}}],\"OrderCriteriaResolverOutOfRange()\":[{\"details\":\"Revert with an error when providing a criteria resolver that refers      to an order that has not been supplied.\"}],\"OrderIsCancelled(bytes32)\":[{\"details\":\"Revert with an error when attempting to fill an order that has been      cancelled.\",\"params\":{\"orderHash\":\"The hash of the cancelled order.\"}}],\"OrderPartiallyFilled(bytes32)\":[{\"details\":\"Revert with an error when attempting to fill a basic order that has      been partially filled.\",\"params\":{\"orderHash\":\"The hash of the partially used order.\"}}],\"PartialFillsNotEnabledForOrder()\":[{\"details\":\"Revert with an error when a partial fill is attempted on an order      that does not specify partial fill support in its order type.\"}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnresolvedConsiderationCriteria()\":[{\"details\":\"Revert with an error if a consideration item still has unresolved      criteria after applying all criteria resolvers.\"}],\"UnresolvedOfferCriteria()\":[{\"details\":\"Revert with an error if an offer item still has unresolved criteria      after applying all criteria resolvers.\"}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{\"cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])\":{\"params\":{\"orders\":\"The orders to cancel.\"},\"returns\":{\"cancelled\":\"A boolean indicating whether the supplied orders have         been successfully cancelled.\"}},\"constructor\":{\"params\":{\"conduitController\":\"A contract that deploys conduits, or proxies                          that may optionally be used to transfer approved                          ERC20/721/1155 tokens.\"}},\"fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)\":{\"params\":{\"advancedOrder\":\"The order to fulfill along with the fraction                            of the order to attempt to fill. Note that                            both the offerer and the fulfiller must first                            approve this contract (or their proxy if                            indicated by the order) to transfer any                            relevant tokens on their behalf and that                            contracts must implement `onERC1155Received`                            to receive ERC1155 tokens as consideration.                            Also note that all offer and consideration                            components must have no remainder after                            multiplication of the respective amount with                            the supplied fraction for the partial fill to                            be considered valid.\",\"criteriaResolvers\":\"An array where each element contains a                            reference to a specific offer or                            consideration, a token identifier, and a proof                            that the supplied token identifier is                            contained in the merkle root held by the item                            in question's criteria element. Note that an                            empty criteria indicates that any                            (transferable) token identifier on the token                            in question is valid and that no associated                            proof needs to be supplied.\",\"fulfillerConduitKey\":\"A bytes32 value indicating what conduit, if                            any, to source the fulfiller's token approvals                            from. The zero hash signifies that no conduit                            should be used (and direct approvals set on                            Consideration).\",\"recipient\":\"The intended recipient for all received items,                            with `address(0)` indicating that the caller                            should receive the items.\"},\"returns\":{\"fulfilled\":\"A boolean indicating whether the order has been                   fulfilled.\"}},\"fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)\":{\"params\":{\"advancedOrders\":\"The orders to fulfill along with the                                  fraction of those orders to attempt to                                  fill. Note that both the offerer and the                                  fulfiller must first approve this                                  contract (or their proxy if indicated by                                  the order) to transfer any relevant                                  tokens on their behalf and that                                  contracts must implement                                  `onERC1155Received` in order to receive                                  ERC1155 tokens as consideration. Also                                  note that all offer and consideration                                  components must have no remainder after                                  multiplication of the respective amount                                  with the supplied fraction for an                                  order's partial fill amount to be                                  considered valid.\",\"considerationFulfillments\":\"An array of FulfillmentComponent arrays                                  indicating which consideration items to                                  attempt to aggregate when preparing                                  executions.\",\"criteriaResolvers\":\"An array where each element contains a                                  reference to a specific offer or                                  consideration, a token identifier, and a                                  proof that the supplied token identifier                                  is contained in the merkle root held by                                  the item in question's criteria element.                                  Note that an empty criteria indicates                                  that any (transferable) token                                  identifier on the token in question is                                  valid and that no associated proof needs                                  to be supplied.\",\"fulfillerConduitKey\":\"A bytes32 value indicating what conduit,                                  if any, to source the fulfiller's token                                  approvals from. The zero hash signifies                                  that no conduit should be used (and                                  direct approvals set on Consideration).\",\"maximumFulfilled\":\"The maximum number of orders to fulfill.\",\"offerFulfillments\":\"An array of FulfillmentComponent arrays                                  indicating which offer items to attempt                                  to aggregate when preparing executions.\"},\"returns\":{\"availableOrders\":\"An array of booleans indicating if each order                         with an index corresponding to the index of the                         returned boolean was fulfillable or not.\",\"executions\":\"     An array of elements indicating the sequence of                         transfers performed as part of matching the given                         orders.\"}},\"fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)\":{\"params\":{\"considerationFulfillments\":\"An array of FulfillmentComponent arrays                                  indicating which consideration items to                                  attempt to aggregate when preparing                                  executions.\",\"fulfillerConduitKey\":\"A bytes32 value indicating what conduit,                                  if any, to source the fulfiller's token                                  approvals from. The zero hash signifies                                  that no conduit should be used (and                                  direct approvals set on Consideration).\",\"maximumFulfilled\":\"The maximum number of orders to fulfill.\",\"offerFulfillments\":\"An array of FulfillmentComponent arrays                                  indicating which offer items to attempt                                  to aggregate when preparing executions.\",\"orders\":\"The orders to fulfill. Note that both                                  the offerer and the fulfiller must first                                  approve this contract (or the                                  corresponding conduit if indicated) to                                  transfer any relevant tokens on their                                  behalf and that contracts must implement                                  `onERC1155Received` to receive ERC1155                                  tokens as consideration.\"},\"returns\":{\"availableOrders\":\"An array of booleans indicating if each order                         with an index corresponding to the index of the                         returned boolean was fulfillable or not.\",\"executions\":\"     An array of elements indicating the sequence of                         transfers performed as part of matching the given                         orders.\"}},\"fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))\":{\"params\":{\"parameters\":\"Additional information on the fulfilled order. Note                   that the offerer and the fulfiller must first approve                   this contract (or their chosen conduit if indicated)                   before any tokens can be transferred. Also note that                   contract recipients of ERC1155 consideration items must                   implement `onERC1155Received` in order to receive those                   items.\"},\"returns\":{\"fulfilled\":\"A boolean indicating whether the order has been                   fulfilled.\"}},\"fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)\":{\"params\":{\"fulfillerConduitKey\":\"A bytes32 value indicating what conduit, if                            any, to source the fulfiller's token approvals                            from. The zero hash signifies that no conduit                            should be used (and direct approvals set on                            Consideration).\",\"order\":\"The order to fulfill. Note that both the                            offerer and the fulfiller must first approve                            this contract (or the corresponding conduit if                            indicated) to transfer any relevant tokens on                            their behalf and that contracts must implement                            `onERC1155Received` to receive ERC1155 tokens                            as consideration.\"},\"returns\":{\"fulfilled\":\"A boolean indicating whether the order has been                   fulfilled.\"}},\"getCounter(address)\":{\"params\":{\"offerer\":\"The offerer in question.\"},\"returns\":{\"counter\":\"The current counter.\"}},\"getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))\":{\"params\":{\"order\":\"The components of the order.\"},\"returns\":{\"orderHash\":\"the order hash.\"}},\"getOrderStatus(bytes32)\":{\"params\":{\"orderHash\":\"The order hash in question.\"},\"returns\":{\"isCancelled\":\"A boolean indicating whether the order in question                     has been cancelled.\",\"isValidated\":\"A boolean indicating whether the order in question                     has been validated (i.e. previously approved or                     partially filled).\",\"totalFilled\":\"The total portion of the order that has been filled                     (i.e. the \\\"numerator\\\").\",\"totalSize\":\"  The total size of the order that is either filled or                     unfilled (i.e. the \\\"denominator\\\").\"}},\"incrementCounter()\":{\"returns\":{\"newCounter\":\"The new counter.\"}},\"information()\":{\"returns\":{\"conduitController\":\"The conduit Controller set for this contract.\",\"domainSeparator\":\"  The domain separator for this contract.\",\"version\":\"          The contract version.\"}},\"matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])\":{\"params\":{\"advancedOrders\":\"The advanced orders to match. Note that both the                          offerer and fulfiller on each order must first                          approve this contract (or their proxy if                          indicated by the order) to transfer any relevant                          tokens on their behalf and each consideration                          recipient must implement `onERC1155Received` in                          order to receive ERC1155 tokens. Also note that                          the offer and consideration components for each                          order must have no remainder after multiplying                          the respective amount with the supplied fraction                          in order for the group of partial fills to be                          considered valid.\",\"criteriaResolvers\":\"An array where each element contains a reference                          to a specific order as well as that order's                          offer or consideration, a token identifier, and                          a proof that the supplied token identifier is                          contained in the order's merkle root. Note that                          an empty root indicates that any (transferable)                          token identifier is valid and that no associated                          proof needs to be supplied.\",\"fulfillments\":\"An array of elements allocating offer components                          to consideration components. Note that each                          consideration component must be fully met in                          order for the match operation to be valid.\"},\"returns\":{\"executions\":\"An array of elements indicating the sequence of                    transfers performed as part of matching the given                    orders.\"}},\"matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])\":{\"params\":{\"fulfillments\":\"An array of elements allocating offer components                          to consideration components. Note that each                          consideration component must be fully met in                          order for the match operation to be valid.\",\"orders\":\"The orders to match. Note that both the offerer                          and fulfiller on each order must first approve                          this contract (or their proxy if indicated by                          the order) to transfer any relevant tokens on                          their behalf and each consideration recipient                          must implement `onERC1155Received` in order to                          receive ERC1155 tokens.\"},\"returns\":{\"executions\":\"An array of elements indicating the sequence of                    transfers performed as part of matching the given                    orders.\"}},\"name()\":{\"returns\":{\"contractName\":\"The name of this contract.\"}},\"validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])\":{\"params\":{\"orders\":\"The orders to validate.\"},\"returns\":{\"validated\":\"A boolean indicating whether the supplied orders have         been successfully validated.\"}}},\"title\":\"ReferenceConsideration\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])\":{\"notice\":\"Cancel an arbitrary number of orders. Note that only the offerer         or the zone of a given order may cancel it.\"},\"constructor\":{\"notice\":\"Derive and set hashes, reference chainId, and associated domain         separator during deployment.\"},\"fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)\":{\"notice\":\"Fill an order, fully or partially, with an arbitrary number of         items for offer and consideration alongside criteria resolvers         containing specific token identifiers and associated proofs.\"},\"fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)\":{\"notice\":\"Attempt to fill a group of orders, fully or partially, with an         arbitrary number of items for offer and consideration per order         alongside criteria resolvers containing specific token         identifiers and associated proofs. Any order that is not         currently active, has already been fully filled, or has been         cancelled will be omitted. Remaining offer and consideration         items will then be aggregated where possible as indicated by the         supplied offer and consideration component arrays and aggregated         items will be transferred to the fulfiller or to each intended         recipient, respectively. Note that a failing item transfer or an         issue with order formatting will cause the entire batch to fail.\"},\"fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)\":{\"notice\":\"Attempt to fill a group of orders, each with an arbitrary number         of items for offer and consideration. Any order that is not         currently active, has already been fully filled, or has been         cancelled will be omitted. Remaining offer and consideration         items will then be aggregated where possible as indicated by the         supplied offer and consideration component arrays and aggregated         items will be transferred to the fulfiller or to each intended         recipient, respectively. Note that a failing item transfer or an         issue with order formatting will cause the entire batch to fail.         Note that this function does not support criteria-based orders or         partial filling of orders (though filling the remainder of a         partially-filled order is supported).\"},\"fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))\":{\"notice\":\"Fulfill an order offering an ERC20, ERC721, or ERC1155 item by         supplying Ether (or other native tokens), ERC20 tokens, an ERC721         item, or an ERC1155 item as consideration. Six permutations are         supported: Native token to ERC721, Native token to ERC1155, ERC20         to ERC721, ERC20 to ERC1155, ERC721 to ERC20, and ERC1155 to         ERC20 (with native tokens supplied as msg.value). For an order to         be eligible for fulfillment via this method, it must contain a         single offer item (though that item may have a greater amount if         the item is not an ERC721). An arbitrary number of \\\"additional         recipients\\\" may also be supplied which will each receive native         tokens or ERC20 items from the fulfiller as consideration. Refer         to the documentation for a more comprehensive summary of how to         utilize with this method and what orders are compatible with it.\"},\"fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)\":{\"notice\":\"Fulfill an order with an arbitrary number of items for offer and         consideration. Note that this function does not support         criteria-based orders or partial filling of orders (though         filling the remainder of a partially-filled order is supported).\"},\"getCounter(address)\":{\"notice\":\"Retrieve the current counter for a given offerer.\"},\"getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))\":{\"notice\":\"Retrieve the order hash for a given order.\"},\"getOrderStatus(bytes32)\":{\"notice\":\"Retrieve the status of a given order by hash, including whether         the order has been cancelled or validated and the fraction of the         order that has been filled.\"},\"incrementCounter()\":{\"notice\":\"Cancel all orders from a given offerer with a given zone in bulk         by incrementing a counter. Note that only the offerer may         increment the counter.\"},\"information()\":{\"notice\":\"Retrieve configuration information for this contract.\"},\"matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])\":{\"notice\":\"Match an arbitrary number of full or partial orders, each with an         arbitrary number of items for offer and consideration, supplying         criteria resolvers containing specific token identifiers and         associated proofs as well as fulfillments allocating offer         components to consideration components.\"},\"matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])\":{\"notice\":\"Match an arbitrary number of orders, each with an arbitrary         number of items for offer and consideration along with a set of         fulfillments allocating offer components to consideration         components. Note that this function does not support         criteria-based or partial filling of orders (though filling the         remainder of a partially-filled order is supported).\"},\"name()\":{\"notice\":\"Retrieve the name of this contract.\"},\"validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])\":{\"notice\":\"Validate an arbitrary number of orders, thereby registering them         as valid and allowing the fulfiller to skip verification. Note         that anyone can validate a signed order but only the offerer can         validate an order without supplying a signature.\"}},\"notice\":\"Consideration is a generalized ETH/ERC20/ERC721/ERC1155 marketplace.         It minimizes external calls to the greatest extent possible and         provides lightweight methods for common routes as well as more         flexible methods for composing advanced orders or groups of orders.         Each order contains an arbitrary number of items that may be spent         (the \\\"offer\\\") along with an arbitrary number of items that must be         received back by the indicated recipients (the \\\"consideration\\\").\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"reference/ReferenceConsideration.sol\":\"ReferenceConsideration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[\":@rari-capital/solmate/=lib/solmate/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x1a84850bbff4b820573334c70ee0797462f20fd8c9b86fdebeacc85ecb1963a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://322f8198eefa578cbb9e3a116d484903d1dc38ddcdc6cce66ae386739a4bbb3e\",\"dweb:/ipfs/QmRrCMFNSuzUHtEE4tuJWwXrT1UpLTpkauuQ7CTZ7zA8RH\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xe3e87c74dd79c59293e49b7236cc7befdc19886bb79af5fe53208b1772fd24f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b4721002090245fcf5066229a1af02797405e31f05c7174340e06b50474c076\",\"dweb:/ipfs/QmT8XtMhRfvFNsDeEmoqrwGkCYbuxp4wHk3VhiVkuFUJnD\"]},\"contracts/interfaces/AbridgedTokenInterfaces.sol\":{\"keccak256\":\"0xcaad2f32d94abe3f28ef0e8f0e67e10020e508b212e4f2b92d68d9e043d84970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fbd78cac34a9572df31c01b23b1683d4bcb2f105b560aa055405f31eae7573c\",\"dweb:/ipfs/QmcX9ei9qckKeHpepYkiLQvcrMwuzXNzf8Cc1iqcJVWn5D\"]},\"contracts/interfaces/AmountDerivationErrors.sol\":{\"keccak256\":\"0xd7296f4958294009bd696a8034ed5b1c6562f753f3767869e83c20a9203e21e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34adcf58fdcd88234ab19f671b34007cc8badac09e08d20874bfa9a0cf2334c\",\"dweb:/ipfs/QmZDkz5Enfzxr8oM31wYWYRaYtfJXRhCjMT6AHqfoyAz8C\"]},\"contracts/interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d\",\"dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF\"]},\"contracts/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0x628e23ec7e820e8ac59c0999211bb022bb5c5581a5bc6bd39465d6419d7d85b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5ebbf33264fb98536f50b5fae8e0bf31d19759939c823c7626bf9d693200d0b\",\"dweb:/ipfs/QmdBV7voV8WBcjsuJZAStW4UEAAhPPLv8C3S77BiVpucDa\"]},\"contracts/interfaces/ConsiderationEventsAndErrors.sol\":{\"keccak256\":\"0xe31a7bc05a79d64fbbe1a02af1c71d44e95fcdd92b6240d3636622e681b6982b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d297eb426422b314a2db487ddd8a953f88682ec56543509b054c57cf1e1f7310\",\"dweb:/ipfs/QmaRPxBA9pZjQhDjVmcAk1xxPUA5cKbF1EHNYVZTD2w6Pz\"]},\"contracts/interfaces/ConsiderationInterface.sol\":{\"keccak256\":\"0x1c535d369a2eb5eb3a62783c770870274a07fbdc7c20d6f7dc75decc75930688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85c960a378c3f425a1653dd8d978f2915203dfd16ec9932e4dd7b4963c17240\",\"dweb:/ipfs/QmYADawT4zzRFkkEteLTHpXdp9nrVW7ag7CvKmvQS5kYHB\"]},\"contracts/interfaces/CriteriaResolutionErrors.sol\":{\"keccak256\":\"0x7f94afdbf5a346aee951f7c2b93baa67a5e01980d496604bce70994bee727b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffbb4b927c4943b1fbf74cfb1eb6cedb6e48f800c93a0fe9f70718df2da1dcc5\",\"dweb:/ipfs/Qmcnb1m9Qxa5yPJThdSSjefeS2USTz7P69WaZdQNqBnXnj\"]},\"contracts/interfaces/EIP1271Interface.sol\":{\"keccak256\":\"0x7b508919429572c3a59b27b8fd9d06c560ec0b7189bc22ad73f8c293d705745f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5fad9fc0e971254146df164542f3811e068ecd7c20e02894f60413a32b13a60\",\"dweb:/ipfs/QmWRCAjQkPXosDRx5Y62QKqWvnST4edZf9yZeU4GaKSgyX\"]},\"contracts/interfaces/FulfillmentApplicationErrors.sol\":{\"keccak256\":\"0xa9001846591c94e90ee09ac70f978d7e20fa794fabe83d877019736b22a00754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ed27d3dfd1970dd65d9e0db2349c5dad7bdb4ab6ce50a4d767e5895af198a2c\",\"dweb:/ipfs/QmcssChobp4rue7SwikvXDxjikdJGqrxeC6e7NxqE9hPph\"]},\"contracts/interfaces/ReentrancyErrors.sol\":{\"keccak256\":\"0xd8825124dc105b07e1d2c857f219a30092f02f14b56905ae44e503ead6d276c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0e5dfd036484867fe6a11bfa5bd698ab2dd8e4a39cec6a39c8dc4f1260e9f7c\",\"dweb:/ipfs/Qmb1qvvBwD65eSp9dTMLvB67nYJJiRYFoqcHhCmYHo6Cz2\"]},\"contracts/interfaces/SeaportInterface.sol\":{\"keccak256\":\"0xafd741364b4a4114ed388dfe831ee340a9b7aca91e4f902967bbd6ce4ce99b0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d04e931cb16ea11fce95ca27057dbc848e7cdfe732a8c5f14caa5aba87bbe9\",\"dweb:/ipfs/QmexvH3DRi2o8qDzpqZueX18L1ffxeBJzN2E34dZYUN6t1\"]},\"contracts/interfaces/SignatureVerificationErrors.sol\":{\"keccak256\":\"0xd0f5b26469ba6cd303e5ea9b53cf6b7c25cb00918097eb59a263678b51197381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a51ca924d919f0a2eddd6e666f6bbe30f71b1bd6f6c9b0e36e67df85aebcd57\",\"dweb:/ipfs/QmTb72fphyawGeM8S6q2SjWu94wf6bFSJDN2KAj12jQr2E\"]},\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0x0a89101400c263654f920aad668249ce67eaebd1af7d5582d38456c8384fc962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5368eff6e44d333bdd50fb135720a232975e775423f19113b1316414fb20bfa9\",\"dweb:/ipfs/QmYQsYqdfX5JXqRkF5RdiSDJErwyY5GZU1txRMx4taBcZE\"]},\"contracts/interfaces/ZoneInteractionErrors.sol\":{\"keccak256\":\"0x966590f8c6e0df523168b933cd73d0c063902f52a0853f4766cbcf977e3164f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59a52227d0ec78d2cccb4a2925fa18d3c51a5af22b70a360b5b92b106161b239\",\"dweb:/ipfs/QmXzB8VxHWGt49fhbqgswcQdyPB4bYJp6EcuPJPvuZFinu\"]},\"contracts/interfaces/ZoneInterface.sol\":{\"keccak256\":\"0x5ac01fb62293f1645220471e4a00888d2549d4de3c179e46c044b8dab90d3c66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://274526a97bbfff48e902207f6546021524ac6ae67869a5f1a47fe164c9131d41\",\"dweb:/ipfs/QmTHhioVQbB4EHAhyqWX9KPRV25LvARrPy731KiV9DPzsG\"]},\"contracts/lib/ConsiderationConstants.sol\":{\"keccak256\":\"0xa932563f00b8cbf6e403247d8633211c581904481e67b64f085346c456ae5e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0921621f5e4b3ed8e99b583503678b43040499a6ce534a72a451b7b29c5bbc8\",\"dweb:/ipfs/QmeimHoxDtNCxcJUTgcVD77d9Bw3qLA2pb19vKUTHTCyUo\"]},\"contracts/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0xe78faea2c9d9322ca557af34e8d576fe21dab9c995f0657d34ba6c4e94fe9c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ebef28980d88b7707013dd98658b22d4494755f59d0b93463dba1c377a62bbb\",\"dweb:/ipfs/QmRdfKbcuCYVB3rpTbS6peRY4XnhBxQRewbxpttA4Jv9ie\"]},\"contracts/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896\",\"dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM\"]},\"reference/ReferenceConsideration.sol\":{\"keccak256\":\"0x2a57d908660bf306ae27fd81ddbf692296538d89bac64b61af4a3c07a62a3043\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a382c38b3b0832fd69f3e024a80688afd705adf9f2cb779b897cd201f4f9604\",\"dweb:/ipfs/Qmf77gXL4g8yCfwMRcPHHyo8EqHiFcNBZRZpyekfwstTwG\"]},\"reference/lib/ReferenceAmountDeriver.sol\":{\"keccak256\":\"0x69635172093d3e09028daca262308168d000849e778beeb001528632686654d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d598469a456283d5f9ea4cbd20d8eda268fb494db8e5b35c8815c7847e4dff04\",\"dweb:/ipfs/QmTm6T3r8QFj1bZ4RkU7faVwoeHW2TijpjmN558fkwzPr5\"]},\"reference/lib/ReferenceAssertions.sol\":{\"keccak256\":\"0xb37f2d982ffd31ef77457b94de6e3e5fc0f2912d9c7e72887b90d2413d76e3fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25c594940123629df1e5f847e0060634ed9daf8594e8a9e23278940f319d6089\",\"dweb:/ipfs/QmRoZvHsFNeU5dkbvaR27T92yyn3zM4JQCnjAn64kxNbos\"]},\"reference/lib/ReferenceBasicOrderFulfiller.sol\":{\"keccak256\":\"0x7e8bd0095541d16b0362ecd994390e2c866029aa5abe474a84fe34c40f64187a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf453028e38ac2ac5d4bad8fec14ec02a839cda9efbc374c1a80b02cd841c201\",\"dweb:/ipfs/QmfGWbMyXihMW5cWiZmoLZbKgLhmaMfbYFkzVPnTjCKugg\"]},\"reference/lib/ReferenceConsiderationBase.sol\":{\"keccak256\":\"0x1b12065d972034693b6fc5aed6957ca690770de2d4973f0a3fafecf30e295fc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61b65b89bfffcec77694b49d0c6d67185b61d80646876f721052bb22cbc4fab4\",\"dweb:/ipfs/QmRrnqH7HsBsycJc7Dt7Rq4ccuTuS5a5CAh6cbSBPahdbR\"]},\"reference/lib/ReferenceConsiderationStructs.sol\":{\"keccak256\":\"0x90b4a7f09a8707eb8498cd9f211f5b1f8c777e6aed50aafd06f9019c08249a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b0dfc5ed1cda16ee72ed27c90d013260f7216d5d729644cbaca61e5d97b358a\",\"dweb:/ipfs/QmYaStKNn9nUE7NCZZJAjVtid7K7WdTfPUFVQsufcKSR5n\"]},\"reference/lib/ReferenceCounterManager.sol\":{\"keccak256\":\"0x6e21002f4bab1e47fa57031170e750034d2efb02f095d85c906e05b22669b6a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58bcb4c5eaa35592edb453e742220ff0751d730b49314c75598578637bffa08c\",\"dweb:/ipfs/QmNhiu122d1Sy2k1YAiyou1cBXPcYQPTuo1oQDmBEowq6v\"]},\"reference/lib/ReferenceCriteriaResolution.sol\":{\"keccak256\":\"0xbff2020b200072bd4b1d89db58af5b6644a1031d9c185ccd16e03d12a87bfd0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7aa5a3ea7f1e9e18d18db3db31087a1f5555f7173464134cc9d75298f5d1b4fd\",\"dweb:/ipfs/QmT8nwJGBbT7fY5mae2TZ6bRKQJkzDxU9cwotsW6tYYdNF\"]},\"reference/lib/ReferenceExecutor.sol\":{\"keccak256\":\"0x1050824e61c1a04bd68d9da1c76e9b9863bbf7dc5c44ab23f83d2326d77f5ac4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b7dd0cdbc6962ea11919e57ea8fbecb0c300b88a57ca963964f52f11516df33\",\"dweb:/ipfs/QmZTHRSm6JXxauWQ7g8SxZo7LtZnMwxFWZ48djgKMyEeiy\"]},\"reference/lib/ReferenceFulfillmentApplier.sol\":{\"keccak256\":\"0xc1655ec8115e26d5a935ea28b0a515b4b13b274423e6ebcdbde66e8b41a1e8f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8f26dd98d936d04973e7d790e783382838b71d6fffa97efa7313f721a9999c1\",\"dweb:/ipfs/QmRq4wymo52op7pUFggn97TFzxiRmuMDqAsCA8ZuU6VZ7T\"]},\"reference/lib/ReferenceGettersAndDerivers.sol\":{\"keccak256\":\"0x2ca23002a38c6ee022f117f00fcac9afb336396b80eb2678e01b7e7d98f1f84b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d7c613c8d816aa2aae5058ccadba5c3833663f4bd696830e3562f2dda08d44d\",\"dweb:/ipfs/QmSzYXwHqWqBZdHjsvfKkJN3kbLRbPc3d9qajJrBpHJnWP\"]},\"reference/lib/ReferenceOrderCombiner.sol\":{\"keccak256\":\"0x3faf7ae2f235fb1a9d0e2a66e1384a2efdeca63c98dc69c08d52ff78814a2483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d75784e91ebc2fb8afc103936da64c6db9efae2dc8f3ee1c5a6e75e24ad067cf\",\"dweb:/ipfs/QmcNm2N3BWuvjYWU8CD7DEPaDf5zh9smLV2N66ozLAUYZP\"]},\"reference/lib/ReferenceOrderFulfiller.sol\":{\"keccak256\":\"0xab2586d668c3db51fa37629f936050ef84018150906a28472c97dfc610630997\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2be15b383c391c6ebbb8e43895fca17afaa17431cfeffabdcc1ee5545f3ae65f\",\"dweb:/ipfs/QmPf8AAFhdFsES2sTGEw1mFB9hymqABGjiohbjgd297AyB\"]},\"reference/lib/ReferenceOrderValidator.sol\":{\"keccak256\":\"0xde56c8696c21a26f46f09dc074d0a43e76f2e460a806497432adbef309c05e9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f421a3e8e5c972daa27e912198f7e2455bb570fb9a06e579b72e40b1a8f25605\",\"dweb:/ipfs/Qmc5ztwvRLFzSXC4zSre8oGgsv6DEtinJ1wv9QRq4PR8Rw\"]},\"reference/lib/ReferenceReentrancyGuard.sol\":{\"keccak256\":\"0x6f8e3dd562d91ef738c430d362cc43ad1d761c0697ada0a00baee01efd914d82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d47e3c54ba4dda7dcd1f39a5a52e107a5aafb6d83ab28173288dbd5f63413929\",\"dweb:/ipfs/QmP8AefAzJXoida5pR83prcXRooFpkWtMcWW276X9EzbMu\"]},\"reference/lib/ReferenceSignatureVerification.sol\":{\"keccak256\":\"0x02ee622b301469a02a3383c97c607cce097e9d479f8cc99b54e30a7b9b804009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b079e36936cf85dab730c1ea8d3813175f174f052c75cce7f9175ef22cd62a4\",\"dweb:/ipfs/QmNiZsk883TJTtavjZn8PA5oakktZYkpR4qmQ1mxaE6Ymm\"]},\"reference/lib/ReferenceTokenTransferrer.sol\":{\"keccak256\":\"0x629a39ae2211a58b7e950c301dbb24df46503d26f22b8a3478ed87af642fa817\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511aa09454445cb6419f5380474bf0b43ef679cf789def4d08266217814a5e6d\",\"dweb:/ipfs/QmP55MRgSYE8iUVTeUz5XADHyjzXF8PUTr8MNWXTBsMv8T\"]},\"reference/lib/ReferenceVerifiers.sol\":{\"keccak256\":\"0xc5a4046818ba4f5b27d091c4fb1a03603060138363c976a192a72af029575598\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fce07497094c31026dea70081c147073a7fcde41b3bb93badef010751950f01\",\"dweb:/ipfs/QmPwUF6PDTvh4e1v2ufE6kSnwsY2bj6Ghh8sYfeRvrNxMK\"]},\"reference/lib/ReferenceZoneInteraction.sol\":{\"keccak256\":\"0x862ed5afd959f98e33ccaddb8f6383503429ee2c52543c4c52bf3c8fe94adf5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc7cbfe823d53a5d3f310c61d2c2a6f90b7dea86d4089005f8682eb8d62dce63\",\"dweb:/ipfs/Qmc1ar3azuksPdk9Gqz6s3pANSzhmcdaW3WGNGZhzxdRZA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "conduitController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadContractSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadFraction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BadReturnValueFromERC20OnTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "BadSignatureV"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ConsiderationCriteriaResolverOutOfRange"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "considerationIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortfallAmount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ConsiderationNotMet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CriteriaNotEnabledForItem"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "identifiers",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "type": "error",
          "name": "ERC1155BatchTransferGenericFailure"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "EtherTransferGenericFailure"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InexactFraction"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientEtherSupplied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Invalid1155BatchTransferEncoding"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidBasicOrderParameterEncoding"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "conduit",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidCallToConduit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCanceller"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "conduit",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidConduit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidERC721TransferAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidFulfillmentComponentData"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidMsgValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNativeOfferItem"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProof"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "InvalidRestrictedOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSigner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MismatchedFulfillmentOfferAndConsiderationComponents"
        },
        {
          "inputs": [
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "MissingFulfillmentComponentOnAggregation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MissingItemAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MissingOriginalConsiderationItems"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NoContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoReentrantCalls"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSpecifiedOrdersAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OfferAndConsiderationRequiredOnFulfillment"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OfferCriteriaResolverOutOfRange"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "OrderAlreadyFilled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OrderCriteriaResolverOutOfRange"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "OrderIsCancelled"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "OrderPartiallyFilled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PartialFillsNotEnabledForOrder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TokenTransferGenericFailure"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnresolvedConsiderationCriteria"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnresolvedOfferCriteria"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnusedItemParameters"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newCounter",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CounterIncremented",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OrderCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct SpentItem[]",
              "name": "offer",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct ReceivedItem[]",
              "name": "consideration",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderFulfilled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OrderValidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderComponents[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel",
          "outputs": [
            {
              "internalType": "bool",
              "name": "cancelled",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct AdvancedOrder",
              "name": "advancedOrder",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderParameters",
                  "name": "parameters",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalOriginalConsiderationItems",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint120",
                  "name": "numerator",
                  "type": "uint120"
                },
                {
                  "internalType": "uint120",
                  "name": "denominator",
                  "type": "uint120"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct CriteriaResolver[]",
              "name": "criteriaResolvers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "criteriaProof",
                  "type": "bytes32[]"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fulfillAdvancedOrder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "fulfilled",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct AdvancedOrder[]",
              "name": "advancedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderParameters",
                  "name": "parameters",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalOriginalConsiderationItems",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint120",
                  "name": "numerator",
                  "type": "uint120"
                },
                {
                  "internalType": "uint120",
                  "name": "denominator",
                  "type": "uint120"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct CriteriaResolver[]",
              "name": "criteriaResolvers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "criteriaProof",
                  "type": "bytes32[]"
                }
              ]
            },
            {
              "internalType": "struct FulfillmentComponent[][]",
              "name": "offerFulfillments",
              "type": "tuple[][]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct FulfillmentComponent[][]",
              "name": "considerationFulfillments",
              "type": "tuple[][]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maximumFulfilled",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fulfillAvailableAdvancedOrders",
          "outputs": [
            {
              "internalType": "bool[]",
              "name": "availableOrders",
              "type": "bool[]"
            },
            {
              "internalType": "struct Execution[]",
              "name": "executions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ReceivedItem",
                  "name": "item",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Order[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderParameters",
                  "name": "parameters",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalOriginalConsiderationItems",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct FulfillmentComponent[][]",
              "name": "offerFulfillments",
              "type": "tuple[][]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct FulfillmentComponent[][]",
              "name": "considerationFulfillments",
              "type": "tuple[][]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maximumFulfilled",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fulfillAvailableOrders",
          "outputs": [
            {
              "internalType": "bool[]",
              "name": "availableOrders",
              "type": "bool[]"
            },
            {
              "internalType": "struct Execution[]",
              "name": "executions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ReceivedItem",
                  "name": "item",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BasicOrderParameters",
              "name": "parameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "considerationToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "considerationIdentifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "considerationAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "offerIdentifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "offerAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "enum BasicOrderType",
                  "name": "basicOrderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "offererConduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "fulfillerConduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalAdditionalRecipients",
                  "type": "uint256"
                },
                {
                  "internalType": "struct AdditionalRecipient[]",
                  "name": "additionalRecipients",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fulfillBasicOrder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "fulfilled",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderParameters",
                  "name": "parameters",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalOriginalConsiderationItems",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fulfillOrder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "fulfilled",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderComponents",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOrderHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOrderStatus",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidated",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isCancelled",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalFilled",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSize",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newCounter",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "information",
          "outputs": [
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "conduitController",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct AdvancedOrder[]",
              "name": "advancedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderParameters",
                  "name": "parameters",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalOriginalConsiderationItems",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint120",
                  "name": "numerator",
                  "type": "uint120"
                },
                {
                  "internalType": "uint120",
                  "name": "denominator",
                  "type": "uint120"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct CriteriaResolver[]",
              "name": "criteriaResolvers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Side",
                  "name": "side",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "criteriaProof",
                  "type": "bytes32[]"
                }
              ]
            },
            {
              "internalType": "struct Fulfillment[]",
              "name": "fulfillments",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct FulfillmentComponent[]",
                  "name": "offerComponents",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "itemIndex",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct FulfillmentComponent[]",
                  "name": "considerationComponents",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "itemIndex",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "matchAdvancedOrders",
          "outputs": [
            {
              "internalType": "struct Execution[]",
              "name": "executions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ReceivedItem",
                  "name": "item",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Order[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderParameters",
                  "name": "parameters",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalOriginalConsiderationItems",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct Fulfillment[]",
              "name": "fulfillments",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct FulfillmentComponent[]",
                  "name": "offerComponents",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "itemIndex",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct FulfillmentComponent[]",
                  "name": "considerationComponents",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "itemIndex",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "matchOrders",
          "outputs": [
            {
              "internalType": "struct Execution[]",
              "name": "executions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ReceivedItem",
                  "name": "item",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "contractName",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Order[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderParameters",
                  "name": "parameters",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalOriginalConsiderationItems",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "validated",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": {
            "params": {
              "orders": "The orders to cancel."
            },
            "returns": {
              "cancelled": "A boolean indicating whether the supplied orders have         been successfully cancelled."
            }
          },
          "constructor": {
            "params": {
              "conduitController": "A contract that deploys conduits, or proxies                          that may optionally be used to transfer approved                          ERC20/721/1155 tokens."
            }
          },
          "fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)": {
            "params": {
              "advancedOrder": "The order to fulfill along with the fraction                            of the order to attempt to fill. Note that                            both the offerer and the fulfiller must first                            approve this contract (or their proxy if                            indicated by the order) to transfer any                            relevant tokens on their behalf and that                            contracts must implement `onERC1155Received`                            to receive ERC1155 tokens as consideration.                            Also note that all offer and consideration                            components must have no remainder after                            multiplication of the respective amount with                            the supplied fraction for the partial fill to                            be considered valid.",
              "criteriaResolvers": "An array where each element contains a                            reference to a specific offer or                            consideration, a token identifier, and a proof                            that the supplied token identifier is                            contained in the merkle root held by the item                            in question's criteria element. Note that an                            empty criteria indicates that any                            (transferable) token identifier on the token                            in question is valid and that no associated                            proof needs to be supplied.",
              "fulfillerConduitKey": "A bytes32 value indicating what conduit, if                            any, to source the fulfiller's token approvals                            from. The zero hash signifies that no conduit                            should be used (and direct approvals set on                            Consideration).",
              "recipient": "The intended recipient for all received items,                            with `address(0)` indicating that the caller                            should receive the items."
            },
            "returns": {
              "fulfilled": "A boolean indicating whether the order has been                   fulfilled."
            }
          },
          "fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)": {
            "params": {
              "advancedOrders": "The orders to fulfill along with the                                  fraction of those orders to attempt to                                  fill. Note that both the offerer and the                                  fulfiller must first approve this                                  contract (or their proxy if indicated by                                  the order) to transfer any relevant                                  tokens on their behalf and that                                  contracts must implement                                  `onERC1155Received` in order to receive                                  ERC1155 tokens as consideration. Also                                  note that all offer and consideration                                  components must have no remainder after                                  multiplication of the respective amount                                  with the supplied fraction for an                                  order's partial fill amount to be                                  considered valid.",
              "considerationFulfillments": "An array of FulfillmentComponent arrays                                  indicating which consideration items to                                  attempt to aggregate when preparing                                  executions.",
              "criteriaResolvers": "An array where each element contains a                                  reference to a specific offer or                                  consideration, a token identifier, and a                                  proof that the supplied token identifier                                  is contained in the merkle root held by                                  the item in question's criteria element.                                  Note that an empty criteria indicates                                  that any (transferable) token                                  identifier on the token in question is                                  valid and that no associated proof needs                                  to be supplied.",
              "fulfillerConduitKey": "A bytes32 value indicating what conduit,                                  if any, to source the fulfiller's token                                  approvals from. The zero hash signifies                                  that no conduit should be used (and                                  direct approvals set on Consideration).",
              "maximumFulfilled": "The maximum number of orders to fulfill.",
              "offerFulfillments": "An array of FulfillmentComponent arrays                                  indicating which offer items to attempt                                  to aggregate when preparing executions."
            },
            "returns": {
              "availableOrders": "An array of booleans indicating if each order                         with an index corresponding to the index of the                         returned boolean was fulfillable or not.",
              "executions": "     An array of elements indicating the sequence of                         transfers performed as part of matching the given                         orders."
            }
          },
          "fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)": {
            "params": {
              "considerationFulfillments": "An array of FulfillmentComponent arrays                                  indicating which consideration items to                                  attempt to aggregate when preparing                                  executions.",
              "fulfillerConduitKey": "A bytes32 value indicating what conduit,                                  if any, to source the fulfiller's token                                  approvals from. The zero hash signifies                                  that no conduit should be used (and                                  direct approvals set on Consideration).",
              "maximumFulfilled": "The maximum number of orders to fulfill.",
              "offerFulfillments": "An array of FulfillmentComponent arrays                                  indicating which offer items to attempt                                  to aggregate when preparing executions.",
              "orders": "The orders to fulfill. Note that both                                  the offerer and the fulfiller must first                                  approve this contract (or the                                  corresponding conduit if indicated) to                                  transfer any relevant tokens on their                                  behalf and that contracts must implement                                  `onERC1155Received` to receive ERC1155                                  tokens as consideration."
            },
            "returns": {
              "availableOrders": "An array of booleans indicating if each order                         with an index corresponding to the index of the                         returned boolean was fulfillable or not.",
              "executions": "     An array of elements indicating the sequence of                         transfers performed as part of matching the given                         orders."
            }
          },
          "fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))": {
            "params": {
              "parameters": "Additional information on the fulfilled order. Note                   that the offerer and the fulfiller must first approve                   this contract (or their chosen conduit if indicated)                   before any tokens can be transferred. Also note that                   contract recipients of ERC1155 consideration items must                   implement `onERC1155Received` in order to receive those                   items."
            },
            "returns": {
              "fulfilled": "A boolean indicating whether the order has been                   fulfilled."
            }
          },
          "fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)": {
            "params": {
              "fulfillerConduitKey": "A bytes32 value indicating what conduit, if                            any, to source the fulfiller's token approvals                            from. The zero hash signifies that no conduit                            should be used (and direct approvals set on                            Consideration).",
              "order": "The order to fulfill. Note that both the                            offerer and the fulfiller must first approve                            this contract (or the corresponding conduit if                            indicated) to transfer any relevant tokens on                            their behalf and that contracts must implement                            `onERC1155Received` to receive ERC1155 tokens                            as consideration."
            },
            "returns": {
              "fulfilled": "A boolean indicating whether the order has been                   fulfilled."
            }
          },
          "getCounter(address)": {
            "params": {
              "offerer": "The offerer in question."
            },
            "returns": {
              "counter": "The current counter."
            }
          },
          "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))": {
            "params": {
              "order": "The components of the order."
            },
            "returns": {
              "orderHash": "the order hash."
            }
          },
          "getOrderStatus(bytes32)": {
            "params": {
              "orderHash": "The order hash in question."
            },
            "returns": {
              "isCancelled": "A boolean indicating whether the order in question                     has been cancelled.",
              "isValidated": "A boolean indicating whether the order in question                     has been validated (i.e. previously approved or                     partially filled).",
              "totalFilled": "The total portion of the order that has been filled                     (i.e. the \"numerator\").",
              "totalSize": "  The total size of the order that is either filled or                     unfilled (i.e. the \"denominator\")."
            }
          },
          "incrementCounter()": {
            "returns": {
              "newCounter": "The new counter."
            }
          },
          "information()": {
            "returns": {
              "conduitController": "The conduit Controller set for this contract.",
              "domainSeparator": "  The domain separator for this contract.",
              "version": "          The contract version."
            }
          },
          "matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": {
            "params": {
              "advancedOrders": "The advanced orders to match. Note that both the                          offerer and fulfiller on each order must first                          approve this contract (or their proxy if                          indicated by the order) to transfer any relevant                          tokens on their behalf and each consideration                          recipient must implement `onERC1155Received` in                          order to receive ERC1155 tokens. Also note that                          the offer and consideration components for each                          order must have no remainder after multiplying                          the respective amount with the supplied fraction                          in order for the group of partial fills to be                          considered valid.",
              "criteriaResolvers": "An array where each element contains a reference                          to a specific order as well as that order's                          offer or consideration, a token identifier, and                          a proof that the supplied token identifier is                          contained in the order's merkle root. Note that                          an empty root indicates that any (transferable)                          token identifier is valid and that no associated                          proof needs to be supplied.",
              "fulfillments": "An array of elements allocating offer components                          to consideration components. Note that each                          consideration component must be fully met in                          order for the match operation to be valid."
            },
            "returns": {
              "executions": "An array of elements indicating the sequence of                    transfers performed as part of matching the given                    orders."
            }
          },
          "matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": {
            "params": {
              "fulfillments": "An array of elements allocating offer components                          to consideration components. Note that each                          consideration component must be fully met in                          order for the match operation to be valid.",
              "orders": "The orders to match. Note that both the offerer                          and fulfiller on each order must first approve                          this contract (or their proxy if indicated by                          the order) to transfer any relevant tokens on                          their behalf and each consideration recipient                          must implement `onERC1155Received` in order to                          receive ERC1155 tokens."
            },
            "returns": {
              "executions": "An array of elements indicating the sequence of                    transfers performed as part of matching the given                    orders."
            }
          },
          "name()": {
            "returns": {
              "contractName": "The name of this contract."
            }
          },
          "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])": {
            "params": {
              "orders": "The orders to validate."
            },
            "returns": {
              "validated": "A boolean indicating whether the supplied orders have         been successfully validated."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": {
            "notice": "Cancel an arbitrary number of orders. Note that only the offerer         or the zone of a given order may cancel it."
          },
          "constructor": {
            "notice": "Derive and set hashes, reference chainId, and associated domain         separator during deployment."
          },
          "fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)": {
            "notice": "Fill an order, fully or partially, with an arbitrary number of         items for offer and consideration alongside criteria resolvers         containing specific token identifiers and associated proofs."
          },
          "fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)": {
            "notice": "Attempt to fill a group of orders, fully or partially, with an         arbitrary number of items for offer and consideration per order         alongside criteria resolvers containing specific token         identifiers and associated proofs. Any order that is not         currently active, has already been fully filled, or has been         cancelled will be omitted. Remaining offer and consideration         items will then be aggregated where possible as indicated by the         supplied offer and consideration component arrays and aggregated         items will be transferred to the fulfiller or to each intended         recipient, respectively. Note that a failing item transfer or an         issue with order formatting will cause the entire batch to fail."
          },
          "fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)": {
            "notice": "Attempt to fill a group of orders, each with an arbitrary number         of items for offer and consideration. Any order that is not         currently active, has already been fully filled, or has been         cancelled will be omitted. Remaining offer and consideration         items will then be aggregated where possible as indicated by the         supplied offer and consideration component arrays and aggregated         items will be transferred to the fulfiller or to each intended         recipient, respectively. Note that a failing item transfer or an         issue with order formatting will cause the entire batch to fail.         Note that this function does not support criteria-based orders or         partial filling of orders (though filling the remainder of a         partially-filled order is supported)."
          },
          "fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))": {
            "notice": "Fulfill an order offering an ERC20, ERC721, or ERC1155 item by         supplying Ether (or other native tokens), ERC20 tokens, an ERC721         item, or an ERC1155 item as consideration. Six permutations are         supported: Native token to ERC721, Native token to ERC1155, ERC20         to ERC721, ERC20 to ERC1155, ERC721 to ERC20, and ERC1155 to         ERC20 (with native tokens supplied as msg.value). For an order to         be eligible for fulfillment via this method, it must contain a         single offer item (though that item may have a greater amount if         the item is not an ERC721). An arbitrary number of \"additional         recipients\" may also be supplied which will each receive native         tokens or ERC20 items from the fulfiller as consideration. Refer         to the documentation for a more comprehensive summary of how to         utilize with this method and what orders are compatible with it."
          },
          "fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)": {
            "notice": "Fulfill an order with an arbitrary number of items for offer and         consideration. Note that this function does not support         criteria-based orders or partial filling of orders (though         filling the remainder of a partially-filled order is supported)."
          },
          "getCounter(address)": {
            "notice": "Retrieve the current counter for a given offerer."
          },
          "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))": {
            "notice": "Retrieve the order hash for a given order."
          },
          "getOrderStatus(bytes32)": {
            "notice": "Retrieve the status of a given order by hash, including whether         the order has been cancelled or validated and the fraction of the         order that has been filled."
          },
          "incrementCounter()": {
            "notice": "Cancel all orders from a given offerer with a given zone in bulk         by incrementing a counter. Note that only the offerer may         increment the counter."
          },
          "information()": {
            "notice": "Retrieve configuration information for this contract."
          },
          "matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": {
            "notice": "Match an arbitrary number of full or partial orders, each with an         arbitrary number of items for offer and consideration, supplying         criteria resolvers containing specific token identifiers and         associated proofs as well as fulfillments allocating offer         components to consideration components."
          },
          "matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": {
            "notice": "Match an arbitrary number of orders, each with an arbitrary         number of items for offer and consideration along with a set of         fulfillments allocating offer components to consideration         components. Note that this function does not support         criteria-based or partial filling of orders (though filling the         remainder of a partially-filled order is supported)."
          },
          "name()": {
            "notice": "Retrieve the name of this contract."
          },
          "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])": {
            "notice": "Validate an arbitrary number of orders, thereby registering them         as valid and allowing the fulfiller to skip verification. Note         that anyone can validate a signed order but only the offerer can         validate an order without supplying a signature."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@rari-capital/solmate/=lib/solmate/",
        ":contracts/=contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 19066
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "reference/ReferenceConsideration.sol": "ReferenceConsideration"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/conduit/lib/ConduitEnums.sol": {
        "keccak256": "0x1a84850bbff4b820573334c70ee0797462f20fd8c9b86fdebeacc85ecb1963a6",
        "urls": [
          "bzz-raw://322f8198eefa578cbb9e3a116d484903d1dc38ddcdc6cce66ae386739a4bbb3e",
          "dweb:/ipfs/QmRrCMFNSuzUHtEE4tuJWwXrT1UpLTpkauuQ7CTZ7zA8RH"
        ],
        "license": "MIT"
      },
      "contracts/conduit/lib/ConduitStructs.sol": {
        "keccak256": "0xe3e87c74dd79c59293e49b7236cc7befdc19886bb79af5fe53208b1772fd24f9",
        "urls": [
          "bzz-raw://7b4721002090245fcf5066229a1af02797405e31f05c7174340e06b50474c076",
          "dweb:/ipfs/QmT8XtMhRfvFNsDeEmoqrwGkCYbuxp4wHk3VhiVkuFUJnD"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/AbridgedTokenInterfaces.sol": {
        "keccak256": "0xcaad2f32d94abe3f28ef0e8f0e67e10020e508b212e4f2b92d68d9e043d84970",
        "urls": [
          "bzz-raw://5fbd78cac34a9572df31c01b23b1683d4bcb2f105b560aa055405f31eae7573c",
          "dweb:/ipfs/QmcX9ei9qckKeHpepYkiLQvcrMwuzXNzf8Cc1iqcJVWn5D"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/AmountDerivationErrors.sol": {
        "keccak256": "0xd7296f4958294009bd696a8034ed5b1c6562f753f3767869e83c20a9203e21e0",
        "urls": [
          "bzz-raw://b34adcf58fdcd88234ab19f671b34007cc8badac09e08d20874bfa9a0cf2334c",
          "dweb:/ipfs/QmZDkz5Enfzxr8oM31wYWYRaYtfJXRhCjMT6AHqfoyAz8C"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ConduitControllerInterface.sol": {
        "keccak256": "0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388",
        "urls": [
          "bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d",
          "dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "keccak256": "0x628e23ec7e820e8ac59c0999211bb022bb5c5581a5bc6bd39465d6419d7d85b5",
        "urls": [
          "bzz-raw://b5ebbf33264fb98536f50b5fae8e0bf31d19759939c823c7626bf9d693200d0b",
          "dweb:/ipfs/QmdBV7voV8WBcjsuJZAStW4UEAAhPPLv8C3S77BiVpucDa"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ConsiderationEventsAndErrors.sol": {
        "keccak256": "0xe31a7bc05a79d64fbbe1a02af1c71d44e95fcdd92b6240d3636622e681b6982b",
        "urls": [
          "bzz-raw://d297eb426422b314a2db487ddd8a953f88682ec56543509b054c57cf1e1f7310",
          "dweb:/ipfs/QmaRPxBA9pZjQhDjVmcAk1xxPUA5cKbF1EHNYVZTD2w6Pz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ConsiderationInterface.sol": {
        "keccak256": "0x1c535d369a2eb5eb3a62783c770870274a07fbdc7c20d6f7dc75decc75930688",
        "urls": [
          "bzz-raw://b85c960a378c3f425a1653dd8d978f2915203dfd16ec9932e4dd7b4963c17240",
          "dweb:/ipfs/QmYADawT4zzRFkkEteLTHpXdp9nrVW7ag7CvKmvQS5kYHB"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/CriteriaResolutionErrors.sol": {
        "keccak256": "0x7f94afdbf5a346aee951f7c2b93baa67a5e01980d496604bce70994bee727b13",
        "urls": [
          "bzz-raw://ffbb4b927c4943b1fbf74cfb1eb6cedb6e48f800c93a0fe9f70718df2da1dcc5",
          "dweb:/ipfs/Qmcnb1m9Qxa5yPJThdSSjefeS2USTz7P69WaZdQNqBnXnj"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/EIP1271Interface.sol": {
        "keccak256": "0x7b508919429572c3a59b27b8fd9d06c560ec0b7189bc22ad73f8c293d705745f",
        "urls": [
          "bzz-raw://e5fad9fc0e971254146df164542f3811e068ecd7c20e02894f60413a32b13a60",
          "dweb:/ipfs/QmWRCAjQkPXosDRx5Y62QKqWvnST4edZf9yZeU4GaKSgyX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/FulfillmentApplicationErrors.sol": {
        "keccak256": "0xa9001846591c94e90ee09ac70f978d7e20fa794fabe83d877019736b22a00754",
        "urls": [
          "bzz-raw://7ed27d3dfd1970dd65d9e0db2349c5dad7bdb4ab6ce50a4d767e5895af198a2c",
          "dweb:/ipfs/QmcssChobp4rue7SwikvXDxjikdJGqrxeC6e7NxqE9hPph"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ReentrancyErrors.sol": {
        "keccak256": "0xd8825124dc105b07e1d2c857f219a30092f02f14b56905ae44e503ead6d276c8",
        "urls": [
          "bzz-raw://f0e5dfd036484867fe6a11bfa5bd698ab2dd8e4a39cec6a39c8dc4f1260e9f7c",
          "dweb:/ipfs/Qmb1qvvBwD65eSp9dTMLvB67nYJJiRYFoqcHhCmYHo6Cz2"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/SeaportInterface.sol": {
        "keccak256": "0xafd741364b4a4114ed388dfe831ee340a9b7aca91e4f902967bbd6ce4ce99b0f",
        "urls": [
          "bzz-raw://f9d04e931cb16ea11fce95ca27057dbc848e7cdfe732a8c5f14caa5aba87bbe9",
          "dweb:/ipfs/QmexvH3DRi2o8qDzpqZueX18L1ffxeBJzN2E34dZYUN6t1"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/SignatureVerificationErrors.sol": {
        "keccak256": "0xd0f5b26469ba6cd303e5ea9b53cf6b7c25cb00918097eb59a263678b51197381",
        "urls": [
          "bzz-raw://0a51ca924d919f0a2eddd6e666f6bbe30f71b1bd6f6c9b0e36e67df85aebcd57",
          "dweb:/ipfs/QmTb72fphyawGeM8S6q2SjWu94wf6bFSJDN2KAj12jQr2E"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "keccak256": "0x0a89101400c263654f920aad668249ce67eaebd1af7d5582d38456c8384fc962",
        "urls": [
          "bzz-raw://5368eff6e44d333bdd50fb135720a232975e775423f19113b1316414fb20bfa9",
          "dweb:/ipfs/QmYQsYqdfX5JXqRkF5RdiSDJErwyY5GZU1txRMx4taBcZE"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ZoneInteractionErrors.sol": {
        "keccak256": "0x966590f8c6e0df523168b933cd73d0c063902f52a0853f4766cbcf977e3164f8",
        "urls": [
          "bzz-raw://59a52227d0ec78d2cccb4a2925fa18d3c51a5af22b70a360b5b92b106161b239",
          "dweb:/ipfs/QmXzB8VxHWGt49fhbqgswcQdyPB4bYJp6EcuPJPvuZFinu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ZoneInterface.sol": {
        "keccak256": "0x5ac01fb62293f1645220471e4a00888d2549d4de3c179e46c044b8dab90d3c66",
        "urls": [
          "bzz-raw://274526a97bbfff48e902207f6546021524ac6ae67869a5f1a47fe164c9131d41",
          "dweb:/ipfs/QmTHhioVQbB4EHAhyqWX9KPRV25LvARrPy731KiV9DPzsG"
        ],
        "license": "MIT"
      },
      "contracts/lib/ConsiderationConstants.sol": {
        "keccak256": "0xa932563f00b8cbf6e403247d8633211c581904481e67b64f085346c456ae5e80",
        "urls": [
          "bzz-raw://b0921621f5e4b3ed8e99b583503678b43040499a6ce534a72a451b7b29c5bbc8",
          "dweb:/ipfs/QmeimHoxDtNCxcJUTgcVD77d9Bw3qLA2pb19vKUTHTCyUo"
        ],
        "license": "MIT"
      },
      "contracts/lib/ConsiderationEnums.sol": {
        "keccak256": "0xe78faea2c9d9322ca557af34e8d576fe21dab9c995f0657d34ba6c4e94fe9c0f",
        "urls": [
          "bzz-raw://6ebef28980d88b7707013dd98658b22d4494755f59d0b93463dba1c377a62bbb",
          "dweb:/ipfs/QmRdfKbcuCYVB3rpTbS6peRY4XnhBxQRewbxpttA4Jv9ie"
        ],
        "license": "MIT"
      },
      "contracts/lib/ConsiderationStructs.sol": {
        "keccak256": "0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234",
        "urls": [
          "bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896",
          "dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM"
        ],
        "license": "MIT"
      },
      "reference/ReferenceConsideration.sol": {
        "keccak256": "0x2a57d908660bf306ae27fd81ddbf692296538d89bac64b61af4a3c07a62a3043",
        "urls": [
          "bzz-raw://9a382c38b3b0832fd69f3e024a80688afd705adf9f2cb779b897cd201f4f9604",
          "dweb:/ipfs/Qmf77gXL4g8yCfwMRcPHHyo8EqHiFcNBZRZpyekfwstTwG"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceAmountDeriver.sol": {
        "keccak256": "0x69635172093d3e09028daca262308168d000849e778beeb001528632686654d3",
        "urls": [
          "bzz-raw://d598469a456283d5f9ea4cbd20d8eda268fb494db8e5b35c8815c7847e4dff04",
          "dweb:/ipfs/QmTm6T3r8QFj1bZ4RkU7faVwoeHW2TijpjmN558fkwzPr5"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceAssertions.sol": {
        "keccak256": "0xb37f2d982ffd31ef77457b94de6e3e5fc0f2912d9c7e72887b90d2413d76e3fb",
        "urls": [
          "bzz-raw://25c594940123629df1e5f847e0060634ed9daf8594e8a9e23278940f319d6089",
          "dweb:/ipfs/QmRoZvHsFNeU5dkbvaR27T92yyn3zM4JQCnjAn64kxNbos"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceBasicOrderFulfiller.sol": {
        "keccak256": "0x7e8bd0095541d16b0362ecd994390e2c866029aa5abe474a84fe34c40f64187a",
        "urls": [
          "bzz-raw://bf453028e38ac2ac5d4bad8fec14ec02a839cda9efbc374c1a80b02cd841c201",
          "dweb:/ipfs/QmfGWbMyXihMW5cWiZmoLZbKgLhmaMfbYFkzVPnTjCKugg"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceConsiderationBase.sol": {
        "keccak256": "0x1b12065d972034693b6fc5aed6957ca690770de2d4973f0a3fafecf30e295fc3",
        "urls": [
          "bzz-raw://61b65b89bfffcec77694b49d0c6d67185b61d80646876f721052bb22cbc4fab4",
          "dweb:/ipfs/QmRrnqH7HsBsycJc7Dt7Rq4ccuTuS5a5CAh6cbSBPahdbR"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceConsiderationStructs.sol": {
        "keccak256": "0x90b4a7f09a8707eb8498cd9f211f5b1f8c777e6aed50aafd06f9019c08249a4a",
        "urls": [
          "bzz-raw://3b0dfc5ed1cda16ee72ed27c90d013260f7216d5d729644cbaca61e5d97b358a",
          "dweb:/ipfs/QmYaStKNn9nUE7NCZZJAjVtid7K7WdTfPUFVQsufcKSR5n"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceCounterManager.sol": {
        "keccak256": "0x6e21002f4bab1e47fa57031170e750034d2efb02f095d85c906e05b22669b6a2",
        "urls": [
          "bzz-raw://58bcb4c5eaa35592edb453e742220ff0751d730b49314c75598578637bffa08c",
          "dweb:/ipfs/QmNhiu122d1Sy2k1YAiyou1cBXPcYQPTuo1oQDmBEowq6v"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceCriteriaResolution.sol": {
        "keccak256": "0xbff2020b200072bd4b1d89db58af5b6644a1031d9c185ccd16e03d12a87bfd0e",
        "urls": [
          "bzz-raw://7aa5a3ea7f1e9e18d18db3db31087a1f5555f7173464134cc9d75298f5d1b4fd",
          "dweb:/ipfs/QmT8nwJGBbT7fY5mae2TZ6bRKQJkzDxU9cwotsW6tYYdNF"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceExecutor.sol": {
        "keccak256": "0x1050824e61c1a04bd68d9da1c76e9b9863bbf7dc5c44ab23f83d2326d77f5ac4",
        "urls": [
          "bzz-raw://3b7dd0cdbc6962ea11919e57ea8fbecb0c300b88a57ca963964f52f11516df33",
          "dweb:/ipfs/QmZTHRSm6JXxauWQ7g8SxZo7LtZnMwxFWZ48djgKMyEeiy"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceFulfillmentApplier.sol": {
        "keccak256": "0xc1655ec8115e26d5a935ea28b0a515b4b13b274423e6ebcdbde66e8b41a1e8f9",
        "urls": [
          "bzz-raw://e8f26dd98d936d04973e7d790e783382838b71d6fffa97efa7313f721a9999c1",
          "dweb:/ipfs/QmRq4wymo52op7pUFggn97TFzxiRmuMDqAsCA8ZuU6VZ7T"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceGettersAndDerivers.sol": {
        "keccak256": "0x2ca23002a38c6ee022f117f00fcac9afb336396b80eb2678e01b7e7d98f1f84b",
        "urls": [
          "bzz-raw://8d7c613c8d816aa2aae5058ccadba5c3833663f4bd696830e3562f2dda08d44d",
          "dweb:/ipfs/QmSzYXwHqWqBZdHjsvfKkJN3kbLRbPc3d9qajJrBpHJnWP"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceOrderCombiner.sol": {
        "keccak256": "0x3faf7ae2f235fb1a9d0e2a66e1384a2efdeca63c98dc69c08d52ff78814a2483",
        "urls": [
          "bzz-raw://d75784e91ebc2fb8afc103936da64c6db9efae2dc8f3ee1c5a6e75e24ad067cf",
          "dweb:/ipfs/QmcNm2N3BWuvjYWU8CD7DEPaDf5zh9smLV2N66ozLAUYZP"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceOrderFulfiller.sol": {
        "keccak256": "0xab2586d668c3db51fa37629f936050ef84018150906a28472c97dfc610630997",
        "urls": [
          "bzz-raw://2be15b383c391c6ebbb8e43895fca17afaa17431cfeffabdcc1ee5545f3ae65f",
          "dweb:/ipfs/QmPf8AAFhdFsES2sTGEw1mFB9hymqABGjiohbjgd297AyB"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceOrderValidator.sol": {
        "keccak256": "0xde56c8696c21a26f46f09dc074d0a43e76f2e460a806497432adbef309c05e9c",
        "urls": [
          "bzz-raw://f421a3e8e5c972daa27e912198f7e2455bb570fb9a06e579b72e40b1a8f25605",
          "dweb:/ipfs/Qmc5ztwvRLFzSXC4zSre8oGgsv6DEtinJ1wv9QRq4PR8Rw"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceReentrancyGuard.sol": {
        "keccak256": "0x6f8e3dd562d91ef738c430d362cc43ad1d761c0697ada0a00baee01efd914d82",
        "urls": [
          "bzz-raw://d47e3c54ba4dda7dcd1f39a5a52e107a5aafb6d83ab28173288dbd5f63413929",
          "dweb:/ipfs/QmP8AefAzJXoida5pR83prcXRooFpkWtMcWW276X9EzbMu"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceSignatureVerification.sol": {
        "keccak256": "0x02ee622b301469a02a3383c97c607cce097e9d479f8cc99b54e30a7b9b804009",
        "urls": [
          "bzz-raw://5b079e36936cf85dab730c1ea8d3813175f174f052c75cce7f9175ef22cd62a4",
          "dweb:/ipfs/QmNiZsk883TJTtavjZn8PA5oakktZYkpR4qmQ1mxaE6Ymm"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceTokenTransferrer.sol": {
        "keccak256": "0x629a39ae2211a58b7e950c301dbb24df46503d26f22b8a3478ed87af642fa817",
        "urls": [
          "bzz-raw://511aa09454445cb6419f5380474bf0b43ef679cf789def4d08266217814a5e6d",
          "dweb:/ipfs/QmP55MRgSYE8iUVTeUz5XADHyjzXF8PUTr8MNWXTBsMv8T"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceVerifiers.sol": {
        "keccak256": "0xc5a4046818ba4f5b27d091c4fb1a03603060138363c976a192a72af029575598",
        "urls": [
          "bzz-raw://7fce07497094c31026dea70081c147073a7fcde41b3bb93badef010751950f01",
          "dweb:/ipfs/QmPwUF6PDTvh4e1v2ufE6kSnwsY2bj6Ghh8sYfeRvrNxMK"
        ],
        "license": "MIT"
      },
      "reference/lib/ReferenceZoneInteraction.sol": {
        "keccak256": "0x862ed5afd959f98e33ccaddb8f6383503429ee2c52543c4c52bf3c8fe94adf5e",
        "urls": [
          "bzz-raw://fc7cbfe823d53a5d3f310c61d2c2a6f90b7dea86d4089005f8682eb8d62dce63",
          "dweb:/ipfs/Qmc1ar3azuksPdk9Gqz6s3pANSzhmcdaW3WGNGZhzxdRZA"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "reference/ReferenceConsideration.sol",
    "id": 36830,
    "exportedSymbols": {
      "AccumulatorStruct": [
        40312
      ],
      "AdvancedOrder": [
        5148
      ],
      "BasicOrderParameters": [
        5097
      ],
      "ConsiderationInterface": [
        2309
      ],
      "CriteriaResolver": [
        5170
      ],
      "Execution": [
        5192
      ],
      "Fulfillment": [
        5179
      ],
      "FulfillmentComponent": [
        5184
      ],
      "Order": [
        5136
      ],
      "OrderComponents": [
        5009
      ],
      "OrderParameters": [
        5130
      ],
      "OrderStatus": [
        5157
      ],
      "OrderToExecute": [
        40294
      ],
      "ReferenceConsideration": [
        36829
      ],
      "ReferenceOrderCombiner": [
        44034
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:29104:84",
    "nodes": [
      {
        "id": 36330,
        "nodeType": "PragmaDirective",
        "src": "32:23:84",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 36332,
        "nodeType": "ImportDirective",
        "src": "57:93:84",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ConsiderationInterface.sol",
        "file": "contracts/interfaces/ConsiderationInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36830,
        "sourceUnit": 2310,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36331,
              "name": "ConsiderationInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2309,
              "src": "70:22:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36343,
        "nodeType": "ImportDirective",
        "src": "152:251:84",
        "nodes": [],
        "absolutePath": "contracts/lib/ConsiderationStructs.sol",
        "file": "contracts/lib/ConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36830,
        "sourceUnit": 5193,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36333,
              "name": "OrderComponents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5009,
              "src": "165:15:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36334,
              "name": "BasicOrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5097,
              "src": "186:20:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36335,
              "name": "OrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5130,
              "src": "212:15:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36336,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5136,
              "src": "233:5:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36337,
              "name": "AdvancedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5148,
              "src": "244:13:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36338,
              "name": "OrderStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5157,
              "src": "263:11:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36339,
              "name": "CriteriaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5170,
              "src": "280:16:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36340,
              "name": "Fulfillment",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5179,
              "src": "302:11:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36341,
              "name": "FulfillmentComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5184,
              "src": "319:20:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36342,
              "name": "Execution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5192,
              "src": "345:9:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36345,
        "nodeType": "ImportDirective",
        "src": "405:74:84",
        "nodes": [],
        "absolutePath": "reference/lib/ReferenceOrderCombiner.sol",
        "file": "./lib/ReferenceOrderCombiner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36830,
        "sourceUnit": 44035,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36344,
              "name": "ReferenceOrderCombiner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44034,
              "src": "414:22:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36348,
        "nodeType": "ImportDirective",
        "src": "481:100:84",
        "nodes": [],
        "absolutePath": "reference/lib/ReferenceConsiderationStructs.sol",
        "file": "./lib/ReferenceConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36830,
        "sourceUnit": 40313,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36346,
              "name": "OrderToExecute",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40294,
              "src": "494:14:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36347,
              "name": "AccumulatorStruct",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40312,
              "src": "514:17:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36829,
        "nodeType": "ContractDefinition",
        "src": "1276:27859:84",
        "nodes": [
          {
            "id": 36363,
            "nodeType": "FunctionDefinition",
            "src": "1731:95:84",
            "nodes": [],
            "body": {
              "id": 36362,
              "nodeType": "Block",
              "src": "1824:2:84",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 36354,
              "nodeType": "StructuredDocumentation",
              "src": "1372:354:84",
              "text": " @notice Derive and set hashes, reference chainId, and associated domain\n         separator during deployment.\n @param conduitController A contract that deploys conduits, or proxies\n                          that may optionally be used to transfer approved\n                          ERC20/721/1155 tokens."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 36359,
                    "name": "conduitController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36356,
                    "src": "1801:17:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 36360,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 36358,
                  "name": "ReferenceOrderCombiner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44034,
                  "src": "1778:22:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "1778:41:84"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 36357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36356,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "1751:17:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36363,
                  "src": "1743:25:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:27:84"
            },
            "returnParameters": {
              "id": 36361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1824:0:84"
            },
            "scope": 36829,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36384,
            "nodeType": "FunctionDefinition",
            "src": "3507:315:84",
            "nodes": [],
            "body": {
              "id": 36383,
              "nodeType": "Block",
              "src": "3703:119:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36377,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36375,
                      "src": "3762:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36379,
                          "name": "parameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36367,
                          "src": "3804:10:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BasicOrderParameters_$5097_calldata_ptr",
                            "typeString": "struct BasicOrderParameters calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_BasicOrderParameters_$5097_calldata_ptr",
                            "typeString": "struct BasicOrderParameters calldata"
                          }
                        ],
                        "id": 36378,
                        "name": "_validateAndFulfillBasicOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39282,
                        "src": "3774:29:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BasicOrderParameters_$5097_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct BasicOrderParameters calldata) returns (bool)"
                        }
                      },
                      "id": 36380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3774:41:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3762:53:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36382,
                  "nodeType": "ExpressionStatement",
                  "src": "3762:53:84"
                }
              ]
            },
            "baseFunctions": [
              2107
            ],
            "documentation": {
              "id": 36364,
              "nodeType": "StructuredDocumentation",
              "src": "1832:1670:84",
              "text": " @notice Fulfill an order offering an ERC20, ERC721, or ERC1155 item by\n         supplying Ether (or other native tokens), ERC20 tokens, an ERC721\n         item, or an ERC1155 item as consideration. Six permutations are\n         supported: Native token to ERC721, Native token to ERC1155, ERC20\n         to ERC721, ERC20 to ERC1155, ERC721 to ERC20, and ERC1155 to\n         ERC20 (with native tokens supplied as msg.value). For an order to\n         be eligible for fulfillment via this method, it must contain a\n         single offer item (though that item may have a greater amount if\n         the item is not an ERC721). An arbitrary number of \"additional\n         recipients\" may also be supplied which will each receive native\n         tokens or ERC20 items from the fulfiller as consideration. Refer\n         to the documentation for a more comprehensive summary of how to\n         utilize with this method and what orders are compatible with it.\n @param parameters Additional information on the fulfilled order. Note\n                   that the offerer and the fulfiller must first approve\n                   this contract (or their chosen conduit if indicated)\n                   before any tokens can be transferred. Also note that\n                   contract recipients of ERC1155 consideration items must\n                   implement `onERC1155Received` in order to receive those\n                   items.\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "fb0f3ee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36371,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36370,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "3634:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "3634:10:84"
              },
              {
                "id": 36373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36372,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45506,
                  "src": "3653:12:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "3653:12:84"
              }
            ],
            "name": "fulfillBasicOrder",
            "nameLocation": "3516:17:84",
            "overrides": {
              "id": 36369,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3617:8:84"
            },
            "parameters": {
              "id": 36368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36367,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "3564:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36384,
                  "src": "3534:40:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BasicOrderParameters_$5097_calldata_ptr",
                    "typeString": "struct BasicOrderParameters"
                  },
                  "typeName": {
                    "id": 36366,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36365,
                      "name": "BasicOrderParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5097,
                      "src": "3534:20:84"
                    },
                    "referencedDeclaration": 5097,
                    "src": "3534:20:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BasicOrderParameters_$5097_storage_ptr",
                      "typeString": "struct BasicOrderParameters"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3533:42:84"
            },
            "returnParameters": {
              "id": 36376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36375,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "3688:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36384,
                  "src": "3683:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36374,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3682:16:84"
            },
            "scope": 36829,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36418,
            "nodeType": "FunctionDefinition",
            "src": "5167:549:84",
            "nodes": [],
            "body": {
              "id": 36417,
              "nodeType": "Block",
              "src": "5367:349:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36400,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36398,
                      "src": "5480:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 36403,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36388,
                              "src": "5562:5:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$5136_calldata_ptr",
                                "typeString": "struct Order calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Order_$5136_calldata_ptr",
                                "typeString": "struct Order calldata"
                              }
                            ],
                            "id": 36402,
                            "name": "_convertOrderToAdvanced",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44440,
                            "src": "5538:23:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$5136_calldata_ptr_$returns$_t_struct$_AdvancedOrder_$5148_memory_ptr_$",
                              "typeString": "function (struct Order calldata) pure returns (struct AdvancedOrder memory)"
                            }
                          },
                          "id": 36404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5538:30:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$5148_memory_ptr",
                            "typeString": "struct AdvancedOrder memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5605:1:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5582:22:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 36406,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 36405,
                                  "name": "CriteriaResolver",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 5170,
                                  "src": "5586:16:84"
                                },
                                "referencedDeclaration": 5170,
                                "src": "5586:16:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CriteriaResolver_$5170_storage_ptr",
                                  "typeString": "struct CriteriaResolver"
                                }
                              },
                              "id": 36407,
                              "nodeType": "ArrayTypeName",
                              "src": "5586:18:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_storage_$dyn_storage_ptr",
                                "typeString": "struct CriteriaResolver[]"
                              }
                            }
                          },
                          "id": 36410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5582:25:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct CriteriaResolver memory[] memory"
                          }
                        },
                        {
                          "id": 36411,
                          "name": "fulfillerConduitKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36390,
                          "src": "5656:19:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 36412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5689:3:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5689:10:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$5148_memory_ptr",
                            "typeString": "struct AdvancedOrder memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct CriteriaResolver memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36401,
                        "name": "_validateAndFulfillAdvancedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44150,
                        "src": "5492:32:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AdvancedOrder_$5148_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (struct AdvancedOrder memory,struct CriteriaResolver memory[] memory,bytes32,address) returns (bool)"
                        }
                      },
                      "id": 36414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5492:217:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5480:229:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36416,
                  "nodeType": "ExpressionStatement",
                  "src": "5480:229:84"
                }
              ]
            },
            "baseFunctions": [
              2118
            ],
            "documentation": {
              "id": 36385,
              "nodeType": "StructuredDocumentation",
              "src": "3828:1334:84",
              "text": " @notice Fulfill an order with an arbitrary number of items for offer and\n         consideration. Note that this function does not support\n         criteria-based orders or partial filling of orders (though\n         filling the remainder of a partially-filled order is supported).\n @param order               The order to fulfill. Note that both the\n                            offerer and the fulfiller must first approve\n                            this contract (or the corresponding conduit if\n                            indicated) to transfer any relevant tokens on\n                            their behalf and that contracts must implement\n                            `onERC1155Received` to receive ERC1155 tokens\n                            as consideration.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used (and direct approvals set on\n                            Consideration).\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "b3a34c4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36393,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "5298:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "5298:10:84"
              },
              {
                "id": 36396,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36395,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45506,
                  "src": "5317:12:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "5317:12:84"
              }
            ],
            "name": "fulfillOrder",
            "nameLocation": "5176:12:84",
            "overrides": {
              "id": 36392,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5281:8:84"
            },
            "parameters": {
              "id": 36391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36388,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "5204:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36418,
                  "src": "5189:20:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5136_calldata_ptr",
                    "typeString": "struct Order"
                  },
                  "typeName": {
                    "id": 36387,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36386,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5136,
                      "src": "5189:5:84"
                    },
                    "referencedDeclaration": 5136,
                    "src": "5189:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5136_storage_ptr",
                      "typeString": "struct Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36390,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "5219:19:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36418,
                  "src": "5211:27:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36389,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5188:51:84"
            },
            "returnParameters": {
              "id": 36399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36398,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "5352:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36418,
                  "src": "5347:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36397,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5347:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5346:16:84"
            },
            "scope": 36829,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36459,
            "nodeType": "FunctionDefinition",
            "src": "8401:595:84",
            "nodes": [],
            "body": {
              "id": 36458,
              "nodeType": "Block",
              "src": "8729:267:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36440,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36438,
                      "src": "8782:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36442,
                          "name": "advancedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36422,
                          "src": "8840:13:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$5148_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata"
                          }
                        },
                        {
                          "id": 36443,
                          "name": "criteriaResolvers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36426,
                          "src": "8867:17:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          }
                        },
                        {
                          "id": 36444,
                          "name": "fulfillerConduitKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36428,
                          "src": "8898:19:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 36450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 36445,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36430,
                              "src": "8931:9:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 36448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8952:1:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 36447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8944:7:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 36446,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8944:7:84",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 36449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8944:10:84",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8931:23:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 36453,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36430,
                            "src": "8970:9:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 36454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8931:48:84",
                          "trueExpression": {
                            "expression": {
                              "id": 36451,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8957:3:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 36452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8957:10:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$5148_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36441,
                        "name": "_validateAndFulfillAdvancedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44150,
                        "src": "8794:32:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AdvancedOrder_$5148_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (struct AdvancedOrder memory,struct CriteriaResolver memory[] memory,bytes32,address) returns (bool)"
                        }
                      },
                      "id": 36455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8794:195:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8782:207:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36457,
                  "nodeType": "ExpressionStatement",
                  "src": "8782:207:84"
                }
              ]
            },
            "baseFunctions": [
              2135
            ],
            "documentation": {
              "id": 36419,
              "nodeType": "StructuredDocumentation",
              "src": "5722:2674:84",
              "text": " @notice Fill an order, fully or partially, with an arbitrary number of\n         items for offer and consideration alongside criteria resolvers\n         containing specific token identifiers and associated proofs.\n @param advancedOrder       The order to fulfill along with the fraction\n                            of the order to attempt to fill. Note that\n                            both the offerer and the fulfiller must first\n                            approve this contract (or their proxy if\n                            indicated by the order) to transfer any\n                            relevant tokens on their behalf and that\n                            contracts must implement `onERC1155Received`\n                            to receive ERC1155 tokens as consideration.\n                            Also note that all offer and consideration\n                            components must have no remainder after\n                            multiplication of the respective amount with\n                            the supplied fraction for the partial fill to\n                            be considered valid.\n @param criteriaResolvers   An array where each element contains a\n                            reference to a specific offer or\n                            consideration, a token identifier, and a proof\n                            that the supplied token identifier is\n                            contained in the merkle root held by the item\n                            in question's criteria element. Note that an\n                            empty criteria indicates that any\n                            (transferable) token identifier on the token\n                            in question is valid and that no associated\n                            proof needs to be supplied.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used (and direct approvals set on\n                            Consideration).\n @param recipient           The intended recipient for all received items,\n                            with `address(0)` indicating that the caller\n                            should receive the items.\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "e7acab24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36434,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36433,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "8660:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "8660:10:84"
              },
              {
                "id": 36436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36435,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45506,
                  "src": "8679:12:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "8679:12:84"
              }
            ],
            "name": "fulfillAdvancedOrder",
            "nameLocation": "8410:20:84",
            "overrides": {
              "id": 36432,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8643:8:84"
            },
            "parameters": {
              "id": 36431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36422,
                  "mutability": "mutable",
                  "name": "advancedOrder",
                  "nameLocation": "8463:13:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36459,
                  "src": "8440:36:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AdvancedOrder_$5148_calldata_ptr",
                    "typeString": "struct AdvancedOrder"
                  },
                  "typeName": {
                    "id": 36421,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36420,
                      "name": "AdvancedOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5148,
                      "src": "8440:13:84"
                    },
                    "referencedDeclaration": 5148,
                    "src": "8440:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdvancedOrder_$5148_storage_ptr",
                      "typeString": "struct AdvancedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36426,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "8514:17:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36459,
                  "src": "8486:45:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36424,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36423,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5170,
                        "src": "8486:16:84"
                      },
                      "referencedDeclaration": 5170,
                      "src": "8486:16:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$5170_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 36425,
                    "nodeType": "ArrayTypeName",
                    "src": "8486:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36428,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "8549:19:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36459,
                  "src": "8541:27:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36427,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8541:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36430,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8586:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36459,
                  "src": "8578:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8578:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8430:171:84"
            },
            "returnParameters": {
              "id": 36439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36438,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "8714:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36459,
                  "src": "8709:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36437,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8709:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8708:16:84"
            },
            "scope": 36829,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36529,
            "nodeType": "FunctionDefinition",
            "src": "11991:1239:84",
            "nodes": [],
            "body": {
              "id": 36528,
              "nodeType": "Block",
              "src": "12436:794:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    36497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36497,
                      "mutability": "mutable",
                      "name": "advancedOrders",
                      "nameLocation": "12517:14:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 36528,
                      "src": "12494:37:84",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AdvancedOrder[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36495,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 36494,
                            "name": "AdvancedOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5148,
                            "src": "12494:13:84"
                          },
                          "referencedDeclaration": 5148,
                          "src": "12494:13:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$5148_storage_ptr",
                            "typeString": "struct AdvancedOrder"
                          }
                        },
                        "id": 36496,
                        "nodeType": "ArrayTypeName",
                        "src": "12494:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_storage_$dyn_storage_ptr",
                          "typeString": "struct AdvancedOrder[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36501,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36499,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36464,
                        "src": "12572:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      ],
                      "id": 36498,
                      "name": "_convertOrdersToAdvanced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44491,
                      "src": "12534:24:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct Order calldata[] calldata) pure returns (struct AdvancedOrder memory[] memory)"
                      }
                    },
                    "id": 36500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12534:54:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AdvancedOrder memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12494:94:84"
                },
                {
                  "assignments": [
                    36506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36506,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "12690:15:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 36528,
                      "src": "12654:51:84",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36504,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 36503,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40294,
                            "src": "12654:14:84"
                          },
                          "referencedDeclaration": 40294,
                          "src": "12654:14:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$40294_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 36505,
                        "nodeType": "ArrayTypeName",
                        "src": "12654:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36510,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36508,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36497,
                        "src": "12759:14:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 36507,
                      "name": "_convertAdvancedToOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44697,
                      "src": "12708:33:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 36509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12708:79:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12654:133:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36512,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36497,
                        "src": "12907:14:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 36513,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36506,
                        "src": "12939:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 36518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12995:1:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 36517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "12972:22:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 36515,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 36514,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5170,
                                "src": "12976:16:84"
                              },
                              "referencedDeclaration": 5170,
                              "src": "12976:16:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$5170_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 36516,
                            "nodeType": "ArrayTypeName",
                            "src": "12976:18:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 36519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12972:25:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "id": 36520,
                        "name": "offerFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36469,
                        "src": "13050:17:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 36521,
                        "name": "considerationFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36474,
                        "src": "13085:25:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 36522,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36476,
                        "src": "13128:19:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 36523,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13165:3:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 36524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13165:10:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36525,
                        "name": "maximumFulfilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36478,
                        "src": "13193:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 36511,
                      "name": "_fulfillAvailableAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42991,
                      "src": "12858:31:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,struct FulfillmentComponent calldata[] calldata[] calldata,struct FulfillmentComponent calldata[] calldata[] calldata,bytes32,address,uint256) returns (bool[] memory,struct Execution memory[] memory)"
                      }
                    },
                    "id": 36526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12858:365:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool[] memory,struct Execution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 36492,
                  "id": 36527,
                  "nodeType": "Return",
                  "src": "12839:384:84"
                }
              ]
            },
            "baseFunctions": [
              2164
            ],
            "documentation": {
              "id": 36460,
              "nodeType": "StructuredDocumentation",
              "src": "9002:2984:84",
              "text": " @notice Attempt to fill a group of orders, each with an arbitrary number\n         of items for offer and consideration. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n         Note that this function does not support criteria-based orders or\n         partial filling of orders (though filling the remainder of a\n         partially-filled order is supported).\n @param orders                    The orders to fulfill. Note that both\n                                  the offerer and the fulfiller must first\n                                  approve this contract (or the\n                                  corresponding conduit if indicated) to\n                                  transfer any relevant tokens on their\n                                  behalf and that contracts must implement\n                                  `onERC1155Received` to receive ERC1155\n                                  tokens as consideration.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used (and\n                                  direct approvals set on Consideration).\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
            },
            "functionSelector": "ed98a574",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36482,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36481,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "12321:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "12321:10:84"
              },
              {
                "id": 36484,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36483,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45506,
                  "src": "12340:12:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "12340:12:84"
              }
            ],
            "name": "fulfillAvailableOrders",
            "nameLocation": "12000:22:84",
            "overrides": {
              "id": 36480,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12304:8:84"
            },
            "parameters": {
              "id": 36479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36464,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "12049:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36529,
                  "src": "12032:23:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36462,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36461,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5136,
                        "src": "12032:5:84"
                      },
                      "referencedDeclaration": 5136,
                      "src": "12032:5:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$5136_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 36463,
                    "nodeType": "ArrayTypeName",
                    "src": "12032:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$5136_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36469,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "12099:17:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36529,
                  "src": "12065:51:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 36466,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 36465,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5184,
                          "src": "12065:20:84"
                        },
                        "referencedDeclaration": 5184,
                        "src": "12065:20:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$5184_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 36467,
                      "nodeType": "ArrayTypeName",
                      "src": "12065:22:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$5184_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 36468,
                    "nodeType": "ArrayTypeName",
                    "src": "12065:24:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36474,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "12160:25:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36529,
                  "src": "12126:59:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 36471,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 36470,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5184,
                          "src": "12126:20:84"
                        },
                        "referencedDeclaration": 5184,
                        "src": "12126:20:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$5184_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 36472,
                      "nodeType": "ArrayTypeName",
                      "src": "12126:22:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$5184_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 36473,
                    "nodeType": "ArrayTypeName",
                    "src": "12126:24:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36476,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "12203:19:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36529,
                  "src": "12195:27:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36475,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12195:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36478,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "12240:16:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36529,
                  "src": "12232:24:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12232:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12022:240:84"
            },
            "returnParameters": {
              "id": 36492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36487,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "12384:15:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36529,
                  "src": "12370:29:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36485,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "12370:4:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 36486,
                    "nodeType": "ArrayTypeName",
                    "src": "12370:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36491,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "12420:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36529,
                  "src": "12401:29:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36489,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36488,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5192,
                        "src": "12401:9:84"
                      },
                      "referencedDeclaration": 5192,
                      "src": "12401:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$5192_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 36490,
                    "nodeType": "ArrayTypeName",
                    "src": "12401:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5192_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12369:62:84"
            },
            "scope": 36829,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36599,
            "nodeType": "FunctionDefinition",
            "src": "17596:1186:84",
            "nodes": [],
            "body": {
              "id": 36598,
              "nodeType": "Block",
              "src": "18145:637:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    36573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36573,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "18247:15:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 36598,
                      "src": "18211:51:84",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36571,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 36570,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40294,
                            "src": "18211:14:84"
                          },
                          "referencedDeclaration": 40294,
                          "src": "18211:14:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$40294_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 36572,
                        "nodeType": "ArrayTypeName",
                        "src": "18211:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36577,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36575,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36534,
                        "src": "18316:14:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 36574,
                      "name": "_convertAdvancedToOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44697,
                      "src": "18265:33:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 36576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18265:79:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18211:133:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36579,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36534,
                        "src": "18464:14:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 36580,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36573,
                        "src": "18496:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "id": 36581,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36538,
                        "src": "18529:17:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "id": 36582,
                        "name": "offerFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36543,
                        "src": "18564:17:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 36583,
                        "name": "considerationFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36548,
                        "src": "18599:25:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 36584,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36550,
                        "src": "18642:19:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 36590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 36585,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36552,
                            "src": "18679:9:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 36588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18700:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 36587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18692:7:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 36586,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18692:7:84",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 36589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18692:10:84",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18679:23:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 36593,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36552,
                          "src": "18718:9:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 36594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "18679:48:84",
                        "trueExpression": {
                          "expression": {
                            "id": 36591,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "18705:3:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "18705:10:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36595,
                        "name": "maximumFulfilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36554,
                        "src": "18745:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 36578,
                      "name": "_fulfillAvailableAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42991,
                      "src": "18415:31:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$40294_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,struct FulfillmentComponent calldata[] calldata[] calldata,struct FulfillmentComponent calldata[] calldata[] calldata,bytes32,address,uint256) returns (bool[] memory,struct Execution memory[] memory)"
                      }
                    },
                    "id": 36596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18415:360:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool[] memory,struct Execution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 36568,
                  "id": 36597,
                  "nodeType": "Return",
                  "src": "18396:379:84"
                }
              ]
            },
            "baseFunctions": [
              2199
            ],
            "documentation": {
              "id": 36530,
              "nodeType": "StructuredDocumentation",
              "src": "13236:4355:84",
              "text": " @notice Attempt to fill a group of orders, fully or partially, with an\n         arbitrary number of items for offer and consideration per order\n         alongside criteria resolvers containing specific token\n         identifiers and associated proofs. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n @param advancedOrders            The orders to fulfill along with the\n                                  fraction of those orders to attempt to\n                                  fill. Note that both the offerer and the\n                                  fulfiller must first approve this\n                                  contract (or their proxy if indicated by\n                                  the order) to transfer any relevant\n                                  tokens on their behalf and that\n                                  contracts must implement\n                                  `onERC1155Received` in order to receive\n                                  ERC1155 tokens as consideration. Also\n                                  note that all offer and consideration\n                                  components must have no remainder after\n                                  multiplication of the respective amount\n                                  with the supplied fraction for an\n                                  order's partial fill amount to be\n                                  considered valid.\n @param criteriaResolvers         An array where each element contains a\n                                  reference to a specific offer or\n                                  consideration, a token identifier, and a\n                                  proof that the supplied token identifier\n                                  is contained in the merkle root held by\n                                  the item in question's criteria element.\n                                  Note that an empty criteria indicates\n                                  that any (transferable) token\n                                  identifier on the token in question is\n                                  valid and that no associated proof needs\n                                  to be supplied.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used (and\n                                  direct approvals set on Consideration).\n @param maximumFulfilled          The maximum number of orders to fulfill.\n * @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
            },
            "functionSelector": "87201b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36558,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36557,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "18030:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "18030:10:84"
              },
              {
                "id": 36560,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36559,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45506,
                  "src": "18049:12:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "18049:12:84"
              }
            ],
            "name": "fulfillAvailableAdvancedOrders",
            "nameLocation": "17605:30:84",
            "overrides": {
              "id": 36556,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18013:8:84"
            },
            "parameters": {
              "id": 36555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36534,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "17668:14:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "17645:37:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36532,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36531,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5148,
                        "src": "17645:13:84"
                      },
                      "referencedDeclaration": 5148,
                      "src": "17645:13:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$5148_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 36533,
                    "nodeType": "ArrayTypeName",
                    "src": "17645:15:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36538,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "17720:17:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "17692:45:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36536,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36535,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5170,
                        "src": "17692:16:84"
                      },
                      "referencedDeclaration": 5170,
                      "src": "17692:16:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$5170_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 36537,
                    "nodeType": "ArrayTypeName",
                    "src": "17692:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36543,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "17781:17:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "17747:51:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 36540,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 36539,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5184,
                          "src": "17747:20:84"
                        },
                        "referencedDeclaration": 5184,
                        "src": "17747:20:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$5184_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 36541,
                      "nodeType": "ArrayTypeName",
                      "src": "17747:22:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$5184_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 36542,
                    "nodeType": "ArrayTypeName",
                    "src": "17747:24:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36548,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "17842:25:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "17808:59:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 36545,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 36544,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5184,
                          "src": "17808:20:84"
                        },
                        "referencedDeclaration": 5184,
                        "src": "17808:20:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$5184_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 36546,
                      "nodeType": "ArrayTypeName",
                      "src": "17808:22:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$5184_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 36547,
                    "nodeType": "ArrayTypeName",
                    "src": "17808:24:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$5184_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36550,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "17885:19:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "17877:27:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36549,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17877:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36552,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "17922:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "17914:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17914:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36554,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "17949:16:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "17941:24:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17941:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17635:336:84"
            },
            "returnParameters": {
              "id": 36568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36563,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "18093:15:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "18079:29:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36561,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "18079:4:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 36562,
                    "nodeType": "ArrayTypeName",
                    "src": "18079:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36567,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "18129:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36599,
                  "src": "18110:29:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36565,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36564,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5192,
                        "src": "18110:9:84"
                      },
                      "referencedDeclaration": 5192,
                      "src": "18110:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$5192_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 36566,
                    "nodeType": "ArrayTypeName",
                    "src": "18110:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5192_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18078:62:84"
            },
            "scope": 36829,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36634,
            "nodeType": "FunctionDefinition",
            "src": "20281:554:84",
            "nodes": [],
            "body": {
              "id": 36633,
              "nodeType": "Block",
              "src": "20528:307:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 36622,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36604,
                            "src": "20699:6:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            }
                          ],
                          "id": 36621,
                          "name": "_convertOrdersToAdvanced",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44491,
                          "src": "20674:24:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct Order calldata[] calldata) pure returns (struct AdvancedOrder memory[] memory)"
                          }
                        },
                        "id": 36623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20674:32:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 36628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20747:1:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 36627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "20724:22:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 36625,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 36624,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5170,
                                "src": "20728:16:84"
                              },
                              "referencedDeclaration": 5170,
                              "src": "20728:16:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$5170_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 36626,
                            "nodeType": "ArrayTypeName",
                            "src": "20728:18:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 36629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20724:25:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "id": 36630,
                        "name": "fulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36608,
                        "src": "20802:12:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5179_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5179_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      ],
                      "id": 36620,
                      "name": "_matchAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43893,
                      "src": "20636:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$5179_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment calldata[] calldata) returns (struct Execution memory[] memory)"
                      }
                    },
                    "id": 36631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20636:192:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "functionReturnParameters": 36619,
                  "id": 36632,
                  "nodeType": "Return",
                  "src": "20617:211:84"
                }
              ]
            },
            "baseFunctions": [
              2215
            ],
            "documentation": {
              "id": 36600,
              "nodeType": "StructuredDocumentation",
              "src": "18788:1488:84",
              "text": " @notice Match an arbitrary number of orders, each with an arbitrary\n         number of items for offer and consideration along with a set of\n         fulfillments allocating offer components to consideration\n         components. Note that this function does not support\n         criteria-based or partial filling of orders (though filling the\n         remainder of a partially-filled order is supported).\n @param orders            The orders to match. Note that both the offerer\n                          and fulfiller on each order must first approve\n                          this contract (or their proxy if indicated by\n                          the order) to transfer any relevant tokens on\n                          their behalf and each consideration recipient\n                          must implement `onERC1155Received` in order to\n                          receive ERC1155 tokens.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "a8174404",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36611,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "20444:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "20444:10:84"
              },
              {
                "id": 36614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36613,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45506,
                  "src": "20463:12:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "20463:12:84"
              }
            ],
            "name": "matchOrders",
            "nameLocation": "20290:11:84",
            "overrides": {
              "id": 36610,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20427:8:84"
            },
            "parameters": {
              "id": 36609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36604,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "20328:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36634,
                  "src": "20311:23:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36602,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36601,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5136,
                        "src": "20311:5:84"
                      },
                      "referencedDeclaration": 5136,
                      "src": "20311:5:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$5136_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 36603,
                    "nodeType": "ArrayTypeName",
                    "src": "20311:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$5136_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36608,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "20367:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36634,
                  "src": "20344:35:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5179_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36606,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36605,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5179,
                        "src": "20344:11:84"
                      },
                      "referencedDeclaration": 5179,
                      "src": "20344:11:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$5179_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 36607,
                    "nodeType": "ArrayTypeName",
                    "src": "20344:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5179_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20301:84:84"
            },
            "returnParameters": {
              "id": 36619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36618,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "20512:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36634,
                  "src": "20493:29:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36616,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36615,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5192,
                        "src": "20493:9:84"
                      },
                      "referencedDeclaration": 5192,
                      "src": "20493:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$5192_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 36617,
                    "nodeType": "ArrayTypeName",
                    "src": "20493:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5192_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20492:31:84"
            },
            "scope": 36829,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36666,
            "nodeType": "FunctionDefinition",
            "src": "23266:570:84",
            "nodes": [],
            "body": {
              "id": 36665,
              "nodeType": "Block",
              "src": "23590:246:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36660,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36639,
                        "src": "23736:14:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 36661,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36643,
                        "src": "23768:17:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "id": 36662,
                        "name": "fulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36647,
                        "src": "23803:12:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5179_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5179_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      ],
                      "id": 36659,
                      "name": "_matchAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43893,
                      "src": "23698:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$5170_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$5179_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment calldata[] calldata) returns (struct Execution memory[] memory)"
                      }
                    },
                    "id": 36663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23698:131:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "functionReturnParameters": 36658,
                  "id": 36664,
                  "nodeType": "Return",
                  "src": "23679:150:84"
                }
              ]
            },
            "baseFunctions": [
              2235
            ],
            "documentation": {
              "id": 36635,
              "nodeType": "StructuredDocumentation",
              "src": "20841:2420:84",
              "text": " @notice Match an arbitrary number of full or partial orders, each with an\n         arbitrary number of items for offer and consideration, supplying\n         criteria resolvers containing specific token identifiers and\n         associated proofs as well as fulfillments allocating offer\n         components to consideration components.\n @param advancedOrders    The advanced orders to match. Note that both the\n                          offerer and fulfiller on each order must first\n                          approve this contract (or their proxy if\n                          indicated by the order) to transfer any relevant\n                          tokens on their behalf and each consideration\n                          recipient must implement `onERC1155Received` in\n                          order to receive ERC1155 tokens. Also note that\n                          the offer and consideration components for each\n                          order must have no remainder after multiplying\n                          the respective amount with the supplied fraction\n                          in order for the group of partial fills to be\n                          considered valid.\n @param criteriaResolvers An array where each element contains a reference\n                          to a specific order as well as that order's\n                          offer or consideration, a token identifier, and\n                          a proof that the supplied token identifier is\n                          contained in the order's merkle root. Note that\n                          an empty root indicates that any (transferable)\n                          token identifier is valid and that no associated\n                          proof needs to be supplied.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "55944a42",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36650,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "23506:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "23506:10:84"
              },
              {
                "id": 36653,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36652,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45506,
                  "src": "23525:12:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "23525:12:84"
              }
            ],
            "name": "matchAdvancedOrders",
            "nameLocation": "23275:19:84",
            "overrides": {
              "id": 36649,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23489:8:84"
            },
            "parameters": {
              "id": 36648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36639,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "23327:14:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36666,
                  "src": "23304:37:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36637,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36636,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5148,
                        "src": "23304:13:84"
                      },
                      "referencedDeclaration": 5148,
                      "src": "23304:13:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$5148_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 36638,
                    "nodeType": "ArrayTypeName",
                    "src": "23304:15:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5148_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36643,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "23379:17:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36666,
                  "src": "23351:45:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36641,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36640,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5170,
                        "src": "23351:16:84"
                      },
                      "referencedDeclaration": 5170,
                      "src": "23351:16:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$5170_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 36642,
                    "nodeType": "ArrayTypeName",
                    "src": "23351:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5170_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36647,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "23429:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36666,
                  "src": "23406:35:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5179_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36645,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36644,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5179,
                        "src": "23406:11:84"
                      },
                      "referencedDeclaration": 5179,
                      "src": "23406:11:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$5179_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 36646,
                    "nodeType": "ArrayTypeName",
                    "src": "23406:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5179_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23294:153:84"
            },
            "returnParameters": {
              "id": 36658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36657,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "23574:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36666,
                  "src": "23555:29:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$5192_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36655,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36654,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5192,
                        "src": "23555:9:84"
                      },
                      "referencedDeclaration": 5192,
                      "src": "23555:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$5192_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 36656,
                    "nodeType": "ArrayTypeName",
                    "src": "23555:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5192_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23554:31:84"
            },
            "scope": 36829,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36686,
            "nodeType": "FunctionDefinition",
            "src": "24177:215:84",
            "nodes": [],
            "body": {
              "id": 36685,
              "nodeType": "Block",
              "src": "24318:74:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36679,
                      "name": "cancelled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36677,
                      "src": "24358:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36681,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36671,
                          "src": "24378:6:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$5009_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct OrderComponents calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$5009_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct OrderComponents calldata[] calldata"
                          }
                        ],
                        "id": 36680,
                        "name": "_cancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45316,
                        "src": "24370:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_OrderComponents_$5009_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct OrderComponents calldata[] calldata) returns (bool)"
                        }
                      },
                      "id": 36682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24370:15:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24358:27:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36684,
                  "nodeType": "ExpressionStatement",
                  "src": "24358:27:84"
                }
              ]
            },
            "baseFunctions": [
              2245
            ],
            "documentation": {
              "id": 36667,
              "nodeType": "StructuredDocumentation",
              "src": "23842:330:84",
              "text": " @notice Cancel an arbitrary number of orders. Note that only the offerer\n         or the zone of a given order may cancel it.\n @param orders The orders to cancel.\n @return cancelled A boolean indicating whether the supplied orders have\n         been successfully cancelled."
            },
            "functionSelector": "fd9f1e10",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36675,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36674,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "24270:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "24270:10:84"
              }
            ],
            "name": "cancel",
            "nameLocation": "24186:6:84",
            "overrides": {
              "id": 36673,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24253:8:84"
            },
            "parameters": {
              "id": 36672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36671,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "24220:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36686,
                  "src": "24193:33:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OrderComponents_$5009_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderComponents[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36669,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36668,
                        "name": "OrderComponents",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5009,
                        "src": "24193:15:84"
                      },
                      "referencedDeclaration": 5009,
                      "src": "24193:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderComponents_$5009_storage_ptr",
                        "typeString": "struct OrderComponents"
                      }
                    },
                    "id": 36670,
                    "nodeType": "ArrayTypeName",
                    "src": "24193:17:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderComponents_$5009_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderComponents[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24192:35:84"
            },
            "returnParameters": {
              "id": 36678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36677,
                  "mutability": "mutable",
                  "name": "cancelled",
                  "nameLocation": "24303:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36686,
                  "src": "24298:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36676,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24298:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24297:16:84"
            },
            "scope": 36829,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36706,
            "nodeType": "FunctionDefinition",
            "src": "24898:211:84",
            "nodes": [],
            "body": {
              "id": 36705,
              "nodeType": "Block",
              "src": "25031:78:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36699,
                      "name": "validated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36697,
                      "src": "25073:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36701,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36691,
                          "src": "25095:6:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          }
                        ],
                        "id": 36700,
                        "name": "_validate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45420,
                        "src": "25085:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct Order calldata[] calldata) returns (bool)"
                        }
                      },
                      "id": 36702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25085:17:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25073:29:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36704,
                  "nodeType": "ExpressionStatement",
                  "src": "25073:29:84"
                }
              ]
            },
            "baseFunctions": [
              2255
            ],
            "documentation": {
              "id": 36687,
              "nodeType": "StructuredDocumentation",
              "src": "24398:495:84",
              "text": " @notice Validate an arbitrary number of orders, thereby registering them\n         as valid and allowing the fulfiller to skip verification. Note\n         that anyone can validate a signed order but only the offerer can\n         validate an order without supplying a signature.\n @param orders The orders to validate.\n @return validated A boolean indicating whether the supplied orders have\n         been successfully validated."
            },
            "functionSelector": "88147732",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36695,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36694,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "24983:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "24983:10:84"
              }
            ],
            "name": "validate",
            "nameLocation": "24907:8:84",
            "overrides": {
              "id": 36693,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24966:8:84"
            },
            "parameters": {
              "id": 36692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36691,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "24933:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36706,
                  "src": "24916:23:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$5136_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36689,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36688,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5136,
                        "src": "24916:5:84"
                      },
                      "referencedDeclaration": 5136,
                      "src": "24916:5:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$5136_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 36690,
                    "nodeType": "ArrayTypeName",
                    "src": "24916:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$5136_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24915:25:84"
            },
            "returnParameters": {
              "id": 36698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36697,
                  "mutability": "mutable",
                  "name": "validated",
                  "nameLocation": "25016:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36706,
                  "src": "25011:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36696,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25011:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25010:16:84"
            },
            "scope": 36829,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36721,
            "nodeType": "FunctionDefinition",
            "src": "25372:234:84",
            "nodes": [],
            "body": {
              "id": 36720,
              "nodeType": "Block",
              "src": "25494:112:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36715,
                      "name": "newCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36713,
                      "src": "25567:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 36716,
                        "name": "_incrementCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40350,
                        "src": "25580:17:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () returns (uint256)"
                        }
                      },
                      "id": 36717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25580:19:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25567:32:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36719,
                  "nodeType": "ExpressionStatement",
                  "src": "25567:32:84"
                }
              ]
            },
            "baseFunctions": [
              2261
            ],
            "documentation": {
              "id": 36707,
              "nodeType": "StructuredDocumentation",
              "src": "25115:252:84",
              "text": " @notice Cancel all orders from a given offerer with a given zone in bulk\n         by incrementing a counter. Note that only the offerer may\n         increment the counter.\n @return newCounter The new counter."
            },
            "functionSelector": "5b34b966",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36711,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36710,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45519,
                  "src": "25442:10:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "25442:10:84"
              }
            ],
            "name": "incrementCounter",
            "nameLocation": "25381:16:84",
            "overrides": {
              "id": 36709,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25425:8:84"
            },
            "parameters": {
              "id": 36708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25397:2:84"
            },
            "returnParameters": {
              "id": 36714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36713,
                  "mutability": "mutable",
                  "name": "newCounter",
                  "nameLocation": "25478:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36721,
                  "src": "25470:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25470:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25469:20:84"
            },
            "scope": 36829,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36764,
            "nodeType": "FunctionDefinition",
            "src": "25790:747:84",
            "nodes": [],
            "body": {
              "id": 36763,
              "nodeType": "Block",
              "src": "25931:606:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36731,
                      "name": "orderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36729,
                      "src": "26062:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 36734,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26137:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offerer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4983,
                              "src": "26137:13:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 36736,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26168:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "zone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4985,
                              "src": "26168:10:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 36738,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26196:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4989,
                              "src": "26196:11:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_OfferItem_$5021_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct OfferItem calldata[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 36740,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26225:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consideration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4993,
                              "src": "26225:19:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$5035_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConsiderationItem calldata[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 36742,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26262:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "orderType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4996,
                              "src": "26262:15:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OrderType_$4932",
                                "typeString": "enum OrderType"
                              }
                            },
                            {
                              "expression": {
                                "id": 36744,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26295:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4998,
                              "src": "26295:15:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 36746,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26328:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5000,
                              "src": "26328:13:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 36748,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26359:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "zoneHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5002,
                              "src": "26359:14:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 36750,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26391:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "salt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5004,
                              "src": "26391:10:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 36752,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36725,
                                "src": "26419:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 36753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "conduitKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5006,
                              "src": "26419:16:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 36754,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36725,
                                  "src": "26453:5:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                                    "typeString": "struct OrderComponents calldata"
                                  }
                                },
                                "id": 36755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "consideration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4993,
                                "src": "26453:19:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$5035_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct ConsiderationItem calldata[] calldata"
                                }
                              },
                              "id": 36756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "26453:26:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_OfferItem_$5021_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct OfferItem calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$5035_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConsiderationItem calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_enum$_OrderType_$4932",
                                "typeString": "enum OrderType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 36733,
                            "name": "OrderParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5130,
                            "src": "26104:15:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OrderParameters_$5130_storage_ptr_$",
                              "typeString": "type(struct OrderParameters storage pointer)"
                            }
                          },
                          "id": 36757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26104:389:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderParameters_$5130_memory_ptr",
                            "typeString": "struct OrderParameters memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 36758,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36725,
                            "src": "26507:5:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                              "typeString": "struct OrderComponents calldata"
                            }
                          },
                          "id": 36759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "counter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5008,
                          "src": "26507:13:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OrderParameters_$5130_memory_ptr",
                            "typeString": "struct OrderParameters memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 36732,
                        "name": "_deriveOrderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42766,
                        "src": "26074:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_OrderParameters_$5130_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (struct OrderParameters memory,uint256) view returns (bytes32)"
                        }
                      },
                      "id": 36760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26074:456:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "26062:468:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 36762,
                  "nodeType": "ExpressionStatement",
                  "src": "26062:468:84"
                }
              ]
            },
            "baseFunctions": [
              2270
            ],
            "documentation": {
              "id": 36722,
              "nodeType": "StructuredDocumentation",
              "src": "25612:173:84",
              "text": " @notice Retrieve the order hash for a given order.\n @param order The components of the order.\n @return orderHash the order hash."
            },
            "functionSelector": "79df72bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderHash",
            "nameLocation": "25799:12:84",
            "overrides": {
              "id": 36727,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25882:8:84"
            },
            "parameters": {
              "id": 36726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36725,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "25837:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36764,
                  "src": "25812:30:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderComponents_$5009_calldata_ptr",
                    "typeString": "struct OrderComponents"
                  },
                  "typeName": {
                    "id": 36724,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36723,
                      "name": "OrderComponents",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5009,
                      "src": "25812:15:84"
                    },
                    "referencedDeclaration": 5009,
                    "src": "25812:15:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderComponents_$5009_storage_ptr",
                      "typeString": "struct OrderComponents"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25811:32:84"
            },
            "returnParameters": {
              "id": 36730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36729,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "25916:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36764,
                  "src": "25908:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36728,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25908:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25907:19:84"
            },
            "scope": 36829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36784,
            "nodeType": "FunctionDefinition",
            "src": "27424:354:84",
            "nodes": [],
            "body": {
              "id": 36783,
              "nodeType": "Block",
              "src": "27669:109:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36780,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36767,
                        "src": "27761:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 36779,
                      "name": "_getOrderStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45452,
                      "src": "27745:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (bytes32) view returns (bool,bool,uint256,uint256)"
                      }
                    },
                    "id": 36781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27745:26:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 36778,
                  "id": 36782,
                  "nodeType": "Return",
                  "src": "27738:33:84"
                }
              ]
            },
            "baseFunctions": [
              2284
            ],
            "documentation": {
              "id": 36765,
              "nodeType": "StructuredDocumentation",
              "src": "26543:876:84",
              "text": " @notice Retrieve the status of a given order by hash, including whether\n         the order has been cancelled or validated and the fraction of the\n         order that has been filled.\n @param orderHash The order hash in question.\n @return isValidated A boolean indicating whether the order in question\n                     has been validated (i.e. previously approved or\n                     partially filled).\n @return isCancelled A boolean indicating whether the order in question\n                     has been cancelled.\n @return totalFilled The total portion of the order that has been filled\n                     (i.e. the \"numerator\").\n @return totalSize   The total size of the order that is either filled or\n                     unfilled (i.e. the \"denominator\")."
            },
            "functionSelector": "46423aa7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderStatus",
            "nameLocation": "27433:14:84",
            "overrides": {
              "id": 36769,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27505:8:84"
            },
            "parameters": {
              "id": 36768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36767,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "27456:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "27448:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36766,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27448:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27447:19:84"
            },
            "returnParameters": {
              "id": 36778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36771,
                  "mutability": "mutable",
                  "name": "isValidated",
                  "nameLocation": "27549:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "27544:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36770,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27544:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36773,
                  "mutability": "mutable",
                  "name": "isCancelled",
                  "nameLocation": "27579:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "27574:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36772,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27574:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36775,
                  "mutability": "mutable",
                  "name": "totalFilled",
                  "nameLocation": "27612:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "27604:19:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27604:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36777,
                  "mutability": "mutable",
                  "name": "totalSize",
                  "nameLocation": "27645:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "27637:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27637:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27530:134:84"
            },
            "scope": 36829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36800,
            "nodeType": "FunctionDefinition",
            "src": "27970:225:84",
            "nodes": [],
            "body": {
              "id": 36799,
              "nodeType": "Block",
              "src": "28092:103:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36793,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36791,
                      "src": "28158:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36795,
                          "name": "offerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36787,
                          "src": "28180:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36794,
                        "name": "_getCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40365,
                        "src": "28168:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 36796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28168:20:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28158:30:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36798,
                  "nodeType": "ExpressionStatement",
                  "src": "28158:30:84"
                }
              ]
            },
            "baseFunctions": [
              2292
            ],
            "documentation": {
              "id": 36785,
              "nodeType": "StructuredDocumentation",
              "src": "27784:181:84",
              "text": " @notice Retrieve the current counter for a given offerer.\n @param offerer The offerer in question.\n @return counter The current counter."
            },
            "functionSelector": "f07ec373",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounter",
            "nameLocation": "27979:10:84",
            "overrides": {
              "id": 36789,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28045:8:84"
            },
            "parameters": {
              "id": 36788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36787,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "27998:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36800,
                  "src": "27990:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27990:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27989:17:84"
            },
            "returnParameters": {
              "id": 36792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36791,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "28079:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36800,
                  "src": "28071:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28071:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28070:17:84"
            },
            "scope": 36829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36815,
            "nodeType": "FunctionDefinition",
            "src": "28500:303:84",
            "nodes": [],
            "body": {
              "id": 36814,
              "nodeType": "Block",
              "src": "28712:91:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36811,
                      "name": "_information",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42873,
                      "src": "28782:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$_t_bytes32_$_t_address_$",
                        "typeString": "function () view returns (string memory,bytes32,address)"
                      }
                    },
                    "id": 36812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28782:14:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(string memory,bytes32,address)"
                    }
                  },
                  "functionReturnParameters": 36810,
                  "id": 36813,
                  "nodeType": "Return",
                  "src": "28775:21:84"
                }
              ]
            },
            "baseFunctions": [
              2302
            ],
            "documentation": {
              "id": 36801,
              "nodeType": "StructuredDocumentation",
              "src": "28201:294:84",
              "text": " @notice Retrieve configuration information for this contract.\n @return version           The contract version.\n @return domainSeparator   The domain separator for this contract.\n @return conduitController The conduit Controller set for this contract."
            },
            "functionSelector": "f47b7740",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "information",
            "nameLocation": "28509:11:84",
            "overrides": {
              "id": 36803,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28561:8:84"
            },
            "parameters": {
              "id": 36802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28520:2:84"
            },
            "returnParameters": {
              "id": 36810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36805,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "28614:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36815,
                  "src": "28600:21:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36804,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "28600:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36807,
                  "mutability": "mutable",
                  "name": "domainSeparator",
                  "nameLocation": "28643:15:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36815,
                  "src": "28635:23:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36806,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28635:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36809,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "28680:17:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36815,
                  "src": "28672:25:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28672:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28586:121:84"
            },
            "scope": 36829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36828,
            "nodeType": "FunctionDefinition",
            "src": "28938:195:84",
            "nodes": [],
            "body": {
              "id": 36827,
              "nodeType": "Block",
              "src": "29050:83:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36822,
                      "name": "contractName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36820,
                      "src": "29104:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 36823,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42882,
                        "src": "29119:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
                          "typeString": "function () pure returns (string memory)"
                        }
                      },
                      "id": 36824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29119:7:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "29104:22:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 36826,
                  "nodeType": "ExpressionStatement",
                  "src": "29104:22:84"
                }
              ]
            },
            "baseFunctions": [
              2308
            ],
            "documentation": {
              "id": 36816,
              "nodeType": "StructuredDocumentation",
              "src": "28809:124:84",
              "text": " @notice Retrieve the name of this contract.\n @return contractName The name of this contract."
            },
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "28947:4:84",
            "overrides": {
              "id": 36818,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28992:8:84"
            },
            "parameters": {
              "id": 36817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28951:2:84"
            },
            "returnParameters": {
              "id": 36821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36820,
                  "mutability": "mutable",
                  "name": "contractName",
                  "nameLocation": "29032:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 36828,
                  "src": "29018:26:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36819,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "29018:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29017:28:84"
            },
            "scope": 36829,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36350,
              "name": "ConsiderationInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2309,
              "src": "1315:22:84"
            },
            "id": 36351,
            "nodeType": "InheritanceSpecifier",
            "src": "1315:22:84"
          },
          {
            "baseName": {
              "id": 36352,
              "name": "ReferenceOrderCombiner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44034,
              "src": "1343:22:84"
            },
            "id": 36353,
            "nodeType": "InheritanceSpecifier",
            "src": "1343:22:84"
          }
        ],
        "canonicalName": "ReferenceConsideration",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36349,
          "nodeType": "StructuredDocumentation",
          "src": "583:692:84",
          "text": " @title ReferenceConsideration\n @author 0age\n @custom:coauthor d1ll0n\n @custom:coauthor transmissions11\n @custom:version 1.1-reference\n @notice Consideration is a generalized ETH/ERC20/ERC721/ERC1155 marketplace.\n         It minimizes external calls to the greatest extent possible and\n         provides lightweight methods for common routes as well as more\n         flexible methods for composing advanced orders or groups of orders.\n         Each order contains an arbitrary number of items that may be spent\n         (the \"offer\") along with an arbitrary number of items that must be\n         received back by the indicated recipients (the \"consideration\")."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          36829,
          44034,
          42566,
          2367,
          44698,
          38158,
          1681,
          41095,
          2334,
          39964,
          45474,
          46232,
          2829,
          41651,
          45907,
          46064,
          45705,
          2674,
          38332,
          2734,
          40366,
          45520,
          42883,
          40231,
          2432,
          2085,
          2309
        ],
        "name": "ReferenceConsideration",
        "nameLocation": "1285:22:84",
        "scope": 36830,
        "usedErrors": [
          1680,
          2014,
          2017,
          2024,
          2027,
          2032,
          2041,
          2044,
          2051,
          2054,
          2059,
          2064,
          2067,
          2070,
          2075,
          2078,
          2081,
          2084,
          2315,
          2318,
          2321,
          2324,
          2327,
          2330,
          2333,
          2357,
          2360,
          2363,
          2366,
          2431,
          2664,
          2667,
          2670,
          2673,
          2680,
          2683,
          2686,
          2699,
          2714,
          2725,
          2730,
          2733,
          2828
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 84
}